
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftSTARSLASHLP MINUS NUMBER PLUS PROC RP SLASH STARinit : proc\n            | expressionexpression : expression PLUS termexpression : expression MINUS termexpression : termterm : term STAR factorterm : term SLASH factorterm : factorfactor : NUMBERfactor : LP expression RPproc : PROC LP RP'
    
_lr_action_items = {'PROC':([0,],[4,]),'NUMBER':([0,5,9,10,13,14,],[8,8,8,8,8,8,]),'LP':([0,4,5,9,10,13,14,],[5,11,5,5,5,5,5,]),'$end':([1,2,3,6,7,8,15,16,17,18,19,20,],[0,-1,-2,-5,-8,-9,-3,-4,-11,-10,-6,-7,]),'PLUS':([3,6,7,8,12,15,16,18,19,20,],[9,-5,-8,-9,9,-3,-4,-10,-6,-7,]),'MINUS':([3,6,7,8,12,15,16,18,19,20,],[10,-5,-8,-9,10,-3,-4,-10,-6,-7,]),'RP':([6,7,8,11,12,15,16,18,19,20,],[-5,-8,-9,17,18,-3,-4,-10,-6,-7,]),'STAR':([6,7,8,15,16,18,19,20,],[13,-8,-9,13,13,-10,-6,-7,]),'SLASH':([6,7,8,15,16,18,19,20,],[14,-8,-9,14,14,-10,-6,-7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'proc':([0,],[2,]),'expression':([0,5,],[3,12,]),'term':([0,5,9,10,],[6,6,15,16,]),'factor':([0,5,9,10,13,14,],[7,7,7,7,19,20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> proc','init',1,'p_init','myparser.py',10),
  ('init -> expression','init',1,'p_init','myparser.py',11),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','myparser.py',15),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','myparser.py',19),
  ('expression -> term','expression',1,'p_expression_term','myparser.py',23),
  ('term -> term STAR factor','term',3,'p_term_times','myparser.py',27),
  ('term -> term SLASH factor','term',3,'p_term_div','myparser.py',31),
  ('term -> factor','term',1,'p_term_factor','myparser.py',35),
  ('factor -> NUMBER','factor',1,'p_factor_num','myparser.py',39),
  ('factor -> LP expression RP','factor',3,'p_factor_expr','myparser.py',43),
  ('proc -> PROC LP RP','proc',3,'p_proc','myparser.py',47),
]
