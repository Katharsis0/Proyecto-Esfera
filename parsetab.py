
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftSTARSLASHUMINUSALEATORIO ALTER BOOL BREAK CALL CASE CHANGE COMMA COMMENT DEF DIF DIR ELSE EQUAL GT GTE ID INTEGER ISTRUE LED LP LT LTE MAIN MINUS MOVER NOT PLUS PRINT PROC REPEAT RP SEMICOLON SLASH STAR STRING THEN TYPE UNTIL VALUE WHEN WHILE ZAGZIG ZIGZAGinit : comment code\n            | commentcode : procedimientos main\n            | main procedimientos\n            | procedimientos main procedimientos\n            | main\n            | comment code\n            | code commentprocedimientos : procedimiento procedimientos\n                      | procedimiento\n\n    procedimiento : procproc : PROC ID LP instrucciones RP SEMICOLON main : MAIN LP instrucciones RP SEMICOLON\n             | MAIN LP RP SEMICOLONinstrucciones : instruccion instrucciones\n                     | instruccion  \n    instruccion : def\n                    | call\n                    | alter\n                    | not\n                    | print\n                    | iterative\n                    | case\n                    | mover\n                    | aleatorio\n                    | istrue\n                    | repeat\n                    | change\n                    | led\n                    | zigzag\n                    | zagzig\n                    | commentbreak : BREAK SEMICOLONdef : DEF LP ID COMMA TYPE COMMA value RP SEMICOLON\n            | DEF LP ID COMMA TYPE RP SEMICOLONcall : CALL LP ID RP SEMICOLONalter : ALTER LP ID COMMA factor RP SEMICOLON\n            | ALTER LP ID COMMA ID RP SEMICOLONnot : NOT LP ID RP SEMICOLONistrue : ISTRUE LP ID RP SEMICOLONprint : PRINT LP prints RP SEMICOLONprints : printexpr\n             | prints printexprprintexpr : STRINGprintexpr : IDiterative : WHILE LP condicion RP LP instrucciones RP SEMICOLON\n                | UNTIL LP instrucciones RP LP condicion RP SEMICOLON\n    case : CASE funciones SEMICOLON\n            | CASE ID funciones SEMICOLON\n    mover : MOVER LP DIR RP SEMICOLONaleatorio : ALEATORIO LP RP SEMICOLONzigzag : ZIGZAG LP RP SEMICOLONzagzig : ZAGZIG LP RP SEMICOLONled : LED LP RP SEMICOLONrepeat : REPEAT LP instrucciones break RP SEMICOLONvalue : factor\n            | BOOL\n            | expression\n            | ID\n            | not\n    funciones : funcion\n                | funciones funcion\n    funcion : when then\n                | when then elsewhen : WHEN LP condicion RP\n            | WHEN value\n    then : THEN LP instrucciones RP\n    else : ELSE LP instrucciones RP\n    condicion : oper GT oper\n                | oper LT oper\n                | value EQUAL value\n                | value DIF value\n                | oper GTE oper\n                | oper LTE oper\n                | istrue\n    oper : factor\n            | expression\n            | ID\n    change : ID LP value RP SEMICOLONexpression : expression PLUS termexpression : expression MINUS termexpression : termterm : term STAR factorterm : term SLASH factorterm : factorfactor : INTEGER\n    factor : MINUS expression %prec UMINUSfactor : LP expression RPcomment : COMMENT'
    
_lr_action_items = {'COMMENT':([0,2,3,4,5,7,8,10,12,13,14,15,16,17,19,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,55,57,66,75,80,107,144,147,151,155,156,157,158,161,166,169,170,171,182,185,186,197,199,200,201,206,207,208,],[3,3,-89,3,3,-6,-10,-11,3,-8,-3,-4,-9,3,-5,3,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,3,-14,3,3,-13,-48,-49,3,-51,-54,-52,-53,-12,-79,-36,-39,-41,3,3,-50,-40,-55,-35,-38,-37,-46,-47,-34,]),'$end':([1,2,3,5,7,8,10,12,13,14,15,16,19,57,80,158,],[0,-2,-89,-1,-6,-10,-11,-7,-8,-3,-4,-9,-5,-14,-13,-12,]),'MAIN':([2,3,4,6,8,10,16,158,],[9,-89,9,9,-10,-11,-9,-12,]),'PROC':([2,3,4,7,8,10,14,57,80,158,],[11,-89,11,11,11,-11,11,-14,-13,-12,]),'DEF':([3,17,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,55,66,75,107,144,147,151,155,156,157,161,166,169,170,171,182,185,186,197,199,200,201,206,207,208,],[-89,39,39,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,39,39,39,-48,-49,39,-51,-54,-52,-53,-79,-36,-39,-41,39,39,-50,-40,-55,-35,-38,-37,-46,-47,-34,]),'CALL':([3,17,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,55,66,75,107,144,147,151,155,156,157,161,166,169,170,171,182,185,186,197,199,200,201,206,207,208,],[-89,41,41,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,41,41,41,-48,-49,41,-51,-54,-52,-53,-79,-36,-39,-41,41,41,-50,-40,-55,-35,-38,-37,-46,-47,-34,]),'ALTER':([3,17,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,55,66,75,107,144,147,151,155,156,157,161,166,169,170,171,182,185,186,197,199,200,201,206,207,208,],[-89,42,42,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,42,42,42,-48,-49,42,-51,-54,-52,-53,-79,-36,-39,-41,42,42,-50,-40,-55,-35,-38,-37,-46,-47,-34,]),'NOT':([3,17,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,55,60,65,66,71,75,107,112,141,142,144,147,151,155,156,157,161,166,169,170,171,181,182,185,186,189,197,199,200,201,206,207,208,],[-89,43,43,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,43,43,43,43,43,43,-48,43,43,43,-49,43,-51,-54,-52,-53,-79,-36,-39,-41,43,43,43,-50,-40,43,-55,-35,-38,-37,-46,-47,-34,]),'PRINT':([3,17,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,55,66,75,107,144,147,151,155,156,157,161,166,169,170,171,182,185,186,197,199,200,201,206,207,208,],[-89,44,44,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,44,44,44,-48,-49,44,-51,-54,-52,-53,-79,-36,-39,-41,44,44,-50,-40,-55,-35,-38,-37,-46,-47,-34,]),'WHILE':([3,17,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,55,66,75,107,144,147,151,155,156,157,161,166,169,170,171,182,185,186,197,199,200,201,206,207,208,],[-89,45,45,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,45,45,45,-48,-49,45,-51,-54,-52,-53,-79,-36,-39,-41,45,45,-50,-40,-55,-35,-38,-37,-46,-47,-34,]),'UNTIL':([3,17,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,55,66,75,107,144,147,151,155,156,157,161,166,169,170,171,182,185,186,197,199,200,201,206,207,208,],[-89,46,46,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,46,46,46,-48,-49,46,-51,-54,-52,-53,-79,-36,-39,-41,46,46,-50,-40,-55,-35,-38,-37,-46,-47,-34,]),'CASE':([3,17,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,55,66,75,107,144,147,151,155,156,157,161,166,169,170,171,182,185,186,197,199,200,201,206,207,208,],[-89,47,47,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,47,47,47,-48,-49,47,-51,-54,-52,-53,-79,-36,-39,-41,47,47,-50,-40,-55,-35,-38,-37,-46,-47,-34,]),'MOVER':([3,17,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,55,66,75,107,144,147,151,155,156,157,161,166,169,170,171,182,185,186,197,199,200,201,206,207,208,],[-89,48,48,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,48,48,48,-48,-49,48,-51,-54,-52,-53,-79,-36,-39,-41,48,48,-50,-40,-55,-35,-38,-37,-46,-47,-34,]),'ALEATORIO':([3,17,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,55,66,75,107,144,147,151,155,156,157,161,166,169,170,171,182,185,186,197,199,200,201,206,207,208,],[-89,49,49,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,49,49,49,-48,-49,49,-51,-54,-52,-53,-79,-36,-39,-41,49,49,-50,-40,-55,-35,-38,-37,-46,-47,-34,]),'ISTRUE':([3,17,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,55,65,66,75,107,112,144,147,151,155,156,157,161,166,169,170,171,181,182,185,186,197,199,200,201,206,207,208,],[-89,50,50,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,50,50,50,50,-48,50,-49,50,-51,-54,-52,-53,-79,-36,-39,-41,50,50,50,-50,-40,-55,-35,-38,-37,-46,-47,-34,]),'REPEAT':([3,17,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,55,66,75,107,144,147,151,155,156,157,161,166,169,170,171,182,185,186,197,199,200,201,206,207,208,],[-89,51,51,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,51,51,51,-48,-49,51,-51,-54,-52,-53,-79,-36,-39,-41,51,51,-50,-40,-55,-35,-38,-37,-46,-47,-34,]),'ID':([3,11,17,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,47,55,59,60,61,62,63,64,65,66,71,74,75,95,96,97,98,107,112,132,135,137,138,139,140,141,142,144,147,151,155,156,157,161,166,169,170,171,181,182,185,186,189,197,199,200,201,206,207,208,],[-89,18,40,40,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,68,40,81,82,92,93,94,98,105,40,82,116,40,98,-42,-44,-45,-48,105,167,-43,175,175,175,175,82,82,-49,40,-51,-54,-52,-53,-79,-36,-39,-41,40,105,40,-50,-40,82,-55,-35,-38,-37,-46,-47,-34,]),'LED':([3,17,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,55,66,75,107,144,147,151,155,156,157,161,166,169,170,171,182,185,186,197,199,200,201,206,207,208,],[-89,52,52,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,52,52,52,-48,-49,52,-51,-54,-52,-53,-79,-36,-39,-41,52,52,-50,-40,-55,-35,-38,-37,-46,-47,-34,]),'ZIGZAG':([3,17,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,55,66,75,107,144,147,151,155,156,157,161,166,169,170,171,182,185,186,197,199,200,201,206,207,208,],[-89,53,53,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,53,53,53,-48,-49,53,-51,-54,-52,-53,-79,-36,-39,-41,53,53,-50,-40,-55,-35,-38,-37,-46,-47,-34,]),'ZAGZIG':([3,17,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,55,66,75,107,144,147,151,155,156,157,161,166,169,170,171,182,185,186,197,199,200,201,206,207,208,],[-89,54,54,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,54,54,54,-48,-49,54,-51,-54,-52,-53,-79,-36,-39,-41,54,54,-50,-40,-55,-35,-38,-37,-46,-47,-34,]),'RP':([3,17,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,58,73,76,77,78,79,82,84,85,86,87,88,89,91,92,94,95,96,97,98,99,102,103,106,107,114,116,123,124,128,135,144,148,149,151,153,155,156,157,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,179,180,183,185,186,188,193,194,195,197,198,199,200,201,206,207,208,],[-89,21,56,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-15,115,118,119,120,121,-59,125,-56,-57,-58,-60,-86,-82,131,133,134,-42,-44,-45,136,-75,-85,143,-48,150,152,160,-85,-87,-43,-49,184,160,-51,187,-54,-52,-53,190,-88,-79,-80,-81,-83,-84,-36,191,192,-39,-41,-69,-76,-77,-78,-70,-73,-74,-71,-72,196,-50,-40,-33,202,203,204,-55,205,-35,-38,-37,-46,-47,-34,]),'BREAK':([3,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,58,107,117,144,151,155,156,157,161,166,169,170,185,186,197,199,200,201,206,207,208,],[-89,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-15,-48,154,-49,-51,-54,-52,-53,-79,-36,-39,-41,-50,-40,-55,-35,-38,-37,-46,-47,-34,]),'LP':([9,18,39,40,41,42,43,44,45,46,48,49,50,51,52,53,54,60,65,71,83,90,111,112,126,127,129,130,132,136,137,138,139,140,141,142,143,146,181,189,],[17,55,59,60,61,62,63,64,65,66,72,73,74,75,76,77,78,83,83,112,83,83,147,83,83,83,83,83,83,171,83,83,83,83,83,83,181,182,83,83,]),'SEMICOLON':([21,56,67,69,108,109,110,115,118,119,120,121,125,131,133,134,145,150,152,154,187,190,191,192,196,202,203,204,205,],[57,80,107,-61,-62,144,-63,151,155,156,157,158,161,166,169,170,-64,185,186,188,197,199,200,201,-67,206,207,-68,208,]),'WHEN':([47,67,68,69,108,109,110,145,196,204,],[71,71,71,-61,-62,71,-63,-64,-67,-68,]),'BOOL':([60,65,71,112,141,142,181,189,],[86,86,86,86,86,86,86,86,]),'INTEGER':([60,65,71,83,90,112,126,127,129,130,132,137,138,139,140,141,142,181,189,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'MINUS':([60,65,71,83,85,87,89,90,91,103,104,112,123,124,126,127,128,129,130,132,137,138,139,140,141,142,149,160,162,163,164,165,173,174,181,189,],[90,90,90,90,-85,127,-86,90,-82,-85,127,90,127,-85,90,90,-87,90,90,90,90,90,90,90,90,90,127,-88,-80,-81,-83,-84,-85,127,90,90,]),'STRING':([64,95,96,97,98,135,],[97,97,-42,-44,-45,-43,]),'THEN':([70,82,85,86,87,88,89,91,113,124,128,160,162,163,164,165,169,184,],[111,-59,-56,-57,-58,-60,-86,-82,-66,-85,-87,-88,-80,-81,-83,-84,-39,-65,]),'DIR':([72,],[114,]),'COMMA':([81,93,159,],[122,132,189,]),'STAR':([85,89,91,103,124,128,160,162,163,164,165,173,],[-85,-86,129,-85,-85,-87,-88,129,129,-83,-84,-85,]),'SLASH':([85,89,91,103,124,128,160,162,163,164,165,173,],[-85,-86,130,-85,-85,-87,-88,130,130,-83,-84,-85,]),'PLUS':([85,87,89,91,103,104,123,124,128,149,160,162,163,164,165,173,174,],[-85,126,-86,-82,-85,126,126,-85,-87,126,-88,-80,-81,-83,-84,-85,126,]),'EQUAL':([86,88,89,91,101,103,104,105,124,128,149,160,162,163,164,165,169,],[-57,-60,-86,-82,141,-56,-58,-59,-85,-87,-58,-88,-80,-81,-83,-84,-39,]),'DIF':([86,88,89,91,101,103,104,105,124,128,149,160,162,163,164,165,169,],[-57,-60,-86,-82,142,-56,-58,-59,-85,-87,-58,-88,-80,-81,-83,-84,-39,]),'GT':([89,91,100,103,104,105,124,128,149,160,162,163,164,165,],[-86,-82,137,-76,-77,-78,-85,-87,-77,-88,-80,-81,-83,-84,]),'LT':([89,91,100,103,104,105,124,128,149,160,162,163,164,165,],[-86,-82,138,-76,-77,-78,-85,-87,-77,-88,-80,-81,-83,-84,]),'GTE':([89,91,100,103,104,105,124,128,149,160,162,163,164,165,],[-86,-82,139,-76,-77,-78,-85,-87,-77,-88,-80,-81,-83,-84,]),'LTE':([89,91,100,103,104,105,124,128,149,160,162,163,164,165,],[-86,-82,140,-76,-77,-78,-85,-87,-77,-88,-80,-81,-83,-84,]),'ELSE':([110,196,],[146,-67,]),'TYPE':([122,],[159,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'comment':([0,2,4,5,12,17,22,55,66,75,147,171,182,],[2,4,4,13,13,38,38,38,38,38,38,38,38,]),'code':([2,4,],[5,12,]),'procedimientos':([2,4,7,8,14,],[6,6,15,16,19,]),'main':([2,4,6,],[7,7,14,]),'procedimiento':([2,4,7,8,14,],[8,8,8,8,8,]),'proc':([2,4,7,8,14,],[10,10,10,10,10,]),'instrucciones':([17,22,55,66,75,147,171,182,],[20,58,79,106,117,183,193,195,]),'instruccion':([17,22,55,66,75,147,171,182,],[22,22,22,22,22,22,22,22,]),'def':([17,22,55,66,75,147,171,182,],[23,23,23,23,23,23,23,23,]),'call':([17,22,55,66,75,147,171,182,],[24,24,24,24,24,24,24,24,]),'alter':([17,22,55,66,75,147,171,182,],[25,25,25,25,25,25,25,25,]),'not':([17,22,55,60,65,66,71,75,112,141,142,147,171,181,182,189,],[26,26,26,88,88,26,88,26,88,88,88,26,26,88,26,88,]),'print':([17,22,55,66,75,147,171,182,],[27,27,27,27,27,27,27,27,]),'iterative':([17,22,55,66,75,147,171,182,],[28,28,28,28,28,28,28,28,]),'case':([17,22,55,66,75,147,171,182,],[29,29,29,29,29,29,29,29,]),'mover':([17,22,55,66,75,147,171,182,],[30,30,30,30,30,30,30,30,]),'aleatorio':([17,22,55,66,75,147,171,182,],[31,31,31,31,31,31,31,31,]),'istrue':([17,22,55,65,66,75,112,147,171,181,182,],[32,32,32,102,32,32,102,32,32,102,32,]),'repeat':([17,22,55,66,75,147,171,182,],[33,33,33,33,33,33,33,33,]),'change':([17,22,55,66,75,147,171,182,],[34,34,34,34,34,34,34,34,]),'led':([17,22,55,66,75,147,171,182,],[35,35,35,35,35,35,35,35,]),'zigzag':([17,22,55,66,75,147,171,182,],[36,36,36,36,36,36,36,36,]),'zagzig':([17,22,55,66,75,147,171,182,],[37,37,37,37,37,37,37,37,]),'funciones':([47,68,],[67,109,]),'funcion':([47,67,68,109,],[69,108,69,108,]),'when':([47,67,68,109,],[70,70,70,70,]),'value':([60,65,71,112,141,142,181,189,],[84,101,113,101,179,180,101,198,]),'factor':([60,65,71,83,90,112,126,127,129,130,132,137,138,139,140,141,142,181,189,],[85,103,85,124,124,103,124,124,164,165,168,173,173,173,173,85,85,103,85,]),'expression':([60,65,71,83,90,112,137,138,139,140,141,142,181,189,],[87,104,87,123,128,149,174,174,174,174,87,87,104,87,]),'term':([60,65,71,83,90,112,126,127,137,138,139,140,141,142,181,189,],[91,91,91,91,91,91,162,163,91,91,91,91,91,91,91,91,]),'prints':([64,],[95,]),'printexpr':([64,95,],[96,135,]),'condicion':([65,112,181,],[99,148,194,]),'oper':([65,112,137,138,139,140,181,],[100,100,172,176,177,178,100,]),'then':([70,],[110,]),'else':([110,],[145,]),'break':([117,],[153,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> comment code','init',2,'p_init','myparser.py',50),
  ('init -> comment','init',1,'p_init','myparser.py',51),
  ('code -> procedimientos main','code',2,'p_code','myparser.py',59),
  ('code -> main procedimientos','code',2,'p_code','myparser.py',60),
  ('code -> procedimientos main procedimientos','code',3,'p_code','myparser.py',61),
  ('code -> main','code',1,'p_code','myparser.py',62),
  ('code -> comment code','code',2,'p_code','myparser.py',63),
  ('code -> code comment','code',2,'p_code','myparser.py',64),
  ('procedimientos -> procedimiento procedimientos','procedimientos',2,'p_procedimientos','myparser.py',75),
  ('procedimientos -> procedimiento','procedimientos',1,'p_procedimientos','myparser.py',76),
  ('procedimiento -> proc','procedimiento',1,'p_procedimiento','myparser.py',87),
  ('proc -> PROC ID LP instrucciones RP SEMICOLON','proc',6,'p_proc','myparser.py',92),
  ('main -> MAIN LP instrucciones RP SEMICOLON','main',5,'p_main','myparser.py',107),
  ('main -> MAIN LP RP SEMICOLON','main',4,'p_main','myparser.py',108),
  ('instrucciones -> instruccion instrucciones','instrucciones',2,'p_instrucciones','myparser.py',123),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones','myparser.py',124),
  ('instruccion -> def','instruccion',1,'p_instruccion','myparser.py',134),
  ('instruccion -> call','instruccion',1,'p_instruccion','myparser.py',135),
  ('instruccion -> alter','instruccion',1,'p_instruccion','myparser.py',136),
  ('instruccion -> not','instruccion',1,'p_instruccion','myparser.py',137),
  ('instruccion -> print','instruccion',1,'p_instruccion','myparser.py',138),
  ('instruccion -> iterative','instruccion',1,'p_instruccion','myparser.py',139),
  ('instruccion -> case','instruccion',1,'p_instruccion','myparser.py',140),
  ('instruccion -> mover','instruccion',1,'p_instruccion','myparser.py',141),
  ('instruccion -> aleatorio','instruccion',1,'p_instruccion','myparser.py',142),
  ('instruccion -> istrue','instruccion',1,'p_instruccion','myparser.py',143),
  ('instruccion -> repeat','instruccion',1,'p_instruccion','myparser.py',144),
  ('instruccion -> change','instruccion',1,'p_instruccion','myparser.py',145),
  ('instruccion -> led','instruccion',1,'p_instruccion','myparser.py',146),
  ('instruccion -> zigzag','instruccion',1,'p_instruccion','myparser.py',147),
  ('instruccion -> zagzig','instruccion',1,'p_instruccion','myparser.py',148),
  ('instruccion -> comment','instruccion',1,'p_instruccion','myparser.py',149),
  ('break -> BREAK SEMICOLON','break',2,'p_break','myparser.py',153),
  ('def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON','def',9,'p_def','myparser.py',159),
  ('def -> DEF LP ID COMMA TYPE RP SEMICOLON','def',7,'p_def','myparser.py',160),
  ('call -> CALL LP ID RP SEMICOLON','call',5,'p_call','myparser.py',179),
  ('alter -> ALTER LP ID COMMA factor RP SEMICOLON','alter',7,'p_alter','myparser.py',189),
  ('alter -> ALTER LP ID COMMA ID RP SEMICOLON','alter',7,'p_alter','myparser.py',190),
  ('not -> NOT LP ID RP SEMICOLON','not',5,'p_not','myparser.py',205),
  ('istrue -> ISTRUE LP ID RP SEMICOLON','istrue',5,'p_istrue','myparser.py',222),
  ('print -> PRINT LP prints RP SEMICOLON','print',5,'p_print','myparser.py',236),
  ('prints -> printexpr','prints',1,'p_prints','myparser.py',244),
  ('prints -> prints printexpr','prints',2,'p_prints','myparser.py',245),
  ('printexpr -> STRING','printexpr',1,'p_stringexpr','myparser.py',249),
  ('printexpr -> ID','printexpr',1,'p_idexpr','myparser.py',253),
  ('iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON','iterative',8,'p_iterativo','myparser.py',257),
  ('iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON','iterative',8,'p_iterativo','myparser.py',258),
  ('case -> CASE funciones SEMICOLON','case',3,'p_case','myparser.py',269),
  ('case -> CASE ID funciones SEMICOLON','case',4,'p_case','myparser.py',270),
  ('mover -> MOVER LP DIR RP SEMICOLON','mover',5,'p_mover','myparser.py',280),
  ('aleatorio -> ALEATORIO LP RP SEMICOLON','aleatorio',4,'p_aleatorio','myparser.py',285),
  ('zigzag -> ZIGZAG LP RP SEMICOLON','zigzag',4,'p_zigzag','myparser.py',289),
  ('zagzig -> ZAGZIG LP RP SEMICOLON','zagzig',4,'p_zagzig','myparser.py',293),
  ('led -> LED LP RP SEMICOLON','led',4,'p_led','myparser.py',297),
  ('repeat -> REPEAT LP instrucciones break RP SEMICOLON','repeat',6,'p_repeat','myparser.py',302),
  ('value -> factor','value',1,'p_value','myparser.py',306),
  ('value -> BOOL','value',1,'p_value','myparser.py',307),
  ('value -> expression','value',1,'p_value','myparser.py',308),
  ('value -> ID','value',1,'p_value','myparser.py',309),
  ('value -> not','value',1,'p_value','myparser.py',310),
  ('funciones -> funcion','funciones',1,'p_funciones','myparser.py',315),
  ('funciones -> funciones funcion','funciones',2,'p_funciones','myparser.py',316),
  ('funcion -> when then','funcion',2,'p_funcion','myparser.py',324),
  ('funcion -> when then else','funcion',3,'p_funcion','myparser.py',325),
  ('when -> WHEN LP condicion RP','when',4,'p_when','myparser.py',332),
  ('when -> WHEN value','when',2,'p_when','myparser.py',333),
  ('then -> THEN LP instrucciones RP','then',4,'p_then','myparser.py',342),
  ('else -> ELSE LP instrucciones RP','else',4,'p_else','myparser.py',347),
  ('condicion -> oper GT oper','condicion',3,'p_condicion','myparser.py',352),
  ('condicion -> oper LT oper','condicion',3,'p_condicion','myparser.py',353),
  ('condicion -> value EQUAL value','condicion',3,'p_condicion','myparser.py',354),
  ('condicion -> value DIF value','condicion',3,'p_condicion','myparser.py',355),
  ('condicion -> oper GTE oper','condicion',3,'p_condicion','myparser.py',356),
  ('condicion -> oper LTE oper','condicion',3,'p_condicion','myparser.py',357),
  ('condicion -> istrue','condicion',1,'p_condicion','myparser.py',358),
  ('oper -> factor','oper',1,'p_oper','myparser.py',401),
  ('oper -> expression','oper',1,'p_oper','myparser.py',402),
  ('oper -> ID','oper',1,'p_oper','myparser.py',403),
  ('change -> ID LP value RP SEMICOLON','change',5,'p_change','myparser.py',410),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','myparser.py',424),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','myparser.py',428),
  ('expression -> term','expression',1,'p_expression_term','myparser.py',432),
  ('term -> term STAR factor','term',3,'p_term_times','myparser.py',440),
  ('term -> term SLASH factor','term',3,'p_term_div','myparser.py',444),
  ('term -> factor','term',1,'p_term_factor','myparser.py',448),
  ('factor -> INTEGER','factor',1,'p_factor_num','myparser.py',452),
  ('factor -> MINUS expression','factor',2,'p_factor_uminus','myparser.py',458),
  ('factor -> LP expression RP','factor',3,'p_factor_expr','myparser.py',462),
  ('comment -> COMMENT','comment',1,'p_comment','myparser.py',469),
]
