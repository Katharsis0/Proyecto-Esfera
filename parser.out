Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CHANGE
    VALUE

Grammar

Rule 0     S' -> init
Rule 1     init -> comment code
Rule 2     init -> comment
Rule 3     code -> procedimientos main
Rule 4     code -> main procedimientos
Rule 5     code -> procedimientos main procedimientos
Rule 6     code -> main
Rule 7     code -> comment code
Rule 8     code -> code comment
Rule 9     procedimientos -> procedimiento procedimientos
Rule 10    procedimientos -> procedimiento
Rule 11    procedimiento -> proc
Rule 12    proc -> PROC ID LP instrucciones RP SEMICOLON
Rule 13    main -> MAIN LP instrucciones RP SEMICOLON
Rule 14    main -> MAIN LP RP SEMICOLON
Rule 15    instrucciones -> instruccion instrucciones
Rule 16    instrucciones -> instruccion
Rule 17    instruccion -> def
Rule 18    instruccion -> call
Rule 19    instruccion -> alter
Rule 20    instruccion -> not
Rule 21    instruccion -> print
Rule 22    instruccion -> iterative
Rule 23    instruccion -> case
Rule 24    instruccion -> mover
Rule 25    instruccion -> aleatorio
Rule 26    instruccion -> istrue
Rule 27    instruccion -> repeat
Rule 28    instruccion -> change
Rule 29    instruccion -> led
Rule 30    instruccion -> zigzag
Rule 31    instruccion -> zagzig
Rule 32    instruccion -> comment
Rule 33    break -> BREAK SEMICOLON
Rule 34    def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON
Rule 35    def -> DEF LP ID COMMA TYPE RP SEMICOLON
Rule 36    call -> CALL LP ID RP SEMICOLON
Rule 37    alter -> ALTER LP ID COMMA factor RP SEMICOLON
Rule 38    alter -> ALTER LP ID COMMA ID RP SEMICOLON
Rule 39    not -> NOT LP ID RP SEMICOLON
Rule 40    istrue -> ISTRUE LP ID RP SEMICOLON
Rule 41    print -> PRINT LP prints RP SEMICOLON
Rule 42    prints -> printexpr
Rule 43    prints -> prints printexpr
Rule 44    printexpr -> STRING
Rule 45    printexpr -> ID
Rule 46    iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON
Rule 47    iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON
Rule 48    case -> CASE funciones SEMICOLON
Rule 49    case -> CASE ID funciones SEMICOLON
Rule 50    mover -> MOVER LP DIR RP SEMICOLON
Rule 51    aleatorio -> ALEATORIO LP RP SEMICOLON
Rule 52    zigzag -> ZIGZAG LP RP SEMICOLON
Rule 53    zagzig -> ZAGZIG LP RP SEMICOLON
Rule 54    led -> LED LP RP SEMICOLON
Rule 55    repeat -> REPEAT LP instrucciones break RP SEMICOLON
Rule 56    value -> factor
Rule 57    value -> BOOL
Rule 58    value -> expression
Rule 59    value -> ID
Rule 60    value -> not
Rule 61    funciones -> funcion
Rule 62    funciones -> funciones funcion
Rule 63    funcion -> when then
Rule 64    funcion -> when then else
Rule 65    when -> WHEN LP condicion RP
Rule 66    when -> WHEN value
Rule 67    then -> THEN LP instrucciones RP
Rule 68    else -> ELSE LP instrucciones RP
Rule 69    condicion -> oper GT oper
Rule 70    condicion -> oper LT oper
Rule 71    condicion -> value EQUAL value
Rule 72    condicion -> value DIF value
Rule 73    condicion -> oper GTE oper
Rule 74    condicion -> oper LTE oper
Rule 75    condicion -> istrue
Rule 76    oper -> factor
Rule 77    oper -> expression
Rule 78    oper -> ID
Rule 79    change -> ID LP value RP SEMICOLON
Rule 80    expression -> expression PLUS term
Rule 81    expression -> expression MINUS term
Rule 82    expression -> term
Rule 83    term -> term STAR factor
Rule 84    term -> term SLASH factor
Rule 85    term -> factor
Rule 86    factor -> INTEGER
Rule 87    factor -> MINUS expression
Rule 88    factor -> LP expression RP
Rule 89    comment -> COMMENT

Terminals, with rules where they appear

ALEATORIO            : 51
ALTER                : 37 38
BOOL                 : 57
BREAK                : 33
CALL                 : 36
CASE                 : 48 49
CHANGE               : 
COMMA                : 34 34 35 37 38
COMMENT              : 89
DEF                  : 34 35
DIF                  : 72
DIR                  : 50
ELSE                 : 68
EQUAL                : 71
GT                   : 69
GTE                  : 73
ID                   : 12 34 35 36 37 38 38 39 40 45 49 59 78 79
INTEGER              : 86
ISTRUE               : 40
LED                  : 54
LP                   : 12 13 14 34 35 36 37 38 39 40 41 46 46 47 47 50 51 52 53 54 55 65 67 68 79 88
LT                   : 70
LTE                  : 74
MAIN                 : 13 14
MINUS                : 81 87
MOVER                : 50
NOT                  : 39
PLUS                 : 80
PRINT                : 41
PROC                 : 12
REPEAT               : 55
RP                   : 12 13 14 34 35 36 37 38 39 40 41 46 46 47 47 50 51 52 53 54 55 65 67 68 79 88
SEMICOLON            : 12 13 14 33 34 35 36 37 38 39 40 41 46 47 48 49 50 51 52 53 54 55 79
SLASH                : 84
STAR                 : 83
STRING               : 44
THEN                 : 67
TYPE                 : 34 35
UNTIL                : 47
VALUE                : 
WHEN                 : 65 66
WHILE                : 46
ZAGZIG               : 53
ZIGZAG               : 52
error                : 

Nonterminals, with rules where they appear

aleatorio            : 25
alter                : 19
break                : 55
call                 : 18
case                 : 23
change               : 28
code                 : 1 7 8
comment              : 1 2 7 8 32
condicion            : 46 47 65
def                  : 17
else                 : 64
expression           : 58 77 80 81 87 88
factor               : 37 56 76 83 84 85
funcion              : 61 62
funciones            : 48 49 62
init                 : 0
instruccion          : 15 16
instrucciones        : 12 13 15 46 47 55 67 68
istrue               : 26 75
iterative            : 22
led                  : 29
main                 : 3 4 5 6
mover                : 24
not                  : 20 60
oper                 : 69 69 70 70 73 73 74 74
print                : 21
printexpr            : 42 43
prints               : 41 43
proc                 : 11
procedimiento        : 9 10
procedimientos       : 3 4 5 5 9
repeat               : 27
term                 : 80 81 82 83 84
then                 : 63 64
value                : 34 66 71 71 72 72 79
when                 : 63 64
zagzig               : 31
zigzag               : 30

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . comment code
    (2) init -> . comment
    (89) comment -> . COMMENT

    COMMENT         shift and go to state 3

    init                           shift and go to state 1
    comment                        shift and go to state 2

state 1

    (0) S' -> init .



state 2

    (1) init -> comment . code
    (2) init -> comment .
    (3) code -> . procedimientos main
    (4) code -> . main procedimientos
    (5) code -> . procedimientos main procedimientos
    (6) code -> . main
    (7) code -> . comment code
    (8) code -> . code comment
    (9) procedimientos -> . procedimiento procedimientos
    (10) procedimientos -> . procedimiento
    (13) main -> . MAIN LP instrucciones RP SEMICOLON
    (14) main -> . MAIN LP RP SEMICOLON
    (89) comment -> . COMMENT
    (11) procedimiento -> . proc
    (12) proc -> . PROC ID LP instrucciones RP SEMICOLON

    $end            reduce using rule 2 (init -> comment .)
    MAIN            shift and go to state 9
    COMMENT         shift and go to state 3
    PROC            shift and go to state 11

    comment                        shift and go to state 4
    code                           shift and go to state 5
    procedimientos                 shift and go to state 6
    main                           shift and go to state 7
    procedimiento                  shift and go to state 8
    proc                           shift and go to state 10

state 3

    (89) comment -> COMMENT .

    MAIN            reduce using rule 89 (comment -> COMMENT .)
    COMMENT         reduce using rule 89 (comment -> COMMENT .)
    PROC            reduce using rule 89 (comment -> COMMENT .)
    $end            reduce using rule 89 (comment -> COMMENT .)
    DEF             reduce using rule 89 (comment -> COMMENT .)
    CALL            reduce using rule 89 (comment -> COMMENT .)
    ALTER           reduce using rule 89 (comment -> COMMENT .)
    NOT             reduce using rule 89 (comment -> COMMENT .)
    PRINT           reduce using rule 89 (comment -> COMMENT .)
    WHILE           reduce using rule 89 (comment -> COMMENT .)
    UNTIL           reduce using rule 89 (comment -> COMMENT .)
    CASE            reduce using rule 89 (comment -> COMMENT .)
    MOVER           reduce using rule 89 (comment -> COMMENT .)
    ALEATORIO       reduce using rule 89 (comment -> COMMENT .)
    ISTRUE          reduce using rule 89 (comment -> COMMENT .)
    REPEAT          reduce using rule 89 (comment -> COMMENT .)
    ID              reduce using rule 89 (comment -> COMMENT .)
    LED             reduce using rule 89 (comment -> COMMENT .)
    ZIGZAG          reduce using rule 89 (comment -> COMMENT .)
    ZAGZIG          reduce using rule 89 (comment -> COMMENT .)
    RP              reduce using rule 89 (comment -> COMMENT .)
    BREAK           reduce using rule 89 (comment -> COMMENT .)


state 4

    (7) code -> comment . code
    (3) code -> . procedimientos main
    (4) code -> . main procedimientos
    (5) code -> . procedimientos main procedimientos
    (6) code -> . main
    (7) code -> . comment code
    (8) code -> . code comment
    (9) procedimientos -> . procedimiento procedimientos
    (10) procedimientos -> . procedimiento
    (13) main -> . MAIN LP instrucciones RP SEMICOLON
    (14) main -> . MAIN LP RP SEMICOLON
    (89) comment -> . COMMENT
    (11) procedimiento -> . proc
    (12) proc -> . PROC ID LP instrucciones RP SEMICOLON

    MAIN            shift and go to state 9
    COMMENT         shift and go to state 3
    PROC            shift and go to state 11

    comment                        shift and go to state 4
    code                           shift and go to state 12
    procedimientos                 shift and go to state 6
    main                           shift and go to state 7
    procedimiento                  shift and go to state 8
    proc                           shift and go to state 10

state 5

    (1) init -> comment code .
    (8) code -> code . comment
    (89) comment -> . COMMENT

    $end            reduce using rule 1 (init -> comment code .)
    COMMENT         shift and go to state 3

    comment                        shift and go to state 13

state 6

    (3) code -> procedimientos . main
    (5) code -> procedimientos . main procedimientos
    (13) main -> . MAIN LP instrucciones RP SEMICOLON
    (14) main -> . MAIN LP RP SEMICOLON

    MAIN            shift and go to state 9

    main                           shift and go to state 14

state 7

    (4) code -> main . procedimientos
    (6) code -> main .
    (9) procedimientos -> . procedimiento procedimientos
    (10) procedimientos -> . procedimiento
    (11) procedimiento -> . proc
    (12) proc -> . PROC ID LP instrucciones RP SEMICOLON

    COMMENT         reduce using rule 6 (code -> main .)
    $end            reduce using rule 6 (code -> main .)
    PROC            shift and go to state 11

    procedimientos                 shift and go to state 15
    procedimiento                  shift and go to state 8
    proc                           shift and go to state 10

state 8

    (9) procedimientos -> procedimiento . procedimientos
    (10) procedimientos -> procedimiento .
    (9) procedimientos -> . procedimiento procedimientos
    (10) procedimientos -> . procedimiento
    (11) procedimiento -> . proc
    (12) proc -> . PROC ID LP instrucciones RP SEMICOLON

    MAIN            reduce using rule 10 (procedimientos -> procedimiento .)
    COMMENT         reduce using rule 10 (procedimientos -> procedimiento .)
    $end            reduce using rule 10 (procedimientos -> procedimiento .)
    PROC            shift and go to state 11

    procedimiento                  shift and go to state 8
    procedimientos                 shift and go to state 16
    proc                           shift and go to state 10

state 9

    (13) main -> MAIN . LP instrucciones RP SEMICOLON
    (14) main -> MAIN . LP RP SEMICOLON

    LP              shift and go to state 17


state 10

    (11) procedimiento -> proc .

    PROC            reduce using rule 11 (procedimiento -> proc .)
    MAIN            reduce using rule 11 (procedimiento -> proc .)
    COMMENT         reduce using rule 11 (procedimiento -> proc .)
    $end            reduce using rule 11 (procedimiento -> proc .)


state 11

    (12) proc -> PROC . ID LP instrucciones RP SEMICOLON

    ID              shift and go to state 18


state 12

    (7) code -> comment code .
    (8) code -> code . comment
    (89) comment -> . COMMENT

  ! shift/reduce conflict for COMMENT resolved as shift
    $end            reduce using rule 7 (code -> comment code .)
    COMMENT         shift and go to state 3

  ! COMMENT         [ reduce using rule 7 (code -> comment code .) ]

    comment                        shift and go to state 13

state 13

    (8) code -> code comment .

    COMMENT         reduce using rule 8 (code -> code comment .)
    $end            reduce using rule 8 (code -> code comment .)


state 14

    (3) code -> procedimientos main .
    (5) code -> procedimientos main . procedimientos
    (9) procedimientos -> . procedimiento procedimientos
    (10) procedimientos -> . procedimiento
    (11) procedimiento -> . proc
    (12) proc -> . PROC ID LP instrucciones RP SEMICOLON

    COMMENT         reduce using rule 3 (code -> procedimientos main .)
    $end            reduce using rule 3 (code -> procedimientos main .)
    PROC            shift and go to state 11

    procedimientos                 shift and go to state 19
    procedimiento                  shift and go to state 8
    proc                           shift and go to state 10

state 15

    (4) code -> main procedimientos .

    COMMENT         reduce using rule 4 (code -> main procedimientos .)
    $end            reduce using rule 4 (code -> main procedimientos .)


state 16

    (9) procedimientos -> procedimiento procedimientos .

    MAIN            reduce using rule 9 (procedimientos -> procedimiento procedimientos .)
    COMMENT         reduce using rule 9 (procedimientos -> procedimiento procedimientos .)
    $end            reduce using rule 9 (procedimientos -> procedimiento procedimientos .)


state 17

    (13) main -> MAIN LP . instrucciones RP SEMICOLON
    (14) main -> MAIN LP . RP SEMICOLON
    (15) instrucciones -> . instruccion instrucciones
    (16) instrucciones -> . instruccion
    (17) instruccion -> . def
    (18) instruccion -> . call
    (19) instruccion -> . alter
    (20) instruccion -> . not
    (21) instruccion -> . print
    (22) instruccion -> . iterative
    (23) instruccion -> . case
    (24) instruccion -> . mover
    (25) instruccion -> . aleatorio
    (26) instruccion -> . istrue
    (27) instruccion -> . repeat
    (28) instruccion -> . change
    (29) instruccion -> . led
    (30) instruccion -> . zigzag
    (31) instruccion -> . zagzig
    (32) instruccion -> . comment
    (34) def -> . DEF LP ID COMMA TYPE COMMA value RP SEMICOLON
    (35) def -> . DEF LP ID COMMA TYPE RP SEMICOLON
    (36) call -> . CALL LP ID RP SEMICOLON
    (37) alter -> . ALTER LP ID COMMA factor RP SEMICOLON
    (38) alter -> . ALTER LP ID COMMA ID RP SEMICOLON
    (39) not -> . NOT LP ID RP SEMICOLON
    (41) print -> . PRINT LP prints RP SEMICOLON
    (46) iterative -> . WHILE LP condicion RP LP instrucciones RP SEMICOLON
    (47) iterative -> . UNTIL LP instrucciones RP LP condicion RP SEMICOLON
    (48) case -> . CASE funciones SEMICOLON
    (49) case -> . CASE ID funciones SEMICOLON
    (50) mover -> . MOVER LP DIR RP SEMICOLON
    (51) aleatorio -> . ALEATORIO LP RP SEMICOLON
    (40) istrue -> . ISTRUE LP ID RP SEMICOLON
    (55) repeat -> . REPEAT LP instrucciones break RP SEMICOLON
    (79) change -> . ID LP value RP SEMICOLON
    (54) led -> . LED LP RP SEMICOLON
    (52) zigzag -> . ZIGZAG LP RP SEMICOLON
    (53) zagzig -> . ZAGZIG LP RP SEMICOLON
    (89) comment -> . COMMENT

    RP              shift and go to state 21
    DEF             shift and go to state 39
    CALL            shift and go to state 41
    ALTER           shift and go to state 42
    NOT             shift and go to state 43
    PRINT           shift and go to state 44
    WHILE           shift and go to state 45
    UNTIL           shift and go to state 46
    CASE            shift and go to state 47
    MOVER           shift and go to state 48
    ALEATORIO       shift and go to state 49
    ISTRUE          shift and go to state 50
    REPEAT          shift and go to state 51
    ID              shift and go to state 40
    LED             shift and go to state 52
    ZIGZAG          shift and go to state 53
    ZAGZIG          shift and go to state 54
    COMMENT         shift and go to state 3

    instrucciones                  shift and go to state 20
    instruccion                    shift and go to state 22
    def                            shift and go to state 23
    call                           shift and go to state 24
    alter                          shift and go to state 25
    not                            shift and go to state 26
    print                          shift and go to state 27
    iterative                      shift and go to state 28
    case                           shift and go to state 29
    mover                          shift and go to state 30
    aleatorio                      shift and go to state 31
    istrue                         shift and go to state 32
    repeat                         shift and go to state 33
    change                         shift and go to state 34
    led                            shift and go to state 35
    zigzag                         shift and go to state 36
    zagzig                         shift and go to state 37
    comment                        shift and go to state 38

state 18

    (12) proc -> PROC ID . LP instrucciones RP SEMICOLON

    LP              shift and go to state 55


state 19

    (5) code -> procedimientos main procedimientos .

    COMMENT         reduce using rule 5 (code -> procedimientos main procedimientos .)
    $end            reduce using rule 5 (code -> procedimientos main procedimientos .)


state 20

    (13) main -> MAIN LP instrucciones . RP SEMICOLON

    RP              shift and go to state 56


state 21

    (14) main -> MAIN LP RP . SEMICOLON

    SEMICOLON       shift and go to state 57


state 22

    (15) instrucciones -> instruccion . instrucciones
    (16) instrucciones -> instruccion .
    (15) instrucciones -> . instruccion instrucciones
    (16) instrucciones -> . instruccion
    (17) instruccion -> . def
    (18) instruccion -> . call
    (19) instruccion -> . alter
    (20) instruccion -> . not
    (21) instruccion -> . print
    (22) instruccion -> . iterative
    (23) instruccion -> . case
    (24) instruccion -> . mover
    (25) instruccion -> . aleatorio
    (26) instruccion -> . istrue
    (27) instruccion -> . repeat
    (28) instruccion -> . change
    (29) instruccion -> . led
    (30) instruccion -> . zigzag
    (31) instruccion -> . zagzig
    (32) instruccion -> . comment
    (34) def -> . DEF LP ID COMMA TYPE COMMA value RP SEMICOLON
    (35) def -> . DEF LP ID COMMA TYPE RP SEMICOLON
    (36) call -> . CALL LP ID RP SEMICOLON
    (37) alter -> . ALTER LP ID COMMA factor RP SEMICOLON
    (38) alter -> . ALTER LP ID COMMA ID RP SEMICOLON
    (39) not -> . NOT LP ID RP SEMICOLON
    (41) print -> . PRINT LP prints RP SEMICOLON
    (46) iterative -> . WHILE LP condicion RP LP instrucciones RP SEMICOLON
    (47) iterative -> . UNTIL LP instrucciones RP LP condicion RP SEMICOLON
    (48) case -> . CASE funciones SEMICOLON
    (49) case -> . CASE ID funciones SEMICOLON
    (50) mover -> . MOVER LP DIR RP SEMICOLON
    (51) aleatorio -> . ALEATORIO LP RP SEMICOLON
    (40) istrue -> . ISTRUE LP ID RP SEMICOLON
    (55) repeat -> . REPEAT LP instrucciones break RP SEMICOLON
    (79) change -> . ID LP value RP SEMICOLON
    (54) led -> . LED LP RP SEMICOLON
    (52) zigzag -> . ZIGZAG LP RP SEMICOLON
    (53) zagzig -> . ZAGZIG LP RP SEMICOLON
    (89) comment -> . COMMENT

    RP              reduce using rule 16 (instrucciones -> instruccion .)
    BREAK           reduce using rule 16 (instrucciones -> instruccion .)
    DEF             shift and go to state 39
    CALL            shift and go to state 41
    ALTER           shift and go to state 42
    NOT             shift and go to state 43
    PRINT           shift and go to state 44
    WHILE           shift and go to state 45
    UNTIL           shift and go to state 46
    CASE            shift and go to state 47
    MOVER           shift and go to state 48
    ALEATORIO       shift and go to state 49
    ISTRUE          shift and go to state 50
    REPEAT          shift and go to state 51
    ID              shift and go to state 40
    LED             shift and go to state 52
    ZIGZAG          shift and go to state 53
    ZAGZIG          shift and go to state 54
    COMMENT         shift and go to state 3

    instruccion                    shift and go to state 22
    instrucciones                  shift and go to state 58
    def                            shift and go to state 23
    call                           shift and go to state 24
    alter                          shift and go to state 25
    not                            shift and go to state 26
    print                          shift and go to state 27
    iterative                      shift and go to state 28
    case                           shift and go to state 29
    mover                          shift and go to state 30
    aleatorio                      shift and go to state 31
    istrue                         shift and go to state 32
    repeat                         shift and go to state 33
    change                         shift and go to state 34
    led                            shift and go to state 35
    zigzag                         shift and go to state 36
    zagzig                         shift and go to state 37
    comment                        shift and go to state 38

state 23

    (17) instruccion -> def .

    DEF             reduce using rule 17 (instruccion -> def .)
    CALL            reduce using rule 17 (instruccion -> def .)
    ALTER           reduce using rule 17 (instruccion -> def .)
    NOT             reduce using rule 17 (instruccion -> def .)
    PRINT           reduce using rule 17 (instruccion -> def .)
    WHILE           reduce using rule 17 (instruccion -> def .)
    UNTIL           reduce using rule 17 (instruccion -> def .)
    CASE            reduce using rule 17 (instruccion -> def .)
    MOVER           reduce using rule 17 (instruccion -> def .)
    ALEATORIO       reduce using rule 17 (instruccion -> def .)
    ISTRUE          reduce using rule 17 (instruccion -> def .)
    REPEAT          reduce using rule 17 (instruccion -> def .)
    ID              reduce using rule 17 (instruccion -> def .)
    LED             reduce using rule 17 (instruccion -> def .)
    ZIGZAG          reduce using rule 17 (instruccion -> def .)
    ZAGZIG          reduce using rule 17 (instruccion -> def .)
    COMMENT         reduce using rule 17 (instruccion -> def .)
    RP              reduce using rule 17 (instruccion -> def .)
    BREAK           reduce using rule 17 (instruccion -> def .)


state 24

    (18) instruccion -> call .

    DEF             reduce using rule 18 (instruccion -> call .)
    CALL            reduce using rule 18 (instruccion -> call .)
    ALTER           reduce using rule 18 (instruccion -> call .)
    NOT             reduce using rule 18 (instruccion -> call .)
    PRINT           reduce using rule 18 (instruccion -> call .)
    WHILE           reduce using rule 18 (instruccion -> call .)
    UNTIL           reduce using rule 18 (instruccion -> call .)
    CASE            reduce using rule 18 (instruccion -> call .)
    MOVER           reduce using rule 18 (instruccion -> call .)
    ALEATORIO       reduce using rule 18 (instruccion -> call .)
    ISTRUE          reduce using rule 18 (instruccion -> call .)
    REPEAT          reduce using rule 18 (instruccion -> call .)
    ID              reduce using rule 18 (instruccion -> call .)
    LED             reduce using rule 18 (instruccion -> call .)
    ZIGZAG          reduce using rule 18 (instruccion -> call .)
    ZAGZIG          reduce using rule 18 (instruccion -> call .)
    COMMENT         reduce using rule 18 (instruccion -> call .)
    RP              reduce using rule 18 (instruccion -> call .)
    BREAK           reduce using rule 18 (instruccion -> call .)


state 25

    (19) instruccion -> alter .

    DEF             reduce using rule 19 (instruccion -> alter .)
    CALL            reduce using rule 19 (instruccion -> alter .)
    ALTER           reduce using rule 19 (instruccion -> alter .)
    NOT             reduce using rule 19 (instruccion -> alter .)
    PRINT           reduce using rule 19 (instruccion -> alter .)
    WHILE           reduce using rule 19 (instruccion -> alter .)
    UNTIL           reduce using rule 19 (instruccion -> alter .)
    CASE            reduce using rule 19 (instruccion -> alter .)
    MOVER           reduce using rule 19 (instruccion -> alter .)
    ALEATORIO       reduce using rule 19 (instruccion -> alter .)
    ISTRUE          reduce using rule 19 (instruccion -> alter .)
    REPEAT          reduce using rule 19 (instruccion -> alter .)
    ID              reduce using rule 19 (instruccion -> alter .)
    LED             reduce using rule 19 (instruccion -> alter .)
    ZIGZAG          reduce using rule 19 (instruccion -> alter .)
    ZAGZIG          reduce using rule 19 (instruccion -> alter .)
    COMMENT         reduce using rule 19 (instruccion -> alter .)
    RP              reduce using rule 19 (instruccion -> alter .)
    BREAK           reduce using rule 19 (instruccion -> alter .)


state 26

    (20) instruccion -> not .

    DEF             reduce using rule 20 (instruccion -> not .)
    CALL            reduce using rule 20 (instruccion -> not .)
    ALTER           reduce using rule 20 (instruccion -> not .)
    NOT             reduce using rule 20 (instruccion -> not .)
    PRINT           reduce using rule 20 (instruccion -> not .)
    WHILE           reduce using rule 20 (instruccion -> not .)
    UNTIL           reduce using rule 20 (instruccion -> not .)
    CASE            reduce using rule 20 (instruccion -> not .)
    MOVER           reduce using rule 20 (instruccion -> not .)
    ALEATORIO       reduce using rule 20 (instruccion -> not .)
    ISTRUE          reduce using rule 20 (instruccion -> not .)
    REPEAT          reduce using rule 20 (instruccion -> not .)
    ID              reduce using rule 20 (instruccion -> not .)
    LED             reduce using rule 20 (instruccion -> not .)
    ZIGZAG          reduce using rule 20 (instruccion -> not .)
    ZAGZIG          reduce using rule 20 (instruccion -> not .)
    COMMENT         reduce using rule 20 (instruccion -> not .)
    RP              reduce using rule 20 (instruccion -> not .)
    BREAK           reduce using rule 20 (instruccion -> not .)


state 27

    (21) instruccion -> print .

    DEF             reduce using rule 21 (instruccion -> print .)
    CALL            reduce using rule 21 (instruccion -> print .)
    ALTER           reduce using rule 21 (instruccion -> print .)
    NOT             reduce using rule 21 (instruccion -> print .)
    PRINT           reduce using rule 21 (instruccion -> print .)
    WHILE           reduce using rule 21 (instruccion -> print .)
    UNTIL           reduce using rule 21 (instruccion -> print .)
    CASE            reduce using rule 21 (instruccion -> print .)
    MOVER           reduce using rule 21 (instruccion -> print .)
    ALEATORIO       reduce using rule 21 (instruccion -> print .)
    ISTRUE          reduce using rule 21 (instruccion -> print .)
    REPEAT          reduce using rule 21 (instruccion -> print .)
    ID              reduce using rule 21 (instruccion -> print .)
    LED             reduce using rule 21 (instruccion -> print .)
    ZIGZAG          reduce using rule 21 (instruccion -> print .)
    ZAGZIG          reduce using rule 21 (instruccion -> print .)
    COMMENT         reduce using rule 21 (instruccion -> print .)
    RP              reduce using rule 21 (instruccion -> print .)
    BREAK           reduce using rule 21 (instruccion -> print .)


state 28

    (22) instruccion -> iterative .

    DEF             reduce using rule 22 (instruccion -> iterative .)
    CALL            reduce using rule 22 (instruccion -> iterative .)
    ALTER           reduce using rule 22 (instruccion -> iterative .)
    NOT             reduce using rule 22 (instruccion -> iterative .)
    PRINT           reduce using rule 22 (instruccion -> iterative .)
    WHILE           reduce using rule 22 (instruccion -> iterative .)
    UNTIL           reduce using rule 22 (instruccion -> iterative .)
    CASE            reduce using rule 22 (instruccion -> iterative .)
    MOVER           reduce using rule 22 (instruccion -> iterative .)
    ALEATORIO       reduce using rule 22 (instruccion -> iterative .)
    ISTRUE          reduce using rule 22 (instruccion -> iterative .)
    REPEAT          reduce using rule 22 (instruccion -> iterative .)
    ID              reduce using rule 22 (instruccion -> iterative .)
    LED             reduce using rule 22 (instruccion -> iterative .)
    ZIGZAG          reduce using rule 22 (instruccion -> iterative .)
    ZAGZIG          reduce using rule 22 (instruccion -> iterative .)
    COMMENT         reduce using rule 22 (instruccion -> iterative .)
    RP              reduce using rule 22 (instruccion -> iterative .)
    BREAK           reduce using rule 22 (instruccion -> iterative .)


state 29

    (23) instruccion -> case .

    DEF             reduce using rule 23 (instruccion -> case .)
    CALL            reduce using rule 23 (instruccion -> case .)
    ALTER           reduce using rule 23 (instruccion -> case .)
    NOT             reduce using rule 23 (instruccion -> case .)
    PRINT           reduce using rule 23 (instruccion -> case .)
    WHILE           reduce using rule 23 (instruccion -> case .)
    UNTIL           reduce using rule 23 (instruccion -> case .)
    CASE            reduce using rule 23 (instruccion -> case .)
    MOVER           reduce using rule 23 (instruccion -> case .)
    ALEATORIO       reduce using rule 23 (instruccion -> case .)
    ISTRUE          reduce using rule 23 (instruccion -> case .)
    REPEAT          reduce using rule 23 (instruccion -> case .)
    ID              reduce using rule 23 (instruccion -> case .)
    LED             reduce using rule 23 (instruccion -> case .)
    ZIGZAG          reduce using rule 23 (instruccion -> case .)
    ZAGZIG          reduce using rule 23 (instruccion -> case .)
    COMMENT         reduce using rule 23 (instruccion -> case .)
    RP              reduce using rule 23 (instruccion -> case .)
    BREAK           reduce using rule 23 (instruccion -> case .)


state 30

    (24) instruccion -> mover .

    DEF             reduce using rule 24 (instruccion -> mover .)
    CALL            reduce using rule 24 (instruccion -> mover .)
    ALTER           reduce using rule 24 (instruccion -> mover .)
    NOT             reduce using rule 24 (instruccion -> mover .)
    PRINT           reduce using rule 24 (instruccion -> mover .)
    WHILE           reduce using rule 24 (instruccion -> mover .)
    UNTIL           reduce using rule 24 (instruccion -> mover .)
    CASE            reduce using rule 24 (instruccion -> mover .)
    MOVER           reduce using rule 24 (instruccion -> mover .)
    ALEATORIO       reduce using rule 24 (instruccion -> mover .)
    ISTRUE          reduce using rule 24 (instruccion -> mover .)
    REPEAT          reduce using rule 24 (instruccion -> mover .)
    ID              reduce using rule 24 (instruccion -> mover .)
    LED             reduce using rule 24 (instruccion -> mover .)
    ZIGZAG          reduce using rule 24 (instruccion -> mover .)
    ZAGZIG          reduce using rule 24 (instruccion -> mover .)
    COMMENT         reduce using rule 24 (instruccion -> mover .)
    RP              reduce using rule 24 (instruccion -> mover .)
    BREAK           reduce using rule 24 (instruccion -> mover .)


state 31

    (25) instruccion -> aleatorio .

    DEF             reduce using rule 25 (instruccion -> aleatorio .)
    CALL            reduce using rule 25 (instruccion -> aleatorio .)
    ALTER           reduce using rule 25 (instruccion -> aleatorio .)
    NOT             reduce using rule 25 (instruccion -> aleatorio .)
    PRINT           reduce using rule 25 (instruccion -> aleatorio .)
    WHILE           reduce using rule 25 (instruccion -> aleatorio .)
    UNTIL           reduce using rule 25 (instruccion -> aleatorio .)
    CASE            reduce using rule 25 (instruccion -> aleatorio .)
    MOVER           reduce using rule 25 (instruccion -> aleatorio .)
    ALEATORIO       reduce using rule 25 (instruccion -> aleatorio .)
    ISTRUE          reduce using rule 25 (instruccion -> aleatorio .)
    REPEAT          reduce using rule 25 (instruccion -> aleatorio .)
    ID              reduce using rule 25 (instruccion -> aleatorio .)
    LED             reduce using rule 25 (instruccion -> aleatorio .)
    ZIGZAG          reduce using rule 25 (instruccion -> aleatorio .)
    ZAGZIG          reduce using rule 25 (instruccion -> aleatorio .)
    COMMENT         reduce using rule 25 (instruccion -> aleatorio .)
    RP              reduce using rule 25 (instruccion -> aleatorio .)
    BREAK           reduce using rule 25 (instruccion -> aleatorio .)


state 32

    (26) instruccion -> istrue .

    DEF             reduce using rule 26 (instruccion -> istrue .)
    CALL            reduce using rule 26 (instruccion -> istrue .)
    ALTER           reduce using rule 26 (instruccion -> istrue .)
    NOT             reduce using rule 26 (instruccion -> istrue .)
    PRINT           reduce using rule 26 (instruccion -> istrue .)
    WHILE           reduce using rule 26 (instruccion -> istrue .)
    UNTIL           reduce using rule 26 (instruccion -> istrue .)
    CASE            reduce using rule 26 (instruccion -> istrue .)
    MOVER           reduce using rule 26 (instruccion -> istrue .)
    ALEATORIO       reduce using rule 26 (instruccion -> istrue .)
    ISTRUE          reduce using rule 26 (instruccion -> istrue .)
    REPEAT          reduce using rule 26 (instruccion -> istrue .)
    ID              reduce using rule 26 (instruccion -> istrue .)
    LED             reduce using rule 26 (instruccion -> istrue .)
    ZIGZAG          reduce using rule 26 (instruccion -> istrue .)
    ZAGZIG          reduce using rule 26 (instruccion -> istrue .)
    COMMENT         reduce using rule 26 (instruccion -> istrue .)
    RP              reduce using rule 26 (instruccion -> istrue .)
    BREAK           reduce using rule 26 (instruccion -> istrue .)


state 33

    (27) instruccion -> repeat .

    DEF             reduce using rule 27 (instruccion -> repeat .)
    CALL            reduce using rule 27 (instruccion -> repeat .)
    ALTER           reduce using rule 27 (instruccion -> repeat .)
    NOT             reduce using rule 27 (instruccion -> repeat .)
    PRINT           reduce using rule 27 (instruccion -> repeat .)
    WHILE           reduce using rule 27 (instruccion -> repeat .)
    UNTIL           reduce using rule 27 (instruccion -> repeat .)
    CASE            reduce using rule 27 (instruccion -> repeat .)
    MOVER           reduce using rule 27 (instruccion -> repeat .)
    ALEATORIO       reduce using rule 27 (instruccion -> repeat .)
    ISTRUE          reduce using rule 27 (instruccion -> repeat .)
    REPEAT          reduce using rule 27 (instruccion -> repeat .)
    ID              reduce using rule 27 (instruccion -> repeat .)
    LED             reduce using rule 27 (instruccion -> repeat .)
    ZIGZAG          reduce using rule 27 (instruccion -> repeat .)
    ZAGZIG          reduce using rule 27 (instruccion -> repeat .)
    COMMENT         reduce using rule 27 (instruccion -> repeat .)
    RP              reduce using rule 27 (instruccion -> repeat .)
    BREAK           reduce using rule 27 (instruccion -> repeat .)


state 34

    (28) instruccion -> change .

    DEF             reduce using rule 28 (instruccion -> change .)
    CALL            reduce using rule 28 (instruccion -> change .)
    ALTER           reduce using rule 28 (instruccion -> change .)
    NOT             reduce using rule 28 (instruccion -> change .)
    PRINT           reduce using rule 28 (instruccion -> change .)
    WHILE           reduce using rule 28 (instruccion -> change .)
    UNTIL           reduce using rule 28 (instruccion -> change .)
    CASE            reduce using rule 28 (instruccion -> change .)
    MOVER           reduce using rule 28 (instruccion -> change .)
    ALEATORIO       reduce using rule 28 (instruccion -> change .)
    ISTRUE          reduce using rule 28 (instruccion -> change .)
    REPEAT          reduce using rule 28 (instruccion -> change .)
    ID              reduce using rule 28 (instruccion -> change .)
    LED             reduce using rule 28 (instruccion -> change .)
    ZIGZAG          reduce using rule 28 (instruccion -> change .)
    ZAGZIG          reduce using rule 28 (instruccion -> change .)
    COMMENT         reduce using rule 28 (instruccion -> change .)
    RP              reduce using rule 28 (instruccion -> change .)
    BREAK           reduce using rule 28 (instruccion -> change .)


state 35

    (29) instruccion -> led .

    DEF             reduce using rule 29 (instruccion -> led .)
    CALL            reduce using rule 29 (instruccion -> led .)
    ALTER           reduce using rule 29 (instruccion -> led .)
    NOT             reduce using rule 29 (instruccion -> led .)
    PRINT           reduce using rule 29 (instruccion -> led .)
    WHILE           reduce using rule 29 (instruccion -> led .)
    UNTIL           reduce using rule 29 (instruccion -> led .)
    CASE            reduce using rule 29 (instruccion -> led .)
    MOVER           reduce using rule 29 (instruccion -> led .)
    ALEATORIO       reduce using rule 29 (instruccion -> led .)
    ISTRUE          reduce using rule 29 (instruccion -> led .)
    REPEAT          reduce using rule 29 (instruccion -> led .)
    ID              reduce using rule 29 (instruccion -> led .)
    LED             reduce using rule 29 (instruccion -> led .)
    ZIGZAG          reduce using rule 29 (instruccion -> led .)
    ZAGZIG          reduce using rule 29 (instruccion -> led .)
    COMMENT         reduce using rule 29 (instruccion -> led .)
    RP              reduce using rule 29 (instruccion -> led .)
    BREAK           reduce using rule 29 (instruccion -> led .)


state 36

    (30) instruccion -> zigzag .

    DEF             reduce using rule 30 (instruccion -> zigzag .)
    CALL            reduce using rule 30 (instruccion -> zigzag .)
    ALTER           reduce using rule 30 (instruccion -> zigzag .)
    NOT             reduce using rule 30 (instruccion -> zigzag .)
    PRINT           reduce using rule 30 (instruccion -> zigzag .)
    WHILE           reduce using rule 30 (instruccion -> zigzag .)
    UNTIL           reduce using rule 30 (instruccion -> zigzag .)
    CASE            reduce using rule 30 (instruccion -> zigzag .)
    MOVER           reduce using rule 30 (instruccion -> zigzag .)
    ALEATORIO       reduce using rule 30 (instruccion -> zigzag .)
    ISTRUE          reduce using rule 30 (instruccion -> zigzag .)
    REPEAT          reduce using rule 30 (instruccion -> zigzag .)
    ID              reduce using rule 30 (instruccion -> zigzag .)
    LED             reduce using rule 30 (instruccion -> zigzag .)
    ZIGZAG          reduce using rule 30 (instruccion -> zigzag .)
    ZAGZIG          reduce using rule 30 (instruccion -> zigzag .)
    COMMENT         reduce using rule 30 (instruccion -> zigzag .)
    RP              reduce using rule 30 (instruccion -> zigzag .)
    BREAK           reduce using rule 30 (instruccion -> zigzag .)


state 37

    (31) instruccion -> zagzig .

    DEF             reduce using rule 31 (instruccion -> zagzig .)
    CALL            reduce using rule 31 (instruccion -> zagzig .)
    ALTER           reduce using rule 31 (instruccion -> zagzig .)
    NOT             reduce using rule 31 (instruccion -> zagzig .)
    PRINT           reduce using rule 31 (instruccion -> zagzig .)
    WHILE           reduce using rule 31 (instruccion -> zagzig .)
    UNTIL           reduce using rule 31 (instruccion -> zagzig .)
    CASE            reduce using rule 31 (instruccion -> zagzig .)
    MOVER           reduce using rule 31 (instruccion -> zagzig .)
    ALEATORIO       reduce using rule 31 (instruccion -> zagzig .)
    ISTRUE          reduce using rule 31 (instruccion -> zagzig .)
    REPEAT          reduce using rule 31 (instruccion -> zagzig .)
    ID              reduce using rule 31 (instruccion -> zagzig .)
    LED             reduce using rule 31 (instruccion -> zagzig .)
    ZIGZAG          reduce using rule 31 (instruccion -> zagzig .)
    ZAGZIG          reduce using rule 31 (instruccion -> zagzig .)
    COMMENT         reduce using rule 31 (instruccion -> zagzig .)
    RP              reduce using rule 31 (instruccion -> zagzig .)
    BREAK           reduce using rule 31 (instruccion -> zagzig .)


state 38

    (32) instruccion -> comment .

    DEF             reduce using rule 32 (instruccion -> comment .)
    CALL            reduce using rule 32 (instruccion -> comment .)
    ALTER           reduce using rule 32 (instruccion -> comment .)
    NOT             reduce using rule 32 (instruccion -> comment .)
    PRINT           reduce using rule 32 (instruccion -> comment .)
    WHILE           reduce using rule 32 (instruccion -> comment .)
    UNTIL           reduce using rule 32 (instruccion -> comment .)
    CASE            reduce using rule 32 (instruccion -> comment .)
    MOVER           reduce using rule 32 (instruccion -> comment .)
    ALEATORIO       reduce using rule 32 (instruccion -> comment .)
    ISTRUE          reduce using rule 32 (instruccion -> comment .)
    REPEAT          reduce using rule 32 (instruccion -> comment .)
    ID              reduce using rule 32 (instruccion -> comment .)
    LED             reduce using rule 32 (instruccion -> comment .)
    ZIGZAG          reduce using rule 32 (instruccion -> comment .)
    ZAGZIG          reduce using rule 32 (instruccion -> comment .)
    COMMENT         reduce using rule 32 (instruccion -> comment .)
    RP              reduce using rule 32 (instruccion -> comment .)
    BREAK           reduce using rule 32 (instruccion -> comment .)


state 39

    (34) def -> DEF . LP ID COMMA TYPE COMMA value RP SEMICOLON
    (35) def -> DEF . LP ID COMMA TYPE RP SEMICOLON

    LP              shift and go to state 59


state 40

    (79) change -> ID . LP value RP SEMICOLON

    LP              shift and go to state 60


state 41

    (36) call -> CALL . LP ID RP SEMICOLON

    LP              shift and go to state 61


state 42

    (37) alter -> ALTER . LP ID COMMA factor RP SEMICOLON
    (38) alter -> ALTER . LP ID COMMA ID RP SEMICOLON

    LP              shift and go to state 62


state 43

    (39) not -> NOT . LP ID RP SEMICOLON

    LP              shift and go to state 63


state 44

    (41) print -> PRINT . LP prints RP SEMICOLON

    LP              shift and go to state 64


state 45

    (46) iterative -> WHILE . LP condicion RP LP instrucciones RP SEMICOLON

    LP              shift and go to state 65


state 46

    (47) iterative -> UNTIL . LP instrucciones RP LP condicion RP SEMICOLON

    LP              shift and go to state 66


state 47

    (48) case -> CASE . funciones SEMICOLON
    (49) case -> CASE . ID funciones SEMICOLON
    (61) funciones -> . funcion
    (62) funciones -> . funciones funcion
    (63) funcion -> . when then
    (64) funcion -> . when then else
    (65) when -> . WHEN LP condicion RP
    (66) when -> . WHEN value

    ID              shift and go to state 68
    WHEN            shift and go to state 71

    funciones                      shift and go to state 67
    funcion                        shift and go to state 69
    when                           shift and go to state 70

state 48

    (50) mover -> MOVER . LP DIR RP SEMICOLON

    LP              shift and go to state 72


state 49

    (51) aleatorio -> ALEATORIO . LP RP SEMICOLON

    LP              shift and go to state 73


state 50

    (40) istrue -> ISTRUE . LP ID RP SEMICOLON

    LP              shift and go to state 74


state 51

    (55) repeat -> REPEAT . LP instrucciones break RP SEMICOLON

    LP              shift and go to state 75


state 52

    (54) led -> LED . LP RP SEMICOLON

    LP              shift and go to state 76


state 53

    (52) zigzag -> ZIGZAG . LP RP SEMICOLON

    LP              shift and go to state 77


state 54

    (53) zagzig -> ZAGZIG . LP RP SEMICOLON

    LP              shift and go to state 78


state 55

    (12) proc -> PROC ID LP . instrucciones RP SEMICOLON
    (15) instrucciones -> . instruccion instrucciones
    (16) instrucciones -> . instruccion
    (17) instruccion -> . def
    (18) instruccion -> . call
    (19) instruccion -> . alter
    (20) instruccion -> . not
    (21) instruccion -> . print
    (22) instruccion -> . iterative
    (23) instruccion -> . case
    (24) instruccion -> . mover
    (25) instruccion -> . aleatorio
    (26) instruccion -> . istrue
    (27) instruccion -> . repeat
    (28) instruccion -> . change
    (29) instruccion -> . led
    (30) instruccion -> . zigzag
    (31) instruccion -> . zagzig
    (32) instruccion -> . comment
    (34) def -> . DEF LP ID COMMA TYPE COMMA value RP SEMICOLON
    (35) def -> . DEF LP ID COMMA TYPE RP SEMICOLON
    (36) call -> . CALL LP ID RP SEMICOLON
    (37) alter -> . ALTER LP ID COMMA factor RP SEMICOLON
    (38) alter -> . ALTER LP ID COMMA ID RP SEMICOLON
    (39) not -> . NOT LP ID RP SEMICOLON
    (41) print -> . PRINT LP prints RP SEMICOLON
    (46) iterative -> . WHILE LP condicion RP LP instrucciones RP SEMICOLON
    (47) iterative -> . UNTIL LP instrucciones RP LP condicion RP SEMICOLON
    (48) case -> . CASE funciones SEMICOLON
    (49) case -> . CASE ID funciones SEMICOLON
    (50) mover -> . MOVER LP DIR RP SEMICOLON
    (51) aleatorio -> . ALEATORIO LP RP SEMICOLON
    (40) istrue -> . ISTRUE LP ID RP SEMICOLON
    (55) repeat -> . REPEAT LP instrucciones break RP SEMICOLON
    (79) change -> . ID LP value RP SEMICOLON
    (54) led -> . LED LP RP SEMICOLON
    (52) zigzag -> . ZIGZAG LP RP SEMICOLON
    (53) zagzig -> . ZAGZIG LP RP SEMICOLON
    (89) comment -> . COMMENT

    DEF             shift and go to state 39
    CALL            shift and go to state 41
    ALTER           shift and go to state 42
    NOT             shift and go to state 43
    PRINT           shift and go to state 44
    WHILE           shift and go to state 45
    UNTIL           shift and go to state 46
    CASE            shift and go to state 47
    MOVER           shift and go to state 48
    ALEATORIO       shift and go to state 49
    ISTRUE          shift and go to state 50
    REPEAT          shift and go to state 51
    ID              shift and go to state 40
    LED             shift and go to state 52
    ZIGZAG          shift and go to state 53
    ZAGZIG          shift and go to state 54
    COMMENT         shift and go to state 3

    instrucciones                  shift and go to state 79
    instruccion                    shift and go to state 22
    def                            shift and go to state 23
    call                           shift and go to state 24
    alter                          shift and go to state 25
    not                            shift and go to state 26
    print                          shift and go to state 27
    iterative                      shift and go to state 28
    case                           shift and go to state 29
    mover                          shift and go to state 30
    aleatorio                      shift and go to state 31
    istrue                         shift and go to state 32
    repeat                         shift and go to state 33
    change                         shift and go to state 34
    led                            shift and go to state 35
    zigzag                         shift and go to state 36
    zagzig                         shift and go to state 37
    comment                        shift and go to state 38

state 56

    (13) main -> MAIN LP instrucciones RP . SEMICOLON

    SEMICOLON       shift and go to state 80


state 57

    (14) main -> MAIN LP RP SEMICOLON .

    PROC            reduce using rule 14 (main -> MAIN LP RP SEMICOLON .)
    COMMENT         reduce using rule 14 (main -> MAIN LP RP SEMICOLON .)
    $end            reduce using rule 14 (main -> MAIN LP RP SEMICOLON .)


state 58

    (15) instrucciones -> instruccion instrucciones .

    RP              reduce using rule 15 (instrucciones -> instruccion instrucciones .)
    BREAK           reduce using rule 15 (instrucciones -> instruccion instrucciones .)


state 59

    (34) def -> DEF LP . ID COMMA TYPE COMMA value RP SEMICOLON
    (35) def -> DEF LP . ID COMMA TYPE RP SEMICOLON

    ID              shift and go to state 81


state 60

    (79) change -> ID LP . value RP SEMICOLON
    (56) value -> . factor
    (57) value -> . BOOL
    (58) value -> . expression
    (59) value -> . ID
    (60) value -> . not
    (86) factor -> . INTEGER
    (87) factor -> . MINUS expression
    (88) factor -> . LP expression RP
    (80) expression -> . expression PLUS term
    (81) expression -> . expression MINUS term
    (82) expression -> . term
    (39) not -> . NOT LP ID RP SEMICOLON
    (83) term -> . term STAR factor
    (84) term -> . term SLASH factor
    (85) term -> . factor

    BOOL            shift and go to state 86
    ID              shift and go to state 82
    INTEGER         shift and go to state 89
    MINUS           shift and go to state 90
    LP              shift and go to state 83
    NOT             shift and go to state 43

    value                          shift and go to state 84
    factor                         shift and go to state 85
    expression                     shift and go to state 87
    not                            shift and go to state 88
    term                           shift and go to state 91

state 61

    (36) call -> CALL LP . ID RP SEMICOLON

    ID              shift and go to state 92


state 62

    (37) alter -> ALTER LP . ID COMMA factor RP SEMICOLON
    (38) alter -> ALTER LP . ID COMMA ID RP SEMICOLON

    ID              shift and go to state 93


state 63

    (39) not -> NOT LP . ID RP SEMICOLON

    ID              shift and go to state 94


state 64

    (41) print -> PRINT LP . prints RP SEMICOLON
    (42) prints -> . printexpr
    (43) prints -> . prints printexpr
    (44) printexpr -> . STRING
    (45) printexpr -> . ID

    STRING          shift and go to state 97
    ID              shift and go to state 98

    prints                         shift and go to state 95
    printexpr                      shift and go to state 96

state 65

    (46) iterative -> WHILE LP . condicion RP LP instrucciones RP SEMICOLON
    (69) condicion -> . oper GT oper
    (70) condicion -> . oper LT oper
    (71) condicion -> . value EQUAL value
    (72) condicion -> . value DIF value
    (73) condicion -> . oper GTE oper
    (74) condicion -> . oper LTE oper
    (75) condicion -> . istrue
    (76) oper -> . factor
    (77) oper -> . expression
    (78) oper -> . ID
    (56) value -> . factor
    (57) value -> . BOOL
    (58) value -> . expression
    (59) value -> . ID
    (60) value -> . not
    (40) istrue -> . ISTRUE LP ID RP SEMICOLON
    (86) factor -> . INTEGER
    (87) factor -> . MINUS expression
    (88) factor -> . LP expression RP
    (80) expression -> . expression PLUS term
    (81) expression -> . expression MINUS term
    (82) expression -> . term
    (39) not -> . NOT LP ID RP SEMICOLON
    (83) term -> . term STAR factor
    (84) term -> . term SLASH factor
    (85) term -> . factor

    ID              shift and go to state 105
    BOOL            shift and go to state 86
    ISTRUE          shift and go to state 50
    INTEGER         shift and go to state 89
    MINUS           shift and go to state 90
    LP              shift and go to state 83
    NOT             shift and go to state 43

    condicion                      shift and go to state 99
    oper                           shift and go to state 100
    value                          shift and go to state 101
    istrue                         shift and go to state 102
    factor                         shift and go to state 103
    expression                     shift and go to state 104
    not                            shift and go to state 88
    term                           shift and go to state 91

state 66

    (47) iterative -> UNTIL LP . instrucciones RP LP condicion RP SEMICOLON
    (15) instrucciones -> . instruccion instrucciones
    (16) instrucciones -> . instruccion
    (17) instruccion -> . def
    (18) instruccion -> . call
    (19) instruccion -> . alter
    (20) instruccion -> . not
    (21) instruccion -> . print
    (22) instruccion -> . iterative
    (23) instruccion -> . case
    (24) instruccion -> . mover
    (25) instruccion -> . aleatorio
    (26) instruccion -> . istrue
    (27) instruccion -> . repeat
    (28) instruccion -> . change
    (29) instruccion -> . led
    (30) instruccion -> . zigzag
    (31) instruccion -> . zagzig
    (32) instruccion -> . comment
    (34) def -> . DEF LP ID COMMA TYPE COMMA value RP SEMICOLON
    (35) def -> . DEF LP ID COMMA TYPE RP SEMICOLON
    (36) call -> . CALL LP ID RP SEMICOLON
    (37) alter -> . ALTER LP ID COMMA factor RP SEMICOLON
    (38) alter -> . ALTER LP ID COMMA ID RP SEMICOLON
    (39) not -> . NOT LP ID RP SEMICOLON
    (41) print -> . PRINT LP prints RP SEMICOLON
    (46) iterative -> . WHILE LP condicion RP LP instrucciones RP SEMICOLON
    (47) iterative -> . UNTIL LP instrucciones RP LP condicion RP SEMICOLON
    (48) case -> . CASE funciones SEMICOLON
    (49) case -> . CASE ID funciones SEMICOLON
    (50) mover -> . MOVER LP DIR RP SEMICOLON
    (51) aleatorio -> . ALEATORIO LP RP SEMICOLON
    (40) istrue -> . ISTRUE LP ID RP SEMICOLON
    (55) repeat -> . REPEAT LP instrucciones break RP SEMICOLON
    (79) change -> . ID LP value RP SEMICOLON
    (54) led -> . LED LP RP SEMICOLON
    (52) zigzag -> . ZIGZAG LP RP SEMICOLON
    (53) zagzig -> . ZAGZIG LP RP SEMICOLON
    (89) comment -> . COMMENT

    DEF             shift and go to state 39
    CALL            shift and go to state 41
    ALTER           shift and go to state 42
    NOT             shift and go to state 43
    PRINT           shift and go to state 44
    WHILE           shift and go to state 45
    UNTIL           shift and go to state 46
    CASE            shift and go to state 47
    MOVER           shift and go to state 48
    ALEATORIO       shift and go to state 49
    ISTRUE          shift and go to state 50
    REPEAT          shift and go to state 51
    ID              shift and go to state 40
    LED             shift and go to state 52
    ZIGZAG          shift and go to state 53
    ZAGZIG          shift and go to state 54
    COMMENT         shift and go to state 3

    instrucciones                  shift and go to state 106
    instruccion                    shift and go to state 22
    def                            shift and go to state 23
    call                           shift and go to state 24
    alter                          shift and go to state 25
    not                            shift and go to state 26
    print                          shift and go to state 27
    iterative                      shift and go to state 28
    case                           shift and go to state 29
    mover                          shift and go to state 30
    aleatorio                      shift and go to state 31
    istrue                         shift and go to state 32
    repeat                         shift and go to state 33
    change                         shift and go to state 34
    led                            shift and go to state 35
    zigzag                         shift and go to state 36
    zagzig                         shift and go to state 37
    comment                        shift and go to state 38

state 67

    (48) case -> CASE funciones . SEMICOLON
    (62) funciones -> funciones . funcion
    (63) funcion -> . when then
    (64) funcion -> . when then else
    (65) when -> . WHEN LP condicion RP
    (66) when -> . WHEN value

    SEMICOLON       shift and go to state 107
    WHEN            shift and go to state 71

    funcion                        shift and go to state 108
    when                           shift and go to state 70

state 68

    (49) case -> CASE ID . funciones SEMICOLON
    (61) funciones -> . funcion
    (62) funciones -> . funciones funcion
    (63) funcion -> . when then
    (64) funcion -> . when then else
    (65) when -> . WHEN LP condicion RP
    (66) when -> . WHEN value

    WHEN            shift and go to state 71

    funciones                      shift and go to state 109
    funcion                        shift and go to state 69
    when                           shift and go to state 70

state 69

    (61) funciones -> funcion .

    SEMICOLON       reduce using rule 61 (funciones -> funcion .)
    WHEN            reduce using rule 61 (funciones -> funcion .)


state 70

    (63) funcion -> when . then
    (64) funcion -> when . then else
    (67) then -> . THEN LP instrucciones RP

    THEN            shift and go to state 111

    then                           shift and go to state 110

state 71

    (65) when -> WHEN . LP condicion RP
    (66) when -> WHEN . value
    (56) value -> . factor
    (57) value -> . BOOL
    (58) value -> . expression
    (59) value -> . ID
    (60) value -> . not
    (86) factor -> . INTEGER
    (87) factor -> . MINUS expression
    (88) factor -> . LP expression RP
    (80) expression -> . expression PLUS term
    (81) expression -> . expression MINUS term
    (82) expression -> . term
    (39) not -> . NOT LP ID RP SEMICOLON
    (83) term -> . term STAR factor
    (84) term -> . term SLASH factor
    (85) term -> . factor

    LP              shift and go to state 112
    BOOL            shift and go to state 86
    ID              shift and go to state 82
    INTEGER         shift and go to state 89
    MINUS           shift and go to state 90
    NOT             shift and go to state 43

    value                          shift and go to state 113
    factor                         shift and go to state 85
    expression                     shift and go to state 87
    not                            shift and go to state 88
    term                           shift and go to state 91

state 72

    (50) mover -> MOVER LP . DIR RP SEMICOLON

    DIR             shift and go to state 114


state 73

    (51) aleatorio -> ALEATORIO LP . RP SEMICOLON

    RP              shift and go to state 115


state 74

    (40) istrue -> ISTRUE LP . ID RP SEMICOLON

    ID              shift and go to state 116


state 75

    (55) repeat -> REPEAT LP . instrucciones break RP SEMICOLON
    (15) instrucciones -> . instruccion instrucciones
    (16) instrucciones -> . instruccion
    (17) instruccion -> . def
    (18) instruccion -> . call
    (19) instruccion -> . alter
    (20) instruccion -> . not
    (21) instruccion -> . print
    (22) instruccion -> . iterative
    (23) instruccion -> . case
    (24) instruccion -> . mover
    (25) instruccion -> . aleatorio
    (26) instruccion -> . istrue
    (27) instruccion -> . repeat
    (28) instruccion -> . change
    (29) instruccion -> . led
    (30) instruccion -> . zigzag
    (31) instruccion -> . zagzig
    (32) instruccion -> . comment
    (34) def -> . DEF LP ID COMMA TYPE COMMA value RP SEMICOLON
    (35) def -> . DEF LP ID COMMA TYPE RP SEMICOLON
    (36) call -> . CALL LP ID RP SEMICOLON
    (37) alter -> . ALTER LP ID COMMA factor RP SEMICOLON
    (38) alter -> . ALTER LP ID COMMA ID RP SEMICOLON
    (39) not -> . NOT LP ID RP SEMICOLON
    (41) print -> . PRINT LP prints RP SEMICOLON
    (46) iterative -> . WHILE LP condicion RP LP instrucciones RP SEMICOLON
    (47) iterative -> . UNTIL LP instrucciones RP LP condicion RP SEMICOLON
    (48) case -> . CASE funciones SEMICOLON
    (49) case -> . CASE ID funciones SEMICOLON
    (50) mover -> . MOVER LP DIR RP SEMICOLON
    (51) aleatorio -> . ALEATORIO LP RP SEMICOLON
    (40) istrue -> . ISTRUE LP ID RP SEMICOLON
    (55) repeat -> . REPEAT LP instrucciones break RP SEMICOLON
    (79) change -> . ID LP value RP SEMICOLON
    (54) led -> . LED LP RP SEMICOLON
    (52) zigzag -> . ZIGZAG LP RP SEMICOLON
    (53) zagzig -> . ZAGZIG LP RP SEMICOLON
    (89) comment -> . COMMENT

    DEF             shift and go to state 39
    CALL            shift and go to state 41
    ALTER           shift and go to state 42
    NOT             shift and go to state 43
    PRINT           shift and go to state 44
    WHILE           shift and go to state 45
    UNTIL           shift and go to state 46
    CASE            shift and go to state 47
    MOVER           shift and go to state 48
    ALEATORIO       shift and go to state 49
    ISTRUE          shift and go to state 50
    REPEAT          shift and go to state 51
    ID              shift and go to state 40
    LED             shift and go to state 52
    ZIGZAG          shift and go to state 53
    ZAGZIG          shift and go to state 54
    COMMENT         shift and go to state 3

    instrucciones                  shift and go to state 117
    instruccion                    shift and go to state 22
    def                            shift and go to state 23
    call                           shift and go to state 24
    alter                          shift and go to state 25
    not                            shift and go to state 26
    print                          shift and go to state 27
    iterative                      shift and go to state 28
    case                           shift and go to state 29
    mover                          shift and go to state 30
    aleatorio                      shift and go to state 31
    istrue                         shift and go to state 32
    repeat                         shift and go to state 33
    change                         shift and go to state 34
    led                            shift and go to state 35
    zigzag                         shift and go to state 36
    zagzig                         shift and go to state 37
    comment                        shift and go to state 38

state 76

    (54) led -> LED LP . RP SEMICOLON

    RP              shift and go to state 118


state 77

    (52) zigzag -> ZIGZAG LP . RP SEMICOLON

    RP              shift and go to state 119


state 78

    (53) zagzig -> ZAGZIG LP . RP SEMICOLON

    RP              shift and go to state 120


state 79

    (12) proc -> PROC ID LP instrucciones . RP SEMICOLON

    RP              shift and go to state 121


state 80

    (13) main -> MAIN LP instrucciones RP SEMICOLON .

    PROC            reduce using rule 13 (main -> MAIN LP instrucciones RP SEMICOLON .)
    COMMENT         reduce using rule 13 (main -> MAIN LP instrucciones RP SEMICOLON .)
    $end            reduce using rule 13 (main -> MAIN LP instrucciones RP SEMICOLON .)


state 81

    (34) def -> DEF LP ID . COMMA TYPE COMMA value RP SEMICOLON
    (35) def -> DEF LP ID . COMMA TYPE RP SEMICOLON

    COMMA           shift and go to state 122


state 82

    (59) value -> ID .

    RP              reduce using rule 59 (value -> ID .)
    THEN            reduce using rule 59 (value -> ID .)


state 83

    (88) factor -> LP . expression RP
    (80) expression -> . expression PLUS term
    (81) expression -> . expression MINUS term
    (82) expression -> . term
    (83) term -> . term STAR factor
    (84) term -> . term SLASH factor
    (85) term -> . factor
    (86) factor -> . INTEGER
    (87) factor -> . MINUS expression
    (88) factor -> . LP expression RP

    INTEGER         shift and go to state 89
    MINUS           shift and go to state 90
    LP              shift and go to state 83

    expression                     shift and go to state 123
    term                           shift and go to state 91
    factor                         shift and go to state 124

state 84

    (79) change -> ID LP value . RP SEMICOLON

    RP              shift and go to state 125


state 85

    (56) value -> factor .
    (85) term -> factor .

  ! reduce/reduce conflict for RP resolved using rule 56 (value -> factor .)
  ! reduce/reduce conflict for THEN resolved using rule 56 (value -> factor .)
    RP              reduce using rule 56 (value -> factor .)
    THEN            reduce using rule 56 (value -> factor .)
    STAR            reduce using rule 85 (term -> factor .)
    SLASH           reduce using rule 85 (term -> factor .)
    PLUS            reduce using rule 85 (term -> factor .)
    MINUS           reduce using rule 85 (term -> factor .)

  ! RP              [ reduce using rule 85 (term -> factor .) ]
  ! THEN            [ reduce using rule 85 (term -> factor .) ]


state 86

    (57) value -> BOOL .

    RP              reduce using rule 57 (value -> BOOL .)
    EQUAL           reduce using rule 57 (value -> BOOL .)
    DIF             reduce using rule 57 (value -> BOOL .)
    THEN            reduce using rule 57 (value -> BOOL .)


state 87

    (58) value -> expression .
    (80) expression -> expression . PLUS term
    (81) expression -> expression . MINUS term

    RP              reduce using rule 58 (value -> expression .)
    THEN            reduce using rule 58 (value -> expression .)
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127


state 88

    (60) value -> not .

    RP              reduce using rule 60 (value -> not .)
    EQUAL           reduce using rule 60 (value -> not .)
    DIF             reduce using rule 60 (value -> not .)
    THEN            reduce using rule 60 (value -> not .)


state 89

    (86) factor -> INTEGER .

    RP              reduce using rule 86 (factor -> INTEGER .)
    STAR            reduce using rule 86 (factor -> INTEGER .)
    SLASH           reduce using rule 86 (factor -> INTEGER .)
    PLUS            reduce using rule 86 (factor -> INTEGER .)
    MINUS           reduce using rule 86 (factor -> INTEGER .)
    GT              reduce using rule 86 (factor -> INTEGER .)
    LT              reduce using rule 86 (factor -> INTEGER .)
    GTE             reduce using rule 86 (factor -> INTEGER .)
    LTE             reduce using rule 86 (factor -> INTEGER .)
    EQUAL           reduce using rule 86 (factor -> INTEGER .)
    DIF             reduce using rule 86 (factor -> INTEGER .)
    THEN            reduce using rule 86 (factor -> INTEGER .)


state 90

    (87) factor -> MINUS . expression
    (80) expression -> . expression PLUS term
    (81) expression -> . expression MINUS term
    (82) expression -> . term
    (83) term -> . term STAR factor
    (84) term -> . term SLASH factor
    (85) term -> . factor
    (86) factor -> . INTEGER
    (87) factor -> . MINUS expression
    (88) factor -> . LP expression RP

    INTEGER         shift and go to state 89
    MINUS           shift and go to state 90
    LP              shift and go to state 83

    expression                     shift and go to state 128
    term                           shift and go to state 91
    factor                         shift and go to state 124

state 91

    (82) expression -> term .
    (83) term -> term . STAR factor
    (84) term -> term . SLASH factor

  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for SLASH resolved as shift
    PLUS            reduce using rule 82 (expression -> term .)
    MINUS           reduce using rule 82 (expression -> term .)
    RP              reduce using rule 82 (expression -> term .)
    GT              reduce using rule 82 (expression -> term .)
    LT              reduce using rule 82 (expression -> term .)
    GTE             reduce using rule 82 (expression -> term .)
    LTE             reduce using rule 82 (expression -> term .)
    EQUAL           reduce using rule 82 (expression -> term .)
    DIF             reduce using rule 82 (expression -> term .)
    THEN            reduce using rule 82 (expression -> term .)
    STAR            shift and go to state 129
    SLASH           shift and go to state 130

  ! STAR            [ reduce using rule 82 (expression -> term .) ]
  ! SLASH           [ reduce using rule 82 (expression -> term .) ]


state 92

    (36) call -> CALL LP ID . RP SEMICOLON

    RP              shift and go to state 131


state 93

    (37) alter -> ALTER LP ID . COMMA factor RP SEMICOLON
    (38) alter -> ALTER LP ID . COMMA ID RP SEMICOLON

    COMMA           shift and go to state 132


state 94

    (39) not -> NOT LP ID . RP SEMICOLON

    RP              shift and go to state 133


state 95

    (41) print -> PRINT LP prints . RP SEMICOLON
    (43) prints -> prints . printexpr
    (44) printexpr -> . STRING
    (45) printexpr -> . ID

    RP              shift and go to state 134
    STRING          shift and go to state 97
    ID              shift and go to state 98

    printexpr                      shift and go to state 135

state 96

    (42) prints -> printexpr .

    RP              reduce using rule 42 (prints -> printexpr .)
    STRING          reduce using rule 42 (prints -> printexpr .)
    ID              reduce using rule 42 (prints -> printexpr .)


state 97

    (44) printexpr -> STRING .

    RP              reduce using rule 44 (printexpr -> STRING .)
    STRING          reduce using rule 44 (printexpr -> STRING .)
    ID              reduce using rule 44 (printexpr -> STRING .)


state 98

    (45) printexpr -> ID .

    RP              reduce using rule 45 (printexpr -> ID .)
    STRING          reduce using rule 45 (printexpr -> ID .)
    ID              reduce using rule 45 (printexpr -> ID .)


state 99

    (46) iterative -> WHILE LP condicion . RP LP instrucciones RP SEMICOLON

    RP              shift and go to state 136


state 100

    (69) condicion -> oper . GT oper
    (70) condicion -> oper . LT oper
    (73) condicion -> oper . GTE oper
    (74) condicion -> oper . LTE oper

    GT              shift and go to state 137
    LT              shift and go to state 138
    GTE             shift and go to state 139
    LTE             shift and go to state 140


state 101

    (71) condicion -> value . EQUAL value
    (72) condicion -> value . DIF value

    EQUAL           shift and go to state 141
    DIF             shift and go to state 142


state 102

    (75) condicion -> istrue .

    RP              reduce using rule 75 (condicion -> istrue .)


state 103

    (76) oper -> factor .
    (56) value -> factor .
    (85) term -> factor .

  ! reduce/reduce conflict for GT resolved using rule 76 (oper -> factor .)
  ! reduce/reduce conflict for LT resolved using rule 76 (oper -> factor .)
  ! reduce/reduce conflict for GTE resolved using rule 76 (oper -> factor .)
  ! reduce/reduce conflict for LTE resolved using rule 76 (oper -> factor .)
  ! reduce/reduce conflict for EQUAL resolved using rule 56 (value -> factor .)
  ! reduce/reduce conflict for DIF resolved using rule 56 (value -> factor .)
    GT              reduce using rule 76 (oper -> factor .)
    LT              reduce using rule 76 (oper -> factor .)
    GTE             reduce using rule 76 (oper -> factor .)
    LTE             reduce using rule 76 (oper -> factor .)
    EQUAL           reduce using rule 56 (value -> factor .)
    DIF             reduce using rule 56 (value -> factor .)
    STAR            reduce using rule 85 (term -> factor .)
    SLASH           reduce using rule 85 (term -> factor .)
    PLUS            reduce using rule 85 (term -> factor .)
    MINUS           reduce using rule 85 (term -> factor .)
    RP              reduce using rule 85 (term -> factor .)

  ! GT              [ reduce using rule 85 (term -> factor .) ]
  ! LT              [ reduce using rule 85 (term -> factor .) ]
  ! GTE             [ reduce using rule 85 (term -> factor .) ]
  ! LTE             [ reduce using rule 85 (term -> factor .) ]
  ! EQUAL           [ reduce using rule 85 (term -> factor .) ]
  ! DIF             [ reduce using rule 85 (term -> factor .) ]


state 104

    (77) oper -> expression .
    (58) value -> expression .
    (80) expression -> expression . PLUS term
    (81) expression -> expression . MINUS term

    GT              reduce using rule 77 (oper -> expression .)
    LT              reduce using rule 77 (oper -> expression .)
    GTE             reduce using rule 77 (oper -> expression .)
    LTE             reduce using rule 77 (oper -> expression .)
    EQUAL           reduce using rule 58 (value -> expression .)
    DIF             reduce using rule 58 (value -> expression .)
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127


state 105

    (78) oper -> ID .
    (59) value -> ID .

    GT              reduce using rule 78 (oper -> ID .)
    LT              reduce using rule 78 (oper -> ID .)
    GTE             reduce using rule 78 (oper -> ID .)
    LTE             reduce using rule 78 (oper -> ID .)
    EQUAL           reduce using rule 59 (value -> ID .)
    DIF             reduce using rule 59 (value -> ID .)


state 106

    (47) iterative -> UNTIL LP instrucciones . RP LP condicion RP SEMICOLON

    RP              shift and go to state 143


state 107

    (48) case -> CASE funciones SEMICOLON .

    DEF             reduce using rule 48 (case -> CASE funciones SEMICOLON .)
    CALL            reduce using rule 48 (case -> CASE funciones SEMICOLON .)
    ALTER           reduce using rule 48 (case -> CASE funciones SEMICOLON .)
    NOT             reduce using rule 48 (case -> CASE funciones SEMICOLON .)
    PRINT           reduce using rule 48 (case -> CASE funciones SEMICOLON .)
    WHILE           reduce using rule 48 (case -> CASE funciones SEMICOLON .)
    UNTIL           reduce using rule 48 (case -> CASE funciones SEMICOLON .)
    CASE            reduce using rule 48 (case -> CASE funciones SEMICOLON .)
    MOVER           reduce using rule 48 (case -> CASE funciones SEMICOLON .)
    ALEATORIO       reduce using rule 48 (case -> CASE funciones SEMICOLON .)
    ISTRUE          reduce using rule 48 (case -> CASE funciones SEMICOLON .)
    REPEAT          reduce using rule 48 (case -> CASE funciones SEMICOLON .)
    ID              reduce using rule 48 (case -> CASE funciones SEMICOLON .)
    LED             reduce using rule 48 (case -> CASE funciones SEMICOLON .)
    ZIGZAG          reduce using rule 48 (case -> CASE funciones SEMICOLON .)
    ZAGZIG          reduce using rule 48 (case -> CASE funciones SEMICOLON .)
    COMMENT         reduce using rule 48 (case -> CASE funciones SEMICOLON .)
    RP              reduce using rule 48 (case -> CASE funciones SEMICOLON .)
    BREAK           reduce using rule 48 (case -> CASE funciones SEMICOLON .)


state 108

    (62) funciones -> funciones funcion .

    SEMICOLON       reduce using rule 62 (funciones -> funciones funcion .)
    WHEN            reduce using rule 62 (funciones -> funciones funcion .)


state 109

    (49) case -> CASE ID funciones . SEMICOLON
    (62) funciones -> funciones . funcion
    (63) funcion -> . when then
    (64) funcion -> . when then else
    (65) when -> . WHEN LP condicion RP
    (66) when -> . WHEN value

    SEMICOLON       shift and go to state 144
    WHEN            shift and go to state 71

    funcion                        shift and go to state 108
    when                           shift and go to state 70

state 110

    (63) funcion -> when then .
    (64) funcion -> when then . else
    (68) else -> . ELSE LP instrucciones RP

    SEMICOLON       reduce using rule 63 (funcion -> when then .)
    WHEN            reduce using rule 63 (funcion -> when then .)
    ELSE            shift and go to state 146

    else                           shift and go to state 145

state 111

    (67) then -> THEN . LP instrucciones RP

    LP              shift and go to state 147


state 112

    (65) when -> WHEN LP . condicion RP
    (88) factor -> LP . expression RP
    (69) condicion -> . oper GT oper
    (70) condicion -> . oper LT oper
    (71) condicion -> . value EQUAL value
    (72) condicion -> . value DIF value
    (73) condicion -> . oper GTE oper
    (74) condicion -> . oper LTE oper
    (75) condicion -> . istrue
    (80) expression -> . expression PLUS term
    (81) expression -> . expression MINUS term
    (82) expression -> . term
    (76) oper -> . factor
    (77) oper -> . expression
    (78) oper -> . ID
    (56) value -> . factor
    (57) value -> . BOOL
    (58) value -> . expression
    (59) value -> . ID
    (60) value -> . not
    (40) istrue -> . ISTRUE LP ID RP SEMICOLON
    (83) term -> . term STAR factor
    (84) term -> . term SLASH factor
    (85) term -> . factor
    (86) factor -> . INTEGER
    (87) factor -> . MINUS expression
    (88) factor -> . LP expression RP
    (39) not -> . NOT LP ID RP SEMICOLON

    ID              shift and go to state 105
    BOOL            shift and go to state 86
    ISTRUE          shift and go to state 50
    INTEGER         shift and go to state 89
    MINUS           shift and go to state 90
    LP              shift and go to state 83
    NOT             shift and go to state 43

    condicion                      shift and go to state 148
    expression                     shift and go to state 149
    oper                           shift and go to state 100
    value                          shift and go to state 101
    istrue                         shift and go to state 102
    term                           shift and go to state 91
    factor                         shift and go to state 103
    not                            shift and go to state 88

state 113

    (66) when -> WHEN value .

    THEN            reduce using rule 66 (when -> WHEN value .)


state 114

    (50) mover -> MOVER LP DIR . RP SEMICOLON

    RP              shift and go to state 150


state 115

    (51) aleatorio -> ALEATORIO LP RP . SEMICOLON

    SEMICOLON       shift and go to state 151


state 116

    (40) istrue -> ISTRUE LP ID . RP SEMICOLON

    RP              shift and go to state 152


state 117

    (55) repeat -> REPEAT LP instrucciones . break RP SEMICOLON
    (33) break -> . BREAK SEMICOLON

    BREAK           shift and go to state 154

    break                          shift and go to state 153

state 118

    (54) led -> LED LP RP . SEMICOLON

    SEMICOLON       shift and go to state 155


state 119

    (52) zigzag -> ZIGZAG LP RP . SEMICOLON

    SEMICOLON       shift and go to state 156


state 120

    (53) zagzig -> ZAGZIG LP RP . SEMICOLON

    SEMICOLON       shift and go to state 157


state 121

    (12) proc -> PROC ID LP instrucciones RP . SEMICOLON

    SEMICOLON       shift and go to state 158


state 122

    (34) def -> DEF LP ID COMMA . TYPE COMMA value RP SEMICOLON
    (35) def -> DEF LP ID COMMA . TYPE RP SEMICOLON

    TYPE            shift and go to state 159


state 123

    (88) factor -> LP expression . RP
    (80) expression -> expression . PLUS term
    (81) expression -> expression . MINUS term

    RP              shift and go to state 160
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127


state 124

    (85) term -> factor .

    STAR            reduce using rule 85 (term -> factor .)
    SLASH           reduce using rule 85 (term -> factor .)
    RP              reduce using rule 85 (term -> factor .)
    PLUS            reduce using rule 85 (term -> factor .)
    MINUS           reduce using rule 85 (term -> factor .)
    GT              reduce using rule 85 (term -> factor .)
    LT              reduce using rule 85 (term -> factor .)
    GTE             reduce using rule 85 (term -> factor .)
    LTE             reduce using rule 85 (term -> factor .)
    EQUAL           reduce using rule 85 (term -> factor .)
    DIF             reduce using rule 85 (term -> factor .)
    THEN            reduce using rule 85 (term -> factor .)


state 125

    (79) change -> ID LP value RP . SEMICOLON

    SEMICOLON       shift and go to state 161


state 126

    (80) expression -> expression PLUS . term
    (83) term -> . term STAR factor
    (84) term -> . term SLASH factor
    (85) term -> . factor
    (86) factor -> . INTEGER
    (87) factor -> . MINUS expression
    (88) factor -> . LP expression RP

    INTEGER         shift and go to state 89
    MINUS           shift and go to state 90
    LP              shift and go to state 83

    term                           shift and go to state 162
    factor                         shift and go to state 124

state 127

    (81) expression -> expression MINUS . term
    (83) term -> . term STAR factor
    (84) term -> . term SLASH factor
    (85) term -> . factor
    (86) factor -> . INTEGER
    (87) factor -> . MINUS expression
    (88) factor -> . LP expression RP

    INTEGER         shift and go to state 89
    MINUS           shift and go to state 90
    LP              shift and go to state 83

    term                           shift and go to state 163
    factor                         shift and go to state 124

state 128

    (87) factor -> MINUS expression .
    (80) expression -> expression . PLUS term
    (81) expression -> expression . MINUS term

    RP              reduce using rule 87 (factor -> MINUS expression .)
    STAR            reduce using rule 87 (factor -> MINUS expression .)
    SLASH           reduce using rule 87 (factor -> MINUS expression .)
    PLUS            reduce using rule 87 (factor -> MINUS expression .)
    MINUS           reduce using rule 87 (factor -> MINUS expression .)
    GT              reduce using rule 87 (factor -> MINUS expression .)
    LT              reduce using rule 87 (factor -> MINUS expression .)
    GTE             reduce using rule 87 (factor -> MINUS expression .)
    LTE             reduce using rule 87 (factor -> MINUS expression .)
    EQUAL           reduce using rule 87 (factor -> MINUS expression .)
    DIF             reduce using rule 87 (factor -> MINUS expression .)
    THEN            reduce using rule 87 (factor -> MINUS expression .)

  ! PLUS            [ shift and go to state 126 ]
  ! MINUS           [ shift and go to state 127 ]


state 129

    (83) term -> term STAR . factor
    (86) factor -> . INTEGER
    (87) factor -> . MINUS expression
    (88) factor -> . LP expression RP

    INTEGER         shift and go to state 89
    MINUS           shift and go to state 90
    LP              shift and go to state 83

    factor                         shift and go to state 164

state 130

    (84) term -> term SLASH . factor
    (86) factor -> . INTEGER
    (87) factor -> . MINUS expression
    (88) factor -> . LP expression RP

    INTEGER         shift and go to state 89
    MINUS           shift and go to state 90
    LP              shift and go to state 83

    factor                         shift and go to state 165

state 131

    (36) call -> CALL LP ID RP . SEMICOLON

    SEMICOLON       shift and go to state 166


state 132

    (37) alter -> ALTER LP ID COMMA . factor RP SEMICOLON
    (38) alter -> ALTER LP ID COMMA . ID RP SEMICOLON
    (86) factor -> . INTEGER
    (87) factor -> . MINUS expression
    (88) factor -> . LP expression RP

    ID              shift and go to state 167
    INTEGER         shift and go to state 89
    MINUS           shift and go to state 90
    LP              shift and go to state 83

    factor                         shift and go to state 168

state 133

    (39) not -> NOT LP ID RP . SEMICOLON

    SEMICOLON       shift and go to state 169


state 134

    (41) print -> PRINT LP prints RP . SEMICOLON

    SEMICOLON       shift and go to state 170


state 135

    (43) prints -> prints printexpr .

    RP              reduce using rule 43 (prints -> prints printexpr .)
    STRING          reduce using rule 43 (prints -> prints printexpr .)
    ID              reduce using rule 43 (prints -> prints printexpr .)


state 136

    (46) iterative -> WHILE LP condicion RP . LP instrucciones RP SEMICOLON

    LP              shift and go to state 171


state 137

    (69) condicion -> oper GT . oper
    (76) oper -> . factor
    (77) oper -> . expression
    (78) oper -> . ID
    (86) factor -> . INTEGER
    (87) factor -> . MINUS expression
    (88) factor -> . LP expression RP
    (80) expression -> . expression PLUS term
    (81) expression -> . expression MINUS term
    (82) expression -> . term
    (83) term -> . term STAR factor
    (84) term -> . term SLASH factor
    (85) term -> . factor

    ID              shift and go to state 175
    INTEGER         shift and go to state 89
    MINUS           shift and go to state 90
    LP              shift and go to state 83

    oper                           shift and go to state 172
    factor                         shift and go to state 173
    expression                     shift and go to state 174
    term                           shift and go to state 91

state 138

    (70) condicion -> oper LT . oper
    (76) oper -> . factor
    (77) oper -> . expression
    (78) oper -> . ID
    (86) factor -> . INTEGER
    (87) factor -> . MINUS expression
    (88) factor -> . LP expression RP
    (80) expression -> . expression PLUS term
    (81) expression -> . expression MINUS term
    (82) expression -> . term
    (83) term -> . term STAR factor
    (84) term -> . term SLASH factor
    (85) term -> . factor

    ID              shift and go to state 175
    INTEGER         shift and go to state 89
    MINUS           shift and go to state 90
    LP              shift and go to state 83

    oper                           shift and go to state 176
    factor                         shift and go to state 173
    expression                     shift and go to state 174
    term                           shift and go to state 91

state 139

    (73) condicion -> oper GTE . oper
    (76) oper -> . factor
    (77) oper -> . expression
    (78) oper -> . ID
    (86) factor -> . INTEGER
    (87) factor -> . MINUS expression
    (88) factor -> . LP expression RP
    (80) expression -> . expression PLUS term
    (81) expression -> . expression MINUS term
    (82) expression -> . term
    (83) term -> . term STAR factor
    (84) term -> . term SLASH factor
    (85) term -> . factor

    ID              shift and go to state 175
    INTEGER         shift and go to state 89
    MINUS           shift and go to state 90
    LP              shift and go to state 83

    oper                           shift and go to state 177
    factor                         shift and go to state 173
    expression                     shift and go to state 174
    term                           shift and go to state 91

state 140

    (74) condicion -> oper LTE . oper
    (76) oper -> . factor
    (77) oper -> . expression
    (78) oper -> . ID
    (86) factor -> . INTEGER
    (87) factor -> . MINUS expression
    (88) factor -> . LP expression RP
    (80) expression -> . expression PLUS term
    (81) expression -> . expression MINUS term
    (82) expression -> . term
    (83) term -> . term STAR factor
    (84) term -> . term SLASH factor
    (85) term -> . factor

    ID              shift and go to state 175
    INTEGER         shift and go to state 89
    MINUS           shift and go to state 90
    LP              shift and go to state 83

    oper                           shift and go to state 178
    factor                         shift and go to state 173
    expression                     shift and go to state 174
    term                           shift and go to state 91

state 141

    (71) condicion -> value EQUAL . value
    (56) value -> . factor
    (57) value -> . BOOL
    (58) value -> . expression
    (59) value -> . ID
    (60) value -> . not
    (86) factor -> . INTEGER
    (87) factor -> . MINUS expression
    (88) factor -> . LP expression RP
    (80) expression -> . expression PLUS term
    (81) expression -> . expression MINUS term
    (82) expression -> . term
    (39) not -> . NOT LP ID RP SEMICOLON
    (83) term -> . term STAR factor
    (84) term -> . term SLASH factor
    (85) term -> . factor

    BOOL            shift and go to state 86
    ID              shift and go to state 82
    INTEGER         shift and go to state 89
    MINUS           shift and go to state 90
    LP              shift and go to state 83
    NOT             shift and go to state 43

    value                          shift and go to state 179
    factor                         shift and go to state 85
    expression                     shift and go to state 87
    not                            shift and go to state 88
    term                           shift and go to state 91

state 142

    (72) condicion -> value DIF . value
    (56) value -> . factor
    (57) value -> . BOOL
    (58) value -> . expression
    (59) value -> . ID
    (60) value -> . not
    (86) factor -> . INTEGER
    (87) factor -> . MINUS expression
    (88) factor -> . LP expression RP
    (80) expression -> . expression PLUS term
    (81) expression -> . expression MINUS term
    (82) expression -> . term
    (39) not -> . NOT LP ID RP SEMICOLON
    (83) term -> . term STAR factor
    (84) term -> . term SLASH factor
    (85) term -> . factor

    BOOL            shift and go to state 86
    ID              shift and go to state 82
    INTEGER         shift and go to state 89
    MINUS           shift and go to state 90
    LP              shift and go to state 83
    NOT             shift and go to state 43

    value                          shift and go to state 180
    factor                         shift and go to state 85
    expression                     shift and go to state 87
    not                            shift and go to state 88
    term                           shift and go to state 91

state 143

    (47) iterative -> UNTIL LP instrucciones RP . LP condicion RP SEMICOLON

    LP              shift and go to state 181


state 144

    (49) case -> CASE ID funciones SEMICOLON .

    DEF             reduce using rule 49 (case -> CASE ID funciones SEMICOLON .)
    CALL            reduce using rule 49 (case -> CASE ID funciones SEMICOLON .)
    ALTER           reduce using rule 49 (case -> CASE ID funciones SEMICOLON .)
    NOT             reduce using rule 49 (case -> CASE ID funciones SEMICOLON .)
    PRINT           reduce using rule 49 (case -> CASE ID funciones SEMICOLON .)
    WHILE           reduce using rule 49 (case -> CASE ID funciones SEMICOLON .)
    UNTIL           reduce using rule 49 (case -> CASE ID funciones SEMICOLON .)
    CASE            reduce using rule 49 (case -> CASE ID funciones SEMICOLON .)
    MOVER           reduce using rule 49 (case -> CASE ID funciones SEMICOLON .)
    ALEATORIO       reduce using rule 49 (case -> CASE ID funciones SEMICOLON .)
    ISTRUE          reduce using rule 49 (case -> CASE ID funciones SEMICOLON .)
    REPEAT          reduce using rule 49 (case -> CASE ID funciones SEMICOLON .)
    ID              reduce using rule 49 (case -> CASE ID funciones SEMICOLON .)
    LED             reduce using rule 49 (case -> CASE ID funciones SEMICOLON .)
    ZIGZAG          reduce using rule 49 (case -> CASE ID funciones SEMICOLON .)
    ZAGZIG          reduce using rule 49 (case -> CASE ID funciones SEMICOLON .)
    COMMENT         reduce using rule 49 (case -> CASE ID funciones SEMICOLON .)
    RP              reduce using rule 49 (case -> CASE ID funciones SEMICOLON .)
    BREAK           reduce using rule 49 (case -> CASE ID funciones SEMICOLON .)


state 145

    (64) funcion -> when then else .

    SEMICOLON       reduce using rule 64 (funcion -> when then else .)
    WHEN            reduce using rule 64 (funcion -> when then else .)


state 146

    (68) else -> ELSE . LP instrucciones RP

    LP              shift and go to state 182


state 147

    (67) then -> THEN LP . instrucciones RP
    (15) instrucciones -> . instruccion instrucciones
    (16) instrucciones -> . instruccion
    (17) instruccion -> . def
    (18) instruccion -> . call
    (19) instruccion -> . alter
    (20) instruccion -> . not
    (21) instruccion -> . print
    (22) instruccion -> . iterative
    (23) instruccion -> . case
    (24) instruccion -> . mover
    (25) instruccion -> . aleatorio
    (26) instruccion -> . istrue
    (27) instruccion -> . repeat
    (28) instruccion -> . change
    (29) instruccion -> . led
    (30) instruccion -> . zigzag
    (31) instruccion -> . zagzig
    (32) instruccion -> . comment
    (34) def -> . DEF LP ID COMMA TYPE COMMA value RP SEMICOLON
    (35) def -> . DEF LP ID COMMA TYPE RP SEMICOLON
    (36) call -> . CALL LP ID RP SEMICOLON
    (37) alter -> . ALTER LP ID COMMA factor RP SEMICOLON
    (38) alter -> . ALTER LP ID COMMA ID RP SEMICOLON
    (39) not -> . NOT LP ID RP SEMICOLON
    (41) print -> . PRINT LP prints RP SEMICOLON
    (46) iterative -> . WHILE LP condicion RP LP instrucciones RP SEMICOLON
    (47) iterative -> . UNTIL LP instrucciones RP LP condicion RP SEMICOLON
    (48) case -> . CASE funciones SEMICOLON
    (49) case -> . CASE ID funciones SEMICOLON
    (50) mover -> . MOVER LP DIR RP SEMICOLON
    (51) aleatorio -> . ALEATORIO LP RP SEMICOLON
    (40) istrue -> . ISTRUE LP ID RP SEMICOLON
    (55) repeat -> . REPEAT LP instrucciones break RP SEMICOLON
    (79) change -> . ID LP value RP SEMICOLON
    (54) led -> . LED LP RP SEMICOLON
    (52) zigzag -> . ZIGZAG LP RP SEMICOLON
    (53) zagzig -> . ZAGZIG LP RP SEMICOLON
    (89) comment -> . COMMENT

    DEF             shift and go to state 39
    CALL            shift and go to state 41
    ALTER           shift and go to state 42
    NOT             shift and go to state 43
    PRINT           shift and go to state 44
    WHILE           shift and go to state 45
    UNTIL           shift and go to state 46
    CASE            shift and go to state 47
    MOVER           shift and go to state 48
    ALEATORIO       shift and go to state 49
    ISTRUE          shift and go to state 50
    REPEAT          shift and go to state 51
    ID              shift and go to state 40
    LED             shift and go to state 52
    ZIGZAG          shift and go to state 53
    ZAGZIG          shift and go to state 54
    COMMENT         shift and go to state 3

    instrucciones                  shift and go to state 183
    instruccion                    shift and go to state 22
    def                            shift and go to state 23
    call                           shift and go to state 24
    alter                          shift and go to state 25
    not                            shift and go to state 26
    print                          shift and go to state 27
    iterative                      shift and go to state 28
    case                           shift and go to state 29
    mover                          shift and go to state 30
    aleatorio                      shift and go to state 31
    istrue                         shift and go to state 32
    repeat                         shift and go to state 33
    change                         shift and go to state 34
    led                            shift and go to state 35
    zigzag                         shift and go to state 36
    zagzig                         shift and go to state 37
    comment                        shift and go to state 38

state 148

    (65) when -> WHEN LP condicion . RP

    RP              shift and go to state 184


state 149

    (88) factor -> LP expression . RP
    (80) expression -> expression . PLUS term
    (81) expression -> expression . MINUS term
    (77) oper -> expression .
    (58) value -> expression .

    RP              shift and go to state 160
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127
    GT              reduce using rule 77 (oper -> expression .)
    LT              reduce using rule 77 (oper -> expression .)
    GTE             reduce using rule 77 (oper -> expression .)
    LTE             reduce using rule 77 (oper -> expression .)
    EQUAL           reduce using rule 58 (value -> expression .)
    DIF             reduce using rule 58 (value -> expression .)


state 150

    (50) mover -> MOVER LP DIR RP . SEMICOLON

    SEMICOLON       shift and go to state 185


state 151

    (51) aleatorio -> ALEATORIO LP RP SEMICOLON .

    DEF             reduce using rule 51 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    CALL            reduce using rule 51 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    ALTER           reduce using rule 51 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    NOT             reduce using rule 51 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    PRINT           reduce using rule 51 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    WHILE           reduce using rule 51 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    UNTIL           reduce using rule 51 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    CASE            reduce using rule 51 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    MOVER           reduce using rule 51 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    ALEATORIO       reduce using rule 51 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    ISTRUE          reduce using rule 51 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    REPEAT          reduce using rule 51 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    ID              reduce using rule 51 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    LED             reduce using rule 51 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    ZIGZAG          reduce using rule 51 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    ZAGZIG          reduce using rule 51 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    COMMENT         reduce using rule 51 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    RP              reduce using rule 51 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    BREAK           reduce using rule 51 (aleatorio -> ALEATORIO LP RP SEMICOLON .)


state 152

    (40) istrue -> ISTRUE LP ID RP . SEMICOLON

    SEMICOLON       shift and go to state 186


state 153

    (55) repeat -> REPEAT LP instrucciones break . RP SEMICOLON

    RP              shift and go to state 187


state 154

    (33) break -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 188


state 155

    (54) led -> LED LP RP SEMICOLON .

    DEF             reduce using rule 54 (led -> LED LP RP SEMICOLON .)
    CALL            reduce using rule 54 (led -> LED LP RP SEMICOLON .)
    ALTER           reduce using rule 54 (led -> LED LP RP SEMICOLON .)
    NOT             reduce using rule 54 (led -> LED LP RP SEMICOLON .)
    PRINT           reduce using rule 54 (led -> LED LP RP SEMICOLON .)
    WHILE           reduce using rule 54 (led -> LED LP RP SEMICOLON .)
    UNTIL           reduce using rule 54 (led -> LED LP RP SEMICOLON .)
    CASE            reduce using rule 54 (led -> LED LP RP SEMICOLON .)
    MOVER           reduce using rule 54 (led -> LED LP RP SEMICOLON .)
    ALEATORIO       reduce using rule 54 (led -> LED LP RP SEMICOLON .)
    ISTRUE          reduce using rule 54 (led -> LED LP RP SEMICOLON .)
    REPEAT          reduce using rule 54 (led -> LED LP RP SEMICOLON .)
    ID              reduce using rule 54 (led -> LED LP RP SEMICOLON .)
    LED             reduce using rule 54 (led -> LED LP RP SEMICOLON .)
    ZIGZAG          reduce using rule 54 (led -> LED LP RP SEMICOLON .)
    ZAGZIG          reduce using rule 54 (led -> LED LP RP SEMICOLON .)
    COMMENT         reduce using rule 54 (led -> LED LP RP SEMICOLON .)
    RP              reduce using rule 54 (led -> LED LP RP SEMICOLON .)
    BREAK           reduce using rule 54 (led -> LED LP RP SEMICOLON .)


state 156

    (52) zigzag -> ZIGZAG LP RP SEMICOLON .

    DEF             reduce using rule 52 (zigzag -> ZIGZAG LP RP SEMICOLON .)
    CALL            reduce using rule 52 (zigzag -> ZIGZAG LP RP SEMICOLON .)
    ALTER           reduce using rule 52 (zigzag -> ZIGZAG LP RP SEMICOLON .)
    NOT             reduce using rule 52 (zigzag -> ZIGZAG LP RP SEMICOLON .)
    PRINT           reduce using rule 52 (zigzag -> ZIGZAG LP RP SEMICOLON .)
    WHILE           reduce using rule 52 (zigzag -> ZIGZAG LP RP SEMICOLON .)
    UNTIL           reduce using rule 52 (zigzag -> ZIGZAG LP RP SEMICOLON .)
    CASE            reduce using rule 52 (zigzag -> ZIGZAG LP RP SEMICOLON .)
    MOVER           reduce using rule 52 (zigzag -> ZIGZAG LP RP SEMICOLON .)
    ALEATORIO       reduce using rule 52 (zigzag -> ZIGZAG LP RP SEMICOLON .)
    ISTRUE          reduce using rule 52 (zigzag -> ZIGZAG LP RP SEMICOLON .)
    REPEAT          reduce using rule 52 (zigzag -> ZIGZAG LP RP SEMICOLON .)
    ID              reduce using rule 52 (zigzag -> ZIGZAG LP RP SEMICOLON .)
    LED             reduce using rule 52 (zigzag -> ZIGZAG LP RP SEMICOLON .)
    ZIGZAG          reduce using rule 52 (zigzag -> ZIGZAG LP RP SEMICOLON .)
    ZAGZIG          reduce using rule 52 (zigzag -> ZIGZAG LP RP SEMICOLON .)
    COMMENT         reduce using rule 52 (zigzag -> ZIGZAG LP RP SEMICOLON .)
    RP              reduce using rule 52 (zigzag -> ZIGZAG LP RP SEMICOLON .)
    BREAK           reduce using rule 52 (zigzag -> ZIGZAG LP RP SEMICOLON .)


state 157

    (53) zagzig -> ZAGZIG LP RP SEMICOLON .

    DEF             reduce using rule 53 (zagzig -> ZAGZIG LP RP SEMICOLON .)
    CALL            reduce using rule 53 (zagzig -> ZAGZIG LP RP SEMICOLON .)
    ALTER           reduce using rule 53 (zagzig -> ZAGZIG LP RP SEMICOLON .)
    NOT             reduce using rule 53 (zagzig -> ZAGZIG LP RP SEMICOLON .)
    PRINT           reduce using rule 53 (zagzig -> ZAGZIG LP RP SEMICOLON .)
    WHILE           reduce using rule 53 (zagzig -> ZAGZIG LP RP SEMICOLON .)
    UNTIL           reduce using rule 53 (zagzig -> ZAGZIG LP RP SEMICOLON .)
    CASE            reduce using rule 53 (zagzig -> ZAGZIG LP RP SEMICOLON .)
    MOVER           reduce using rule 53 (zagzig -> ZAGZIG LP RP SEMICOLON .)
    ALEATORIO       reduce using rule 53 (zagzig -> ZAGZIG LP RP SEMICOLON .)
    ISTRUE          reduce using rule 53 (zagzig -> ZAGZIG LP RP SEMICOLON .)
    REPEAT          reduce using rule 53 (zagzig -> ZAGZIG LP RP SEMICOLON .)
    ID              reduce using rule 53 (zagzig -> ZAGZIG LP RP SEMICOLON .)
    LED             reduce using rule 53 (zagzig -> ZAGZIG LP RP SEMICOLON .)
    ZIGZAG          reduce using rule 53 (zagzig -> ZAGZIG LP RP SEMICOLON .)
    ZAGZIG          reduce using rule 53 (zagzig -> ZAGZIG LP RP SEMICOLON .)
    COMMENT         reduce using rule 53 (zagzig -> ZAGZIG LP RP SEMICOLON .)
    RP              reduce using rule 53 (zagzig -> ZAGZIG LP RP SEMICOLON .)
    BREAK           reduce using rule 53 (zagzig -> ZAGZIG LP RP SEMICOLON .)


state 158

    (12) proc -> PROC ID LP instrucciones RP SEMICOLON .

    PROC            reduce using rule 12 (proc -> PROC ID LP instrucciones RP SEMICOLON .)
    MAIN            reduce using rule 12 (proc -> PROC ID LP instrucciones RP SEMICOLON .)
    COMMENT         reduce using rule 12 (proc -> PROC ID LP instrucciones RP SEMICOLON .)
    $end            reduce using rule 12 (proc -> PROC ID LP instrucciones RP SEMICOLON .)


state 159

    (34) def -> DEF LP ID COMMA TYPE . COMMA value RP SEMICOLON
    (35) def -> DEF LP ID COMMA TYPE . RP SEMICOLON

    COMMA           shift and go to state 189
    RP              shift and go to state 190


state 160

    (88) factor -> LP expression RP .

    RP              reduce using rule 88 (factor -> LP expression RP .)
    STAR            reduce using rule 88 (factor -> LP expression RP .)
    SLASH           reduce using rule 88 (factor -> LP expression RP .)
    PLUS            reduce using rule 88 (factor -> LP expression RP .)
    MINUS           reduce using rule 88 (factor -> LP expression RP .)
    GT              reduce using rule 88 (factor -> LP expression RP .)
    LT              reduce using rule 88 (factor -> LP expression RP .)
    GTE             reduce using rule 88 (factor -> LP expression RP .)
    LTE             reduce using rule 88 (factor -> LP expression RP .)
    EQUAL           reduce using rule 88 (factor -> LP expression RP .)
    DIF             reduce using rule 88 (factor -> LP expression RP .)
    THEN            reduce using rule 88 (factor -> LP expression RP .)


state 161

    (79) change -> ID LP value RP SEMICOLON .

    DEF             reduce using rule 79 (change -> ID LP value RP SEMICOLON .)
    CALL            reduce using rule 79 (change -> ID LP value RP SEMICOLON .)
    ALTER           reduce using rule 79 (change -> ID LP value RP SEMICOLON .)
    NOT             reduce using rule 79 (change -> ID LP value RP SEMICOLON .)
    PRINT           reduce using rule 79 (change -> ID LP value RP SEMICOLON .)
    WHILE           reduce using rule 79 (change -> ID LP value RP SEMICOLON .)
    UNTIL           reduce using rule 79 (change -> ID LP value RP SEMICOLON .)
    CASE            reduce using rule 79 (change -> ID LP value RP SEMICOLON .)
    MOVER           reduce using rule 79 (change -> ID LP value RP SEMICOLON .)
    ALEATORIO       reduce using rule 79 (change -> ID LP value RP SEMICOLON .)
    ISTRUE          reduce using rule 79 (change -> ID LP value RP SEMICOLON .)
    REPEAT          reduce using rule 79 (change -> ID LP value RP SEMICOLON .)
    ID              reduce using rule 79 (change -> ID LP value RP SEMICOLON .)
    LED             reduce using rule 79 (change -> ID LP value RP SEMICOLON .)
    ZIGZAG          reduce using rule 79 (change -> ID LP value RP SEMICOLON .)
    ZAGZIG          reduce using rule 79 (change -> ID LP value RP SEMICOLON .)
    COMMENT         reduce using rule 79 (change -> ID LP value RP SEMICOLON .)
    RP              reduce using rule 79 (change -> ID LP value RP SEMICOLON .)
    BREAK           reduce using rule 79 (change -> ID LP value RP SEMICOLON .)


state 162

    (80) expression -> expression PLUS term .
    (83) term -> term . STAR factor
    (84) term -> term . SLASH factor

    PLUS            reduce using rule 80 (expression -> expression PLUS term .)
    MINUS           reduce using rule 80 (expression -> expression PLUS term .)
    RP              reduce using rule 80 (expression -> expression PLUS term .)
    GT              reduce using rule 80 (expression -> expression PLUS term .)
    LT              reduce using rule 80 (expression -> expression PLUS term .)
    GTE             reduce using rule 80 (expression -> expression PLUS term .)
    LTE             reduce using rule 80 (expression -> expression PLUS term .)
    EQUAL           reduce using rule 80 (expression -> expression PLUS term .)
    DIF             reduce using rule 80 (expression -> expression PLUS term .)
    THEN            reduce using rule 80 (expression -> expression PLUS term .)
    STAR            shift and go to state 129
    SLASH           shift and go to state 130

  ! STAR            [ reduce using rule 80 (expression -> expression PLUS term .) ]
  ! SLASH           [ reduce using rule 80 (expression -> expression PLUS term .) ]


state 163

    (81) expression -> expression MINUS term .
    (83) term -> term . STAR factor
    (84) term -> term . SLASH factor

    PLUS            reduce using rule 81 (expression -> expression MINUS term .)
    MINUS           reduce using rule 81 (expression -> expression MINUS term .)
    RP              reduce using rule 81 (expression -> expression MINUS term .)
    GT              reduce using rule 81 (expression -> expression MINUS term .)
    LT              reduce using rule 81 (expression -> expression MINUS term .)
    GTE             reduce using rule 81 (expression -> expression MINUS term .)
    LTE             reduce using rule 81 (expression -> expression MINUS term .)
    EQUAL           reduce using rule 81 (expression -> expression MINUS term .)
    DIF             reduce using rule 81 (expression -> expression MINUS term .)
    THEN            reduce using rule 81 (expression -> expression MINUS term .)
    STAR            shift and go to state 129
    SLASH           shift and go to state 130

  ! STAR            [ reduce using rule 81 (expression -> expression MINUS term .) ]
  ! SLASH           [ reduce using rule 81 (expression -> expression MINUS term .) ]


state 164

    (83) term -> term STAR factor .

    STAR            reduce using rule 83 (term -> term STAR factor .)
    SLASH           reduce using rule 83 (term -> term STAR factor .)
    PLUS            reduce using rule 83 (term -> term STAR factor .)
    MINUS           reduce using rule 83 (term -> term STAR factor .)
    RP              reduce using rule 83 (term -> term STAR factor .)
    GT              reduce using rule 83 (term -> term STAR factor .)
    LT              reduce using rule 83 (term -> term STAR factor .)
    GTE             reduce using rule 83 (term -> term STAR factor .)
    LTE             reduce using rule 83 (term -> term STAR factor .)
    EQUAL           reduce using rule 83 (term -> term STAR factor .)
    DIF             reduce using rule 83 (term -> term STAR factor .)
    THEN            reduce using rule 83 (term -> term STAR factor .)


state 165

    (84) term -> term SLASH factor .

    STAR            reduce using rule 84 (term -> term SLASH factor .)
    SLASH           reduce using rule 84 (term -> term SLASH factor .)
    PLUS            reduce using rule 84 (term -> term SLASH factor .)
    MINUS           reduce using rule 84 (term -> term SLASH factor .)
    RP              reduce using rule 84 (term -> term SLASH factor .)
    GT              reduce using rule 84 (term -> term SLASH factor .)
    LT              reduce using rule 84 (term -> term SLASH factor .)
    GTE             reduce using rule 84 (term -> term SLASH factor .)
    LTE             reduce using rule 84 (term -> term SLASH factor .)
    EQUAL           reduce using rule 84 (term -> term SLASH factor .)
    DIF             reduce using rule 84 (term -> term SLASH factor .)
    THEN            reduce using rule 84 (term -> term SLASH factor .)


state 166

    (36) call -> CALL LP ID RP SEMICOLON .

    DEF             reduce using rule 36 (call -> CALL LP ID RP SEMICOLON .)
    CALL            reduce using rule 36 (call -> CALL LP ID RP SEMICOLON .)
    ALTER           reduce using rule 36 (call -> CALL LP ID RP SEMICOLON .)
    NOT             reduce using rule 36 (call -> CALL LP ID RP SEMICOLON .)
    PRINT           reduce using rule 36 (call -> CALL LP ID RP SEMICOLON .)
    WHILE           reduce using rule 36 (call -> CALL LP ID RP SEMICOLON .)
    UNTIL           reduce using rule 36 (call -> CALL LP ID RP SEMICOLON .)
    CASE            reduce using rule 36 (call -> CALL LP ID RP SEMICOLON .)
    MOVER           reduce using rule 36 (call -> CALL LP ID RP SEMICOLON .)
    ALEATORIO       reduce using rule 36 (call -> CALL LP ID RP SEMICOLON .)
    ISTRUE          reduce using rule 36 (call -> CALL LP ID RP SEMICOLON .)
    REPEAT          reduce using rule 36 (call -> CALL LP ID RP SEMICOLON .)
    ID              reduce using rule 36 (call -> CALL LP ID RP SEMICOLON .)
    LED             reduce using rule 36 (call -> CALL LP ID RP SEMICOLON .)
    ZIGZAG          reduce using rule 36 (call -> CALL LP ID RP SEMICOLON .)
    ZAGZIG          reduce using rule 36 (call -> CALL LP ID RP SEMICOLON .)
    COMMENT         reduce using rule 36 (call -> CALL LP ID RP SEMICOLON .)
    RP              reduce using rule 36 (call -> CALL LP ID RP SEMICOLON .)
    BREAK           reduce using rule 36 (call -> CALL LP ID RP SEMICOLON .)


state 167

    (38) alter -> ALTER LP ID COMMA ID . RP SEMICOLON

    RP              shift and go to state 191


state 168

    (37) alter -> ALTER LP ID COMMA factor . RP SEMICOLON

    RP              shift and go to state 192


state 169

    (39) not -> NOT LP ID RP SEMICOLON .

    DEF             reduce using rule 39 (not -> NOT LP ID RP SEMICOLON .)
    CALL            reduce using rule 39 (not -> NOT LP ID RP SEMICOLON .)
    ALTER           reduce using rule 39 (not -> NOT LP ID RP SEMICOLON .)
    NOT             reduce using rule 39 (not -> NOT LP ID RP SEMICOLON .)
    PRINT           reduce using rule 39 (not -> NOT LP ID RP SEMICOLON .)
    WHILE           reduce using rule 39 (not -> NOT LP ID RP SEMICOLON .)
    UNTIL           reduce using rule 39 (not -> NOT LP ID RP SEMICOLON .)
    CASE            reduce using rule 39 (not -> NOT LP ID RP SEMICOLON .)
    MOVER           reduce using rule 39 (not -> NOT LP ID RP SEMICOLON .)
    ALEATORIO       reduce using rule 39 (not -> NOT LP ID RP SEMICOLON .)
    ISTRUE          reduce using rule 39 (not -> NOT LP ID RP SEMICOLON .)
    REPEAT          reduce using rule 39 (not -> NOT LP ID RP SEMICOLON .)
    ID              reduce using rule 39 (not -> NOT LP ID RP SEMICOLON .)
    LED             reduce using rule 39 (not -> NOT LP ID RP SEMICOLON .)
    ZIGZAG          reduce using rule 39 (not -> NOT LP ID RP SEMICOLON .)
    ZAGZIG          reduce using rule 39 (not -> NOT LP ID RP SEMICOLON .)
    COMMENT         reduce using rule 39 (not -> NOT LP ID RP SEMICOLON .)
    RP              reduce using rule 39 (not -> NOT LP ID RP SEMICOLON .)
    BREAK           reduce using rule 39 (not -> NOT LP ID RP SEMICOLON .)
    EQUAL           reduce using rule 39 (not -> NOT LP ID RP SEMICOLON .)
    DIF             reduce using rule 39 (not -> NOT LP ID RP SEMICOLON .)
    THEN            reduce using rule 39 (not -> NOT LP ID RP SEMICOLON .)


state 170

    (41) print -> PRINT LP prints RP SEMICOLON .

    DEF             reduce using rule 41 (print -> PRINT LP prints RP SEMICOLON .)
    CALL            reduce using rule 41 (print -> PRINT LP prints RP SEMICOLON .)
    ALTER           reduce using rule 41 (print -> PRINT LP prints RP SEMICOLON .)
    NOT             reduce using rule 41 (print -> PRINT LP prints RP SEMICOLON .)
    PRINT           reduce using rule 41 (print -> PRINT LP prints RP SEMICOLON .)
    WHILE           reduce using rule 41 (print -> PRINT LP prints RP SEMICOLON .)
    UNTIL           reduce using rule 41 (print -> PRINT LP prints RP SEMICOLON .)
    CASE            reduce using rule 41 (print -> PRINT LP prints RP SEMICOLON .)
    MOVER           reduce using rule 41 (print -> PRINT LP prints RP SEMICOLON .)
    ALEATORIO       reduce using rule 41 (print -> PRINT LP prints RP SEMICOLON .)
    ISTRUE          reduce using rule 41 (print -> PRINT LP prints RP SEMICOLON .)
    REPEAT          reduce using rule 41 (print -> PRINT LP prints RP SEMICOLON .)
    ID              reduce using rule 41 (print -> PRINT LP prints RP SEMICOLON .)
    LED             reduce using rule 41 (print -> PRINT LP prints RP SEMICOLON .)
    ZIGZAG          reduce using rule 41 (print -> PRINT LP prints RP SEMICOLON .)
    ZAGZIG          reduce using rule 41 (print -> PRINT LP prints RP SEMICOLON .)
    COMMENT         reduce using rule 41 (print -> PRINT LP prints RP SEMICOLON .)
    RP              reduce using rule 41 (print -> PRINT LP prints RP SEMICOLON .)
    BREAK           reduce using rule 41 (print -> PRINT LP prints RP SEMICOLON .)


state 171

    (46) iterative -> WHILE LP condicion RP LP . instrucciones RP SEMICOLON
    (15) instrucciones -> . instruccion instrucciones
    (16) instrucciones -> . instruccion
    (17) instruccion -> . def
    (18) instruccion -> . call
    (19) instruccion -> . alter
    (20) instruccion -> . not
    (21) instruccion -> . print
    (22) instruccion -> . iterative
    (23) instruccion -> . case
    (24) instruccion -> . mover
    (25) instruccion -> . aleatorio
    (26) instruccion -> . istrue
    (27) instruccion -> . repeat
    (28) instruccion -> . change
    (29) instruccion -> . led
    (30) instruccion -> . zigzag
    (31) instruccion -> . zagzig
    (32) instruccion -> . comment
    (34) def -> . DEF LP ID COMMA TYPE COMMA value RP SEMICOLON
    (35) def -> . DEF LP ID COMMA TYPE RP SEMICOLON
    (36) call -> . CALL LP ID RP SEMICOLON
    (37) alter -> . ALTER LP ID COMMA factor RP SEMICOLON
    (38) alter -> . ALTER LP ID COMMA ID RP SEMICOLON
    (39) not -> . NOT LP ID RP SEMICOLON
    (41) print -> . PRINT LP prints RP SEMICOLON
    (46) iterative -> . WHILE LP condicion RP LP instrucciones RP SEMICOLON
    (47) iterative -> . UNTIL LP instrucciones RP LP condicion RP SEMICOLON
    (48) case -> . CASE funciones SEMICOLON
    (49) case -> . CASE ID funciones SEMICOLON
    (50) mover -> . MOVER LP DIR RP SEMICOLON
    (51) aleatorio -> . ALEATORIO LP RP SEMICOLON
    (40) istrue -> . ISTRUE LP ID RP SEMICOLON
    (55) repeat -> . REPEAT LP instrucciones break RP SEMICOLON
    (79) change -> . ID LP value RP SEMICOLON
    (54) led -> . LED LP RP SEMICOLON
    (52) zigzag -> . ZIGZAG LP RP SEMICOLON
    (53) zagzig -> . ZAGZIG LP RP SEMICOLON
    (89) comment -> . COMMENT

    DEF             shift and go to state 39
    CALL            shift and go to state 41
    ALTER           shift and go to state 42
    NOT             shift and go to state 43
    PRINT           shift and go to state 44
    WHILE           shift and go to state 45
    UNTIL           shift and go to state 46
    CASE            shift and go to state 47
    MOVER           shift and go to state 48
    ALEATORIO       shift and go to state 49
    ISTRUE          shift and go to state 50
    REPEAT          shift and go to state 51
    ID              shift and go to state 40
    LED             shift and go to state 52
    ZIGZAG          shift and go to state 53
    ZAGZIG          shift and go to state 54
    COMMENT         shift and go to state 3

    instrucciones                  shift and go to state 193
    instruccion                    shift and go to state 22
    def                            shift and go to state 23
    call                           shift and go to state 24
    alter                          shift and go to state 25
    not                            shift and go to state 26
    print                          shift and go to state 27
    iterative                      shift and go to state 28
    case                           shift and go to state 29
    mover                          shift and go to state 30
    aleatorio                      shift and go to state 31
    istrue                         shift and go to state 32
    repeat                         shift and go to state 33
    change                         shift and go to state 34
    led                            shift and go to state 35
    zigzag                         shift and go to state 36
    zagzig                         shift and go to state 37
    comment                        shift and go to state 38

state 172

    (69) condicion -> oper GT oper .

    RP              reduce using rule 69 (condicion -> oper GT oper .)


state 173

    (76) oper -> factor .
    (85) term -> factor .

  ! reduce/reduce conflict for RP resolved using rule 76 (oper -> factor .)
    RP              reduce using rule 76 (oper -> factor .)
    STAR            reduce using rule 85 (term -> factor .)
    SLASH           reduce using rule 85 (term -> factor .)
    PLUS            reduce using rule 85 (term -> factor .)
    MINUS           reduce using rule 85 (term -> factor .)

  ! RP              [ reduce using rule 85 (term -> factor .) ]


state 174

    (77) oper -> expression .
    (80) expression -> expression . PLUS term
    (81) expression -> expression . MINUS term

    RP              reduce using rule 77 (oper -> expression .)
    PLUS            shift and go to state 126
    MINUS           shift and go to state 127


state 175

    (78) oper -> ID .

    RP              reduce using rule 78 (oper -> ID .)


state 176

    (70) condicion -> oper LT oper .

    RP              reduce using rule 70 (condicion -> oper LT oper .)


state 177

    (73) condicion -> oper GTE oper .

    RP              reduce using rule 73 (condicion -> oper GTE oper .)


state 178

    (74) condicion -> oper LTE oper .

    RP              reduce using rule 74 (condicion -> oper LTE oper .)


state 179

    (71) condicion -> value EQUAL value .

    RP              reduce using rule 71 (condicion -> value EQUAL value .)


state 180

    (72) condicion -> value DIF value .

    RP              reduce using rule 72 (condicion -> value DIF value .)


state 181

    (47) iterative -> UNTIL LP instrucciones RP LP . condicion RP SEMICOLON
    (69) condicion -> . oper GT oper
    (70) condicion -> . oper LT oper
    (71) condicion -> . value EQUAL value
    (72) condicion -> . value DIF value
    (73) condicion -> . oper GTE oper
    (74) condicion -> . oper LTE oper
    (75) condicion -> . istrue
    (76) oper -> . factor
    (77) oper -> . expression
    (78) oper -> . ID
    (56) value -> . factor
    (57) value -> . BOOL
    (58) value -> . expression
    (59) value -> . ID
    (60) value -> . not
    (40) istrue -> . ISTRUE LP ID RP SEMICOLON
    (86) factor -> . INTEGER
    (87) factor -> . MINUS expression
    (88) factor -> . LP expression RP
    (80) expression -> . expression PLUS term
    (81) expression -> . expression MINUS term
    (82) expression -> . term
    (39) not -> . NOT LP ID RP SEMICOLON
    (83) term -> . term STAR factor
    (84) term -> . term SLASH factor
    (85) term -> . factor

    ID              shift and go to state 105
    BOOL            shift and go to state 86
    ISTRUE          shift and go to state 50
    INTEGER         shift and go to state 89
    MINUS           shift and go to state 90
    LP              shift and go to state 83
    NOT             shift and go to state 43

    condicion                      shift and go to state 194
    oper                           shift and go to state 100
    value                          shift and go to state 101
    istrue                         shift and go to state 102
    factor                         shift and go to state 103
    expression                     shift and go to state 104
    not                            shift and go to state 88
    term                           shift and go to state 91

state 182

    (68) else -> ELSE LP . instrucciones RP
    (15) instrucciones -> . instruccion instrucciones
    (16) instrucciones -> . instruccion
    (17) instruccion -> . def
    (18) instruccion -> . call
    (19) instruccion -> . alter
    (20) instruccion -> . not
    (21) instruccion -> . print
    (22) instruccion -> . iterative
    (23) instruccion -> . case
    (24) instruccion -> . mover
    (25) instruccion -> . aleatorio
    (26) instruccion -> . istrue
    (27) instruccion -> . repeat
    (28) instruccion -> . change
    (29) instruccion -> . led
    (30) instruccion -> . zigzag
    (31) instruccion -> . zagzig
    (32) instruccion -> . comment
    (34) def -> . DEF LP ID COMMA TYPE COMMA value RP SEMICOLON
    (35) def -> . DEF LP ID COMMA TYPE RP SEMICOLON
    (36) call -> . CALL LP ID RP SEMICOLON
    (37) alter -> . ALTER LP ID COMMA factor RP SEMICOLON
    (38) alter -> . ALTER LP ID COMMA ID RP SEMICOLON
    (39) not -> . NOT LP ID RP SEMICOLON
    (41) print -> . PRINT LP prints RP SEMICOLON
    (46) iterative -> . WHILE LP condicion RP LP instrucciones RP SEMICOLON
    (47) iterative -> . UNTIL LP instrucciones RP LP condicion RP SEMICOLON
    (48) case -> . CASE funciones SEMICOLON
    (49) case -> . CASE ID funciones SEMICOLON
    (50) mover -> . MOVER LP DIR RP SEMICOLON
    (51) aleatorio -> . ALEATORIO LP RP SEMICOLON
    (40) istrue -> . ISTRUE LP ID RP SEMICOLON
    (55) repeat -> . REPEAT LP instrucciones break RP SEMICOLON
    (79) change -> . ID LP value RP SEMICOLON
    (54) led -> . LED LP RP SEMICOLON
    (52) zigzag -> . ZIGZAG LP RP SEMICOLON
    (53) zagzig -> . ZAGZIG LP RP SEMICOLON
    (89) comment -> . COMMENT

    DEF             shift and go to state 39
    CALL            shift and go to state 41
    ALTER           shift and go to state 42
    NOT             shift and go to state 43
    PRINT           shift and go to state 44
    WHILE           shift and go to state 45
    UNTIL           shift and go to state 46
    CASE            shift and go to state 47
    MOVER           shift and go to state 48
    ALEATORIO       shift and go to state 49
    ISTRUE          shift and go to state 50
    REPEAT          shift and go to state 51
    ID              shift and go to state 40
    LED             shift and go to state 52
    ZIGZAG          shift and go to state 53
    ZAGZIG          shift and go to state 54
    COMMENT         shift and go to state 3

    instrucciones                  shift and go to state 195
    instruccion                    shift and go to state 22
    def                            shift and go to state 23
    call                           shift and go to state 24
    alter                          shift and go to state 25
    not                            shift and go to state 26
    print                          shift and go to state 27
    iterative                      shift and go to state 28
    case                           shift and go to state 29
    mover                          shift and go to state 30
    aleatorio                      shift and go to state 31
    istrue                         shift and go to state 32
    repeat                         shift and go to state 33
    change                         shift and go to state 34
    led                            shift and go to state 35
    zigzag                         shift and go to state 36
    zagzig                         shift and go to state 37
    comment                        shift and go to state 38

state 183

    (67) then -> THEN LP instrucciones . RP

    RP              shift and go to state 196


state 184

    (65) when -> WHEN LP condicion RP .

    THEN            reduce using rule 65 (when -> WHEN LP condicion RP .)


state 185

    (50) mover -> MOVER LP DIR RP SEMICOLON .

    DEF             reduce using rule 50 (mover -> MOVER LP DIR RP SEMICOLON .)
    CALL            reduce using rule 50 (mover -> MOVER LP DIR RP SEMICOLON .)
    ALTER           reduce using rule 50 (mover -> MOVER LP DIR RP SEMICOLON .)
    NOT             reduce using rule 50 (mover -> MOVER LP DIR RP SEMICOLON .)
    PRINT           reduce using rule 50 (mover -> MOVER LP DIR RP SEMICOLON .)
    WHILE           reduce using rule 50 (mover -> MOVER LP DIR RP SEMICOLON .)
    UNTIL           reduce using rule 50 (mover -> MOVER LP DIR RP SEMICOLON .)
    CASE            reduce using rule 50 (mover -> MOVER LP DIR RP SEMICOLON .)
    MOVER           reduce using rule 50 (mover -> MOVER LP DIR RP SEMICOLON .)
    ALEATORIO       reduce using rule 50 (mover -> MOVER LP DIR RP SEMICOLON .)
    ISTRUE          reduce using rule 50 (mover -> MOVER LP DIR RP SEMICOLON .)
    REPEAT          reduce using rule 50 (mover -> MOVER LP DIR RP SEMICOLON .)
    ID              reduce using rule 50 (mover -> MOVER LP DIR RP SEMICOLON .)
    LED             reduce using rule 50 (mover -> MOVER LP DIR RP SEMICOLON .)
    ZIGZAG          reduce using rule 50 (mover -> MOVER LP DIR RP SEMICOLON .)
    ZAGZIG          reduce using rule 50 (mover -> MOVER LP DIR RP SEMICOLON .)
    COMMENT         reduce using rule 50 (mover -> MOVER LP DIR RP SEMICOLON .)
    RP              reduce using rule 50 (mover -> MOVER LP DIR RP SEMICOLON .)
    BREAK           reduce using rule 50 (mover -> MOVER LP DIR RP SEMICOLON .)


state 186

    (40) istrue -> ISTRUE LP ID RP SEMICOLON .

    DEF             reduce using rule 40 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    CALL            reduce using rule 40 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    ALTER           reduce using rule 40 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    NOT             reduce using rule 40 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    PRINT           reduce using rule 40 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    WHILE           reduce using rule 40 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    UNTIL           reduce using rule 40 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    CASE            reduce using rule 40 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    MOVER           reduce using rule 40 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    ALEATORIO       reduce using rule 40 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    ISTRUE          reduce using rule 40 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    REPEAT          reduce using rule 40 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    ID              reduce using rule 40 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    LED             reduce using rule 40 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    ZIGZAG          reduce using rule 40 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    ZAGZIG          reduce using rule 40 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    COMMENT         reduce using rule 40 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    RP              reduce using rule 40 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    BREAK           reduce using rule 40 (istrue -> ISTRUE LP ID RP SEMICOLON .)


state 187

    (55) repeat -> REPEAT LP instrucciones break RP . SEMICOLON

    SEMICOLON       shift and go to state 197


state 188

    (33) break -> BREAK SEMICOLON .

    RP              reduce using rule 33 (break -> BREAK SEMICOLON .)


state 189

    (34) def -> DEF LP ID COMMA TYPE COMMA . value RP SEMICOLON
    (56) value -> . factor
    (57) value -> . BOOL
    (58) value -> . expression
    (59) value -> . ID
    (60) value -> . not
    (86) factor -> . INTEGER
    (87) factor -> . MINUS expression
    (88) factor -> . LP expression RP
    (80) expression -> . expression PLUS term
    (81) expression -> . expression MINUS term
    (82) expression -> . term
    (39) not -> . NOT LP ID RP SEMICOLON
    (83) term -> . term STAR factor
    (84) term -> . term SLASH factor
    (85) term -> . factor

    BOOL            shift and go to state 86
    ID              shift and go to state 82
    INTEGER         shift and go to state 89
    MINUS           shift and go to state 90
    LP              shift and go to state 83
    NOT             shift and go to state 43

    value                          shift and go to state 198
    factor                         shift and go to state 85
    expression                     shift and go to state 87
    not                            shift and go to state 88
    term                           shift and go to state 91

state 190

    (35) def -> DEF LP ID COMMA TYPE RP . SEMICOLON

    SEMICOLON       shift and go to state 199


state 191

    (38) alter -> ALTER LP ID COMMA ID RP . SEMICOLON

    SEMICOLON       shift and go to state 200


state 192

    (37) alter -> ALTER LP ID COMMA factor RP . SEMICOLON

    SEMICOLON       shift and go to state 201


state 193

    (46) iterative -> WHILE LP condicion RP LP instrucciones . RP SEMICOLON

    RP              shift and go to state 202


state 194

    (47) iterative -> UNTIL LP instrucciones RP LP condicion . RP SEMICOLON

    RP              shift and go to state 203


state 195

    (68) else -> ELSE LP instrucciones . RP

    RP              shift and go to state 204


state 196

    (67) then -> THEN LP instrucciones RP .

    ELSE            reduce using rule 67 (then -> THEN LP instrucciones RP .)
    SEMICOLON       reduce using rule 67 (then -> THEN LP instrucciones RP .)
    WHEN            reduce using rule 67 (then -> THEN LP instrucciones RP .)


state 197

    (55) repeat -> REPEAT LP instrucciones break RP SEMICOLON .

    DEF             reduce using rule 55 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    CALL            reduce using rule 55 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    ALTER           reduce using rule 55 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    NOT             reduce using rule 55 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    PRINT           reduce using rule 55 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    WHILE           reduce using rule 55 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    UNTIL           reduce using rule 55 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    CASE            reduce using rule 55 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    MOVER           reduce using rule 55 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    ALEATORIO       reduce using rule 55 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    ISTRUE          reduce using rule 55 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    REPEAT          reduce using rule 55 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    ID              reduce using rule 55 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    LED             reduce using rule 55 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    ZIGZAG          reduce using rule 55 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    ZAGZIG          reduce using rule 55 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    COMMENT         reduce using rule 55 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    RP              reduce using rule 55 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    BREAK           reduce using rule 55 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)


state 198

    (34) def -> DEF LP ID COMMA TYPE COMMA value . RP SEMICOLON

    RP              shift and go to state 205


state 199

    (35) def -> DEF LP ID COMMA TYPE RP SEMICOLON .

    DEF             reduce using rule 35 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    CALL            reduce using rule 35 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    ALTER           reduce using rule 35 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    NOT             reduce using rule 35 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    PRINT           reduce using rule 35 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    WHILE           reduce using rule 35 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    UNTIL           reduce using rule 35 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    CASE            reduce using rule 35 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    MOVER           reduce using rule 35 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    ALEATORIO       reduce using rule 35 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    ISTRUE          reduce using rule 35 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    REPEAT          reduce using rule 35 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    ID              reduce using rule 35 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    LED             reduce using rule 35 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    ZIGZAG          reduce using rule 35 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    ZAGZIG          reduce using rule 35 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    COMMENT         reduce using rule 35 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    RP              reduce using rule 35 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    BREAK           reduce using rule 35 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)


state 200

    (38) alter -> ALTER LP ID COMMA ID RP SEMICOLON .

    DEF             reduce using rule 38 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    CALL            reduce using rule 38 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    ALTER           reduce using rule 38 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    NOT             reduce using rule 38 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    PRINT           reduce using rule 38 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    WHILE           reduce using rule 38 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    UNTIL           reduce using rule 38 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    CASE            reduce using rule 38 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    MOVER           reduce using rule 38 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    ALEATORIO       reduce using rule 38 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    ISTRUE          reduce using rule 38 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    REPEAT          reduce using rule 38 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    ID              reduce using rule 38 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    LED             reduce using rule 38 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    ZIGZAG          reduce using rule 38 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    ZAGZIG          reduce using rule 38 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    COMMENT         reduce using rule 38 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    RP              reduce using rule 38 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    BREAK           reduce using rule 38 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)


state 201

    (37) alter -> ALTER LP ID COMMA factor RP SEMICOLON .

    DEF             reduce using rule 37 (alter -> ALTER LP ID COMMA factor RP SEMICOLON .)
    CALL            reduce using rule 37 (alter -> ALTER LP ID COMMA factor RP SEMICOLON .)
    ALTER           reduce using rule 37 (alter -> ALTER LP ID COMMA factor RP SEMICOLON .)
    NOT             reduce using rule 37 (alter -> ALTER LP ID COMMA factor RP SEMICOLON .)
    PRINT           reduce using rule 37 (alter -> ALTER LP ID COMMA factor RP SEMICOLON .)
    WHILE           reduce using rule 37 (alter -> ALTER LP ID COMMA factor RP SEMICOLON .)
    UNTIL           reduce using rule 37 (alter -> ALTER LP ID COMMA factor RP SEMICOLON .)
    CASE            reduce using rule 37 (alter -> ALTER LP ID COMMA factor RP SEMICOLON .)
    MOVER           reduce using rule 37 (alter -> ALTER LP ID COMMA factor RP SEMICOLON .)
    ALEATORIO       reduce using rule 37 (alter -> ALTER LP ID COMMA factor RP SEMICOLON .)
    ISTRUE          reduce using rule 37 (alter -> ALTER LP ID COMMA factor RP SEMICOLON .)
    REPEAT          reduce using rule 37 (alter -> ALTER LP ID COMMA factor RP SEMICOLON .)
    ID              reduce using rule 37 (alter -> ALTER LP ID COMMA factor RP SEMICOLON .)
    LED             reduce using rule 37 (alter -> ALTER LP ID COMMA factor RP SEMICOLON .)
    ZIGZAG          reduce using rule 37 (alter -> ALTER LP ID COMMA factor RP SEMICOLON .)
    ZAGZIG          reduce using rule 37 (alter -> ALTER LP ID COMMA factor RP SEMICOLON .)
    COMMENT         reduce using rule 37 (alter -> ALTER LP ID COMMA factor RP SEMICOLON .)
    RP              reduce using rule 37 (alter -> ALTER LP ID COMMA factor RP SEMICOLON .)
    BREAK           reduce using rule 37 (alter -> ALTER LP ID COMMA factor RP SEMICOLON .)


state 202

    (46) iterative -> WHILE LP condicion RP LP instrucciones RP . SEMICOLON

    SEMICOLON       shift and go to state 206


state 203

    (47) iterative -> UNTIL LP instrucciones RP LP condicion RP . SEMICOLON

    SEMICOLON       shift and go to state 207


state 204

    (68) else -> ELSE LP instrucciones RP .

    SEMICOLON       reduce using rule 68 (else -> ELSE LP instrucciones RP .)
    WHEN            reduce using rule 68 (else -> ELSE LP instrucciones RP .)


state 205

    (34) def -> DEF LP ID COMMA TYPE COMMA value RP . SEMICOLON

    SEMICOLON       shift and go to state 208


state 206

    (46) iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .

    DEF             reduce using rule 46 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    CALL            reduce using rule 46 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    ALTER           reduce using rule 46 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    NOT             reduce using rule 46 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    PRINT           reduce using rule 46 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    WHILE           reduce using rule 46 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    UNTIL           reduce using rule 46 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    CASE            reduce using rule 46 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    MOVER           reduce using rule 46 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    ALEATORIO       reduce using rule 46 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    ISTRUE          reduce using rule 46 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    REPEAT          reduce using rule 46 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    ID              reduce using rule 46 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    LED             reduce using rule 46 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    ZIGZAG          reduce using rule 46 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    ZAGZIG          reduce using rule 46 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    COMMENT         reduce using rule 46 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    RP              reduce using rule 46 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    BREAK           reduce using rule 46 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)


state 207

    (47) iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .

    DEF             reduce using rule 47 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    CALL            reduce using rule 47 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    ALTER           reduce using rule 47 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    NOT             reduce using rule 47 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    PRINT           reduce using rule 47 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    WHILE           reduce using rule 47 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    UNTIL           reduce using rule 47 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    CASE            reduce using rule 47 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    MOVER           reduce using rule 47 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    ALEATORIO       reduce using rule 47 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    ISTRUE          reduce using rule 47 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    REPEAT          reduce using rule 47 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    ID              reduce using rule 47 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    LED             reduce using rule 47 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    ZIGZAG          reduce using rule 47 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    ZAGZIG          reduce using rule 47 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    COMMENT         reduce using rule 47 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    RP              reduce using rule 47 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    BREAK           reduce using rule 47 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)


state 208

    (34) def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .

    DEF             reduce using rule 34 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    CALL            reduce using rule 34 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    ALTER           reduce using rule 34 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    NOT             reduce using rule 34 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    PRINT           reduce using rule 34 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    WHILE           reduce using rule 34 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    UNTIL           reduce using rule 34 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    CASE            reduce using rule 34 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    MOVER           reduce using rule 34 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    ALEATORIO       reduce using rule 34 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    ISTRUE          reduce using rule 34 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    REPEAT          reduce using rule 34 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    ID              reduce using rule 34 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    LED             reduce using rule 34 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    ZIGZAG          reduce using rule 34 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    ZAGZIG          reduce using rule 34 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    COMMENT         reduce using rule 34 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    RP              reduce using rule 34 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    BREAK           reduce using rule 34 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMENT in state 12 resolved as shift
WARNING: shift/reduce conflict for STAR in state 91 resolved as shift
WARNING: shift/reduce conflict for SLASH in state 91 resolved as shift
WARNING: reduce/reduce conflict in state 85 resolved using rule (value -> factor)
WARNING: rejected rule (term -> factor) in state 85
WARNING: reduce/reduce conflict in state 103 resolved using rule (oper -> factor)
WARNING: rejected rule (term -> factor) in state 103
WARNING: reduce/reduce conflict in state 103 resolved using rule (value -> factor)
WARNING: rejected rule (term -> factor) in state 103
WARNING: reduce/reduce conflict in state 173 resolved using rule (oper -> factor)
WARNING: rejected rule (term -> factor) in state 173
