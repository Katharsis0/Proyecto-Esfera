Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CHANGE
    UMINUS
    VALUE

Grammar

Rule 0     S' -> init
Rule 1     init -> comment code
Rule 2     init -> comment
Rule 3     code -> procedimientos main
Rule 4     code -> main procedimientos
Rule 5     code -> procedimientos main procedimientos
Rule 6     code -> main
Rule 7     code -> comment code
Rule 8     code -> code comment
Rule 9     procedimientos -> procedimiento procedimientos
Rule 10    procedimientos -> procedimiento
Rule 11    procedimiento -> proc
Rule 12    proc -> PROC ID LP instrucciones RP SEMICOLON
Rule 13    main -> MAIN LP instrucciones RP SEMICOLON
Rule 14    main -> MAIN LP RP SEMICOLON
Rule 15    instrucciones -> instruccion instrucciones
Rule 16    instrucciones -> instruccion
Rule 17    instruccion -> def
Rule 18    instruccion -> call
Rule 19    instruccion -> alter
Rule 20    instruccion -> not
Rule 21    instruccion -> print
Rule 22    instruccion -> iterative
Rule 23    instruccion -> case
Rule 24    instruccion -> mover
Rule 25    instruccion -> aleatorio
Rule 26    instruccion -> istrue
Rule 27    instruccion -> repeat
Rule 28    instruccion -> change
Rule 29    instruccion -> comment
Rule 30    def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON
Rule 31    def -> DEF LP ID COMMA TYPE RP SEMICOLON
Rule 32    call -> CALL LP ID RP SEMICOLON
Rule 33    alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON
Rule 34    alter -> ALTER LP ID COMMA ID RP SEMICOLON
Rule 35    not -> NOT LP ID RP SEMICOLON
Rule 36    istrue -> ISTRUE LP ID RP SEMICOLON
Rule 37    print -> PRINT LP prints RP SEMICOLON
Rule 38    prints -> printexpr
Rule 39    prints -> prints printexpr
Rule 40    printexpr -> STRING
Rule 41    printexpr -> ID
Rule 42    iterative -> WHILE condicion LP instrucciones RP SEMICOLON
Rule 43    iterative -> UNTIL LP instrucciones RP condicion SEMICOLON
Rule 44    case -> CASE funciones SEMICOLON
Rule 45    case -> CASE ID funciones SEMICOLON
Rule 46    mover -> MOVER LP DIR RP SEMICOLON
Rule 47    aleatorio -> ALEATORIO LP RP SEMICOLON
Rule 48    repeat -> REPEAT LP instrucciones RP SEMICOLON
Rule 49    value -> INTEGER
Rule 50    value -> BOOL
Rule 51    funciones -> funcion
Rule 52    funciones -> funciones funcion
Rule 53    funcion -> when then
Rule 54    funcion -> when then else
Rule 55    when -> WHEN LP condicion RP
Rule 56    when -> WHEN value
Rule 57    then -> THEN LP instrucciones RP
Rule 58    else -> ELSE LP instrucciones RP
Rule 59    condicion -> oper GT oper
Rule 60    condicion -> oper LT oper
Rule 61    condicion -> oper EQUAL oper
Rule 62    condicion -> oper DIF oper
Rule 63    condicion -> oper GTE oper
Rule 64    condicion -> oper LTE oper
Rule 65    condicion -> istrue
Rule 66    oper -> value
Rule 67    oper -> expression
Rule 68    change -> ID LP value RP SEMICOLON
Rule 69    expression -> expression PLUS term
Rule 70    expression -> expression MINUS term
Rule 71    expression -> term
Rule 72    term -> term STAR factor
Rule 73    term -> term SLASH factor
Rule 74    term -> factor
Rule 75    factor -> INTEGER
Rule 76    factor -> LP expression RP
Rule 77    comment -> COMMENT

Terminals, with rules where they appear

ALEATORIO            : 47
ALTER                : 33 34
BOOL                 : 50
CALL                 : 32
CASE                 : 44 45
CHANGE               : 
COMMA                : 30 30 31 33 34
COMMENT              : 77
DEF                  : 30 31
DIF                  : 62
DIR                  : 46
ELSE                 : 58
EQUAL                : 61
GT                   : 59
GTE                  : 63
ID                   : 12 30 31 32 33 34 34 35 36 41 45 68
INTEGER              : 33 49 75
ISTRUE               : 36
LP                   : 12 13 14 30 31 32 33 34 35 36 37 42 43 46 47 48 55 57 58 68 76
LT                   : 60
LTE                  : 64
MAIN                 : 13 14
MINUS                : 70
MOVER                : 46
NOT                  : 35
PLUS                 : 69
PRINT                : 37
PROC                 : 12
REPEAT               : 48
RP                   : 12 13 14 30 31 32 33 34 35 36 37 42 43 46 47 48 55 57 58 68 76
SEMICOLON            : 12 13 14 30 31 32 33 34 35 36 37 42 43 44 45 46 47 48 68
SLASH                : 73
STAR                 : 72
STRING               : 40
THEN                 : 57
TYPE                 : 30 31
UMINUS               : 
UNTIL                : 43
VALUE                : 
WHEN                 : 55 56
WHILE                : 42
error                : 

Nonterminals, with rules where they appear

aleatorio            : 25
alter                : 19
call                 : 18
case                 : 23
change               : 28
code                 : 1 7 8
comment              : 1 2 7 8 29
condicion            : 42 43 55
def                  : 17
else                 : 54
expression           : 67 69 70 76
factor               : 72 73 74
funcion              : 51 52
funciones            : 44 45 52
init                 : 0
instruccion          : 15 16
instrucciones        : 12 13 15 42 43 48 57 58
istrue               : 26 65
iterative            : 22
main                 : 3 4 5 6
mover                : 24
not                  : 20
oper                 : 59 59 60 60 61 61 62 62 63 63 64 64
print                : 21
printexpr            : 38 39
prints               : 37 39
proc                 : 11
procedimiento        : 9 10
procedimientos       : 3 4 5 5 9
repeat               : 27
term                 : 69 70 71 72 73
then                 : 53 54
value                : 30 56 66 68
when                 : 53 54

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . comment code
    (2) init -> . comment
    (77) comment -> . COMMENT

    COMMENT         shift and go to state 3

    init                           shift and go to state 1
    comment                        shift and go to state 2

state 1

    (0) S' -> init .



state 2

    (1) init -> comment . code
    (2) init -> comment .
    (3) code -> . procedimientos main
    (4) code -> . main procedimientos
    (5) code -> . procedimientos main procedimientos
    (6) code -> . main
    (7) code -> . comment code
    (8) code -> . code comment
    (9) procedimientos -> . procedimiento procedimientos
    (10) procedimientos -> . procedimiento
    (13) main -> . MAIN LP instrucciones RP SEMICOLON
    (14) main -> . MAIN LP RP SEMICOLON
    (77) comment -> . COMMENT
    (11) procedimiento -> . proc
    (12) proc -> . PROC ID LP instrucciones RP SEMICOLON

    $end            reduce using rule 2 (init -> comment .)
    MAIN            shift and go to state 9
    COMMENT         shift and go to state 3
    PROC            shift and go to state 11

    comment                        shift and go to state 4
    code                           shift and go to state 5
    procedimientos                 shift and go to state 6
    main                           shift and go to state 7
    procedimiento                  shift and go to state 8
    proc                           shift and go to state 10

state 3

    (77) comment -> COMMENT .

    MAIN            reduce using rule 77 (comment -> COMMENT .)
    COMMENT         reduce using rule 77 (comment -> COMMENT .)
    PROC            reduce using rule 77 (comment -> COMMENT .)
    $end            reduce using rule 77 (comment -> COMMENT .)
    DEF             reduce using rule 77 (comment -> COMMENT .)
    CALL            reduce using rule 77 (comment -> COMMENT .)
    ALTER           reduce using rule 77 (comment -> COMMENT .)
    NOT             reduce using rule 77 (comment -> COMMENT .)
    PRINT           reduce using rule 77 (comment -> COMMENT .)
    WHILE           reduce using rule 77 (comment -> COMMENT .)
    UNTIL           reduce using rule 77 (comment -> COMMENT .)
    CASE            reduce using rule 77 (comment -> COMMENT .)
    MOVER           reduce using rule 77 (comment -> COMMENT .)
    ALEATORIO       reduce using rule 77 (comment -> COMMENT .)
    ISTRUE          reduce using rule 77 (comment -> COMMENT .)
    REPEAT          reduce using rule 77 (comment -> COMMENT .)
    ID              reduce using rule 77 (comment -> COMMENT .)
    RP              reduce using rule 77 (comment -> COMMENT .)


state 4

    (7) code -> comment . code
    (3) code -> . procedimientos main
    (4) code -> . main procedimientos
    (5) code -> . procedimientos main procedimientos
    (6) code -> . main
    (7) code -> . comment code
    (8) code -> . code comment
    (9) procedimientos -> . procedimiento procedimientos
    (10) procedimientos -> . procedimiento
    (13) main -> . MAIN LP instrucciones RP SEMICOLON
    (14) main -> . MAIN LP RP SEMICOLON
    (77) comment -> . COMMENT
    (11) procedimiento -> . proc
    (12) proc -> . PROC ID LP instrucciones RP SEMICOLON

    MAIN            shift and go to state 9
    COMMENT         shift and go to state 3
    PROC            shift and go to state 11

    comment                        shift and go to state 4
    code                           shift and go to state 12
    procedimientos                 shift and go to state 6
    main                           shift and go to state 7
    procedimiento                  shift and go to state 8
    proc                           shift and go to state 10

state 5

    (1) init -> comment code .
    (8) code -> code . comment
    (77) comment -> . COMMENT

    $end            reduce using rule 1 (init -> comment code .)
    COMMENT         shift and go to state 3

    comment                        shift and go to state 13

state 6

    (3) code -> procedimientos . main
    (5) code -> procedimientos . main procedimientos
    (13) main -> . MAIN LP instrucciones RP SEMICOLON
    (14) main -> . MAIN LP RP SEMICOLON

    MAIN            shift and go to state 9

    main                           shift and go to state 14

state 7

    (4) code -> main . procedimientos
    (6) code -> main .
    (9) procedimientos -> . procedimiento procedimientos
    (10) procedimientos -> . procedimiento
    (11) procedimiento -> . proc
    (12) proc -> . PROC ID LP instrucciones RP SEMICOLON

    COMMENT         reduce using rule 6 (code -> main .)
    $end            reduce using rule 6 (code -> main .)
    PROC            shift and go to state 11

    procedimientos                 shift and go to state 15
    procedimiento                  shift and go to state 8
    proc                           shift and go to state 10

state 8

    (9) procedimientos -> procedimiento . procedimientos
    (10) procedimientos -> procedimiento .
    (9) procedimientos -> . procedimiento procedimientos
    (10) procedimientos -> . procedimiento
    (11) procedimiento -> . proc
    (12) proc -> . PROC ID LP instrucciones RP SEMICOLON

    MAIN            reduce using rule 10 (procedimientos -> procedimiento .)
    COMMENT         reduce using rule 10 (procedimientos -> procedimiento .)
    $end            reduce using rule 10 (procedimientos -> procedimiento .)
    PROC            shift and go to state 11

    procedimiento                  shift and go to state 8
    procedimientos                 shift and go to state 16
    proc                           shift and go to state 10

state 9

    (13) main -> MAIN . LP instrucciones RP SEMICOLON
    (14) main -> MAIN . LP RP SEMICOLON

    LP              shift and go to state 17


state 10

    (11) procedimiento -> proc .

    PROC            reduce using rule 11 (procedimiento -> proc .)
    MAIN            reduce using rule 11 (procedimiento -> proc .)
    COMMENT         reduce using rule 11 (procedimiento -> proc .)
    $end            reduce using rule 11 (procedimiento -> proc .)


state 11

    (12) proc -> PROC . ID LP instrucciones RP SEMICOLON

    ID              shift and go to state 18


state 12

    (7) code -> comment code .
    (8) code -> code . comment
    (77) comment -> . COMMENT

  ! shift/reduce conflict for COMMENT resolved as shift
    $end            reduce using rule 7 (code -> comment code .)
    COMMENT         shift and go to state 3

  ! COMMENT         [ reduce using rule 7 (code -> comment code .) ]

    comment                        shift and go to state 13

state 13

    (8) code -> code comment .

    COMMENT         reduce using rule 8 (code -> code comment .)
    $end            reduce using rule 8 (code -> code comment .)


state 14

    (3) code -> procedimientos main .
    (5) code -> procedimientos main . procedimientos
    (9) procedimientos -> . procedimiento procedimientos
    (10) procedimientos -> . procedimiento
    (11) procedimiento -> . proc
    (12) proc -> . PROC ID LP instrucciones RP SEMICOLON

    COMMENT         reduce using rule 3 (code -> procedimientos main .)
    $end            reduce using rule 3 (code -> procedimientos main .)
    PROC            shift and go to state 11

    procedimientos                 shift and go to state 19
    procedimiento                  shift and go to state 8
    proc                           shift and go to state 10

state 15

    (4) code -> main procedimientos .

    COMMENT         reduce using rule 4 (code -> main procedimientos .)
    $end            reduce using rule 4 (code -> main procedimientos .)


state 16

    (9) procedimientos -> procedimiento procedimientos .

    MAIN            reduce using rule 9 (procedimientos -> procedimiento procedimientos .)
    COMMENT         reduce using rule 9 (procedimientos -> procedimiento procedimientos .)
    $end            reduce using rule 9 (procedimientos -> procedimiento procedimientos .)


state 17

    (13) main -> MAIN LP . instrucciones RP SEMICOLON
    (14) main -> MAIN LP . RP SEMICOLON
    (15) instrucciones -> . instruccion instrucciones
    (16) instrucciones -> . instruccion
    (17) instruccion -> . def
    (18) instruccion -> . call
    (19) instruccion -> . alter
    (20) instruccion -> . not
    (21) instruccion -> . print
    (22) instruccion -> . iterative
    (23) instruccion -> . case
    (24) instruccion -> . mover
    (25) instruccion -> . aleatorio
    (26) instruccion -> . istrue
    (27) instruccion -> . repeat
    (28) instruccion -> . change
    (29) instruccion -> . comment
    (30) def -> . DEF LP ID COMMA TYPE COMMA value RP SEMICOLON
    (31) def -> . DEF LP ID COMMA TYPE RP SEMICOLON
    (32) call -> . CALL LP ID RP SEMICOLON
    (33) alter -> . ALTER LP ID COMMA INTEGER RP SEMICOLON
    (34) alter -> . ALTER LP ID COMMA ID RP SEMICOLON
    (35) not -> . NOT LP ID RP SEMICOLON
    (37) print -> . PRINT LP prints RP SEMICOLON
    (42) iterative -> . WHILE condicion LP instrucciones RP SEMICOLON
    (43) iterative -> . UNTIL LP instrucciones RP condicion SEMICOLON
    (44) case -> . CASE funciones SEMICOLON
    (45) case -> . CASE ID funciones SEMICOLON
    (46) mover -> . MOVER LP DIR RP SEMICOLON
    (47) aleatorio -> . ALEATORIO LP RP SEMICOLON
    (36) istrue -> . ISTRUE LP ID RP SEMICOLON
    (48) repeat -> . REPEAT LP instrucciones RP SEMICOLON
    (68) change -> . ID LP value RP SEMICOLON
    (77) comment -> . COMMENT

    RP              shift and go to state 21
    DEF             shift and go to state 36
    CALL            shift and go to state 38
    ALTER           shift and go to state 39
    NOT             shift and go to state 40
    PRINT           shift and go to state 41
    WHILE           shift and go to state 42
    UNTIL           shift and go to state 43
    CASE            shift and go to state 44
    MOVER           shift and go to state 45
    ALEATORIO       shift and go to state 46
    ISTRUE          shift and go to state 47
    REPEAT          shift and go to state 48
    ID              shift and go to state 37
    COMMENT         shift and go to state 3

    instrucciones                  shift and go to state 20
    instruccion                    shift and go to state 22
    def                            shift and go to state 23
    call                           shift and go to state 24
    alter                          shift and go to state 25
    not                            shift and go to state 26
    print                          shift and go to state 27
    iterative                      shift and go to state 28
    case                           shift and go to state 29
    mover                          shift and go to state 30
    aleatorio                      shift and go to state 31
    istrue                         shift and go to state 32
    repeat                         shift and go to state 33
    change                         shift and go to state 34
    comment                        shift and go to state 35

state 18

    (12) proc -> PROC ID . LP instrucciones RP SEMICOLON

    LP              shift and go to state 49


state 19

    (5) code -> procedimientos main procedimientos .

    COMMENT         reduce using rule 5 (code -> procedimientos main procedimientos .)
    $end            reduce using rule 5 (code -> procedimientos main procedimientos .)


state 20

    (13) main -> MAIN LP instrucciones . RP SEMICOLON

    RP              shift and go to state 50


state 21

    (14) main -> MAIN LP RP . SEMICOLON

    SEMICOLON       shift and go to state 51


state 22

    (15) instrucciones -> instruccion . instrucciones
    (16) instrucciones -> instruccion .
    (15) instrucciones -> . instruccion instrucciones
    (16) instrucciones -> . instruccion
    (17) instruccion -> . def
    (18) instruccion -> . call
    (19) instruccion -> . alter
    (20) instruccion -> . not
    (21) instruccion -> . print
    (22) instruccion -> . iterative
    (23) instruccion -> . case
    (24) instruccion -> . mover
    (25) instruccion -> . aleatorio
    (26) instruccion -> . istrue
    (27) instruccion -> . repeat
    (28) instruccion -> . change
    (29) instruccion -> . comment
    (30) def -> . DEF LP ID COMMA TYPE COMMA value RP SEMICOLON
    (31) def -> . DEF LP ID COMMA TYPE RP SEMICOLON
    (32) call -> . CALL LP ID RP SEMICOLON
    (33) alter -> . ALTER LP ID COMMA INTEGER RP SEMICOLON
    (34) alter -> . ALTER LP ID COMMA ID RP SEMICOLON
    (35) not -> . NOT LP ID RP SEMICOLON
    (37) print -> . PRINT LP prints RP SEMICOLON
    (42) iterative -> . WHILE condicion LP instrucciones RP SEMICOLON
    (43) iterative -> . UNTIL LP instrucciones RP condicion SEMICOLON
    (44) case -> . CASE funciones SEMICOLON
    (45) case -> . CASE ID funciones SEMICOLON
    (46) mover -> . MOVER LP DIR RP SEMICOLON
    (47) aleatorio -> . ALEATORIO LP RP SEMICOLON
    (36) istrue -> . ISTRUE LP ID RP SEMICOLON
    (48) repeat -> . REPEAT LP instrucciones RP SEMICOLON
    (68) change -> . ID LP value RP SEMICOLON
    (77) comment -> . COMMENT

    RP              reduce using rule 16 (instrucciones -> instruccion .)
    DEF             shift and go to state 36
    CALL            shift and go to state 38
    ALTER           shift and go to state 39
    NOT             shift and go to state 40
    PRINT           shift and go to state 41
    WHILE           shift and go to state 42
    UNTIL           shift and go to state 43
    CASE            shift and go to state 44
    MOVER           shift and go to state 45
    ALEATORIO       shift and go to state 46
    ISTRUE          shift and go to state 47
    REPEAT          shift and go to state 48
    ID              shift and go to state 37
    COMMENT         shift and go to state 3

    instruccion                    shift and go to state 22
    instrucciones                  shift and go to state 52
    def                            shift and go to state 23
    call                           shift and go to state 24
    alter                          shift and go to state 25
    not                            shift and go to state 26
    print                          shift and go to state 27
    iterative                      shift and go to state 28
    case                           shift and go to state 29
    mover                          shift and go to state 30
    aleatorio                      shift and go to state 31
    istrue                         shift and go to state 32
    repeat                         shift and go to state 33
    change                         shift and go to state 34
    comment                        shift and go to state 35

state 23

    (17) instruccion -> def .

    DEF             reduce using rule 17 (instruccion -> def .)
    CALL            reduce using rule 17 (instruccion -> def .)
    ALTER           reduce using rule 17 (instruccion -> def .)
    NOT             reduce using rule 17 (instruccion -> def .)
    PRINT           reduce using rule 17 (instruccion -> def .)
    WHILE           reduce using rule 17 (instruccion -> def .)
    UNTIL           reduce using rule 17 (instruccion -> def .)
    CASE            reduce using rule 17 (instruccion -> def .)
    MOVER           reduce using rule 17 (instruccion -> def .)
    ALEATORIO       reduce using rule 17 (instruccion -> def .)
    ISTRUE          reduce using rule 17 (instruccion -> def .)
    REPEAT          reduce using rule 17 (instruccion -> def .)
    ID              reduce using rule 17 (instruccion -> def .)
    COMMENT         reduce using rule 17 (instruccion -> def .)
    RP              reduce using rule 17 (instruccion -> def .)


state 24

    (18) instruccion -> call .

    DEF             reduce using rule 18 (instruccion -> call .)
    CALL            reduce using rule 18 (instruccion -> call .)
    ALTER           reduce using rule 18 (instruccion -> call .)
    NOT             reduce using rule 18 (instruccion -> call .)
    PRINT           reduce using rule 18 (instruccion -> call .)
    WHILE           reduce using rule 18 (instruccion -> call .)
    UNTIL           reduce using rule 18 (instruccion -> call .)
    CASE            reduce using rule 18 (instruccion -> call .)
    MOVER           reduce using rule 18 (instruccion -> call .)
    ALEATORIO       reduce using rule 18 (instruccion -> call .)
    ISTRUE          reduce using rule 18 (instruccion -> call .)
    REPEAT          reduce using rule 18 (instruccion -> call .)
    ID              reduce using rule 18 (instruccion -> call .)
    COMMENT         reduce using rule 18 (instruccion -> call .)
    RP              reduce using rule 18 (instruccion -> call .)


state 25

    (19) instruccion -> alter .

    DEF             reduce using rule 19 (instruccion -> alter .)
    CALL            reduce using rule 19 (instruccion -> alter .)
    ALTER           reduce using rule 19 (instruccion -> alter .)
    NOT             reduce using rule 19 (instruccion -> alter .)
    PRINT           reduce using rule 19 (instruccion -> alter .)
    WHILE           reduce using rule 19 (instruccion -> alter .)
    UNTIL           reduce using rule 19 (instruccion -> alter .)
    CASE            reduce using rule 19 (instruccion -> alter .)
    MOVER           reduce using rule 19 (instruccion -> alter .)
    ALEATORIO       reduce using rule 19 (instruccion -> alter .)
    ISTRUE          reduce using rule 19 (instruccion -> alter .)
    REPEAT          reduce using rule 19 (instruccion -> alter .)
    ID              reduce using rule 19 (instruccion -> alter .)
    COMMENT         reduce using rule 19 (instruccion -> alter .)
    RP              reduce using rule 19 (instruccion -> alter .)


state 26

    (20) instruccion -> not .

    DEF             reduce using rule 20 (instruccion -> not .)
    CALL            reduce using rule 20 (instruccion -> not .)
    ALTER           reduce using rule 20 (instruccion -> not .)
    NOT             reduce using rule 20 (instruccion -> not .)
    PRINT           reduce using rule 20 (instruccion -> not .)
    WHILE           reduce using rule 20 (instruccion -> not .)
    UNTIL           reduce using rule 20 (instruccion -> not .)
    CASE            reduce using rule 20 (instruccion -> not .)
    MOVER           reduce using rule 20 (instruccion -> not .)
    ALEATORIO       reduce using rule 20 (instruccion -> not .)
    ISTRUE          reduce using rule 20 (instruccion -> not .)
    REPEAT          reduce using rule 20 (instruccion -> not .)
    ID              reduce using rule 20 (instruccion -> not .)
    COMMENT         reduce using rule 20 (instruccion -> not .)
    RP              reduce using rule 20 (instruccion -> not .)


state 27

    (21) instruccion -> print .

    DEF             reduce using rule 21 (instruccion -> print .)
    CALL            reduce using rule 21 (instruccion -> print .)
    ALTER           reduce using rule 21 (instruccion -> print .)
    NOT             reduce using rule 21 (instruccion -> print .)
    PRINT           reduce using rule 21 (instruccion -> print .)
    WHILE           reduce using rule 21 (instruccion -> print .)
    UNTIL           reduce using rule 21 (instruccion -> print .)
    CASE            reduce using rule 21 (instruccion -> print .)
    MOVER           reduce using rule 21 (instruccion -> print .)
    ALEATORIO       reduce using rule 21 (instruccion -> print .)
    ISTRUE          reduce using rule 21 (instruccion -> print .)
    REPEAT          reduce using rule 21 (instruccion -> print .)
    ID              reduce using rule 21 (instruccion -> print .)
    COMMENT         reduce using rule 21 (instruccion -> print .)
    RP              reduce using rule 21 (instruccion -> print .)


state 28

    (22) instruccion -> iterative .

    DEF             reduce using rule 22 (instruccion -> iterative .)
    CALL            reduce using rule 22 (instruccion -> iterative .)
    ALTER           reduce using rule 22 (instruccion -> iterative .)
    NOT             reduce using rule 22 (instruccion -> iterative .)
    PRINT           reduce using rule 22 (instruccion -> iterative .)
    WHILE           reduce using rule 22 (instruccion -> iterative .)
    UNTIL           reduce using rule 22 (instruccion -> iterative .)
    CASE            reduce using rule 22 (instruccion -> iterative .)
    MOVER           reduce using rule 22 (instruccion -> iterative .)
    ALEATORIO       reduce using rule 22 (instruccion -> iterative .)
    ISTRUE          reduce using rule 22 (instruccion -> iterative .)
    REPEAT          reduce using rule 22 (instruccion -> iterative .)
    ID              reduce using rule 22 (instruccion -> iterative .)
    COMMENT         reduce using rule 22 (instruccion -> iterative .)
    RP              reduce using rule 22 (instruccion -> iterative .)


state 29

    (23) instruccion -> case .

    DEF             reduce using rule 23 (instruccion -> case .)
    CALL            reduce using rule 23 (instruccion -> case .)
    ALTER           reduce using rule 23 (instruccion -> case .)
    NOT             reduce using rule 23 (instruccion -> case .)
    PRINT           reduce using rule 23 (instruccion -> case .)
    WHILE           reduce using rule 23 (instruccion -> case .)
    UNTIL           reduce using rule 23 (instruccion -> case .)
    CASE            reduce using rule 23 (instruccion -> case .)
    MOVER           reduce using rule 23 (instruccion -> case .)
    ALEATORIO       reduce using rule 23 (instruccion -> case .)
    ISTRUE          reduce using rule 23 (instruccion -> case .)
    REPEAT          reduce using rule 23 (instruccion -> case .)
    ID              reduce using rule 23 (instruccion -> case .)
    COMMENT         reduce using rule 23 (instruccion -> case .)
    RP              reduce using rule 23 (instruccion -> case .)


state 30

    (24) instruccion -> mover .

    DEF             reduce using rule 24 (instruccion -> mover .)
    CALL            reduce using rule 24 (instruccion -> mover .)
    ALTER           reduce using rule 24 (instruccion -> mover .)
    NOT             reduce using rule 24 (instruccion -> mover .)
    PRINT           reduce using rule 24 (instruccion -> mover .)
    WHILE           reduce using rule 24 (instruccion -> mover .)
    UNTIL           reduce using rule 24 (instruccion -> mover .)
    CASE            reduce using rule 24 (instruccion -> mover .)
    MOVER           reduce using rule 24 (instruccion -> mover .)
    ALEATORIO       reduce using rule 24 (instruccion -> mover .)
    ISTRUE          reduce using rule 24 (instruccion -> mover .)
    REPEAT          reduce using rule 24 (instruccion -> mover .)
    ID              reduce using rule 24 (instruccion -> mover .)
    COMMENT         reduce using rule 24 (instruccion -> mover .)
    RP              reduce using rule 24 (instruccion -> mover .)


state 31

    (25) instruccion -> aleatorio .

    DEF             reduce using rule 25 (instruccion -> aleatorio .)
    CALL            reduce using rule 25 (instruccion -> aleatorio .)
    ALTER           reduce using rule 25 (instruccion -> aleatorio .)
    NOT             reduce using rule 25 (instruccion -> aleatorio .)
    PRINT           reduce using rule 25 (instruccion -> aleatorio .)
    WHILE           reduce using rule 25 (instruccion -> aleatorio .)
    UNTIL           reduce using rule 25 (instruccion -> aleatorio .)
    CASE            reduce using rule 25 (instruccion -> aleatorio .)
    MOVER           reduce using rule 25 (instruccion -> aleatorio .)
    ALEATORIO       reduce using rule 25 (instruccion -> aleatorio .)
    ISTRUE          reduce using rule 25 (instruccion -> aleatorio .)
    REPEAT          reduce using rule 25 (instruccion -> aleatorio .)
    ID              reduce using rule 25 (instruccion -> aleatorio .)
    COMMENT         reduce using rule 25 (instruccion -> aleatorio .)
    RP              reduce using rule 25 (instruccion -> aleatorio .)


state 32

    (26) instruccion -> istrue .

    DEF             reduce using rule 26 (instruccion -> istrue .)
    CALL            reduce using rule 26 (instruccion -> istrue .)
    ALTER           reduce using rule 26 (instruccion -> istrue .)
    NOT             reduce using rule 26 (instruccion -> istrue .)
    PRINT           reduce using rule 26 (instruccion -> istrue .)
    WHILE           reduce using rule 26 (instruccion -> istrue .)
    UNTIL           reduce using rule 26 (instruccion -> istrue .)
    CASE            reduce using rule 26 (instruccion -> istrue .)
    MOVER           reduce using rule 26 (instruccion -> istrue .)
    ALEATORIO       reduce using rule 26 (instruccion -> istrue .)
    ISTRUE          reduce using rule 26 (instruccion -> istrue .)
    REPEAT          reduce using rule 26 (instruccion -> istrue .)
    ID              reduce using rule 26 (instruccion -> istrue .)
    COMMENT         reduce using rule 26 (instruccion -> istrue .)
    RP              reduce using rule 26 (instruccion -> istrue .)


state 33

    (27) instruccion -> repeat .

    DEF             reduce using rule 27 (instruccion -> repeat .)
    CALL            reduce using rule 27 (instruccion -> repeat .)
    ALTER           reduce using rule 27 (instruccion -> repeat .)
    NOT             reduce using rule 27 (instruccion -> repeat .)
    PRINT           reduce using rule 27 (instruccion -> repeat .)
    WHILE           reduce using rule 27 (instruccion -> repeat .)
    UNTIL           reduce using rule 27 (instruccion -> repeat .)
    CASE            reduce using rule 27 (instruccion -> repeat .)
    MOVER           reduce using rule 27 (instruccion -> repeat .)
    ALEATORIO       reduce using rule 27 (instruccion -> repeat .)
    ISTRUE          reduce using rule 27 (instruccion -> repeat .)
    REPEAT          reduce using rule 27 (instruccion -> repeat .)
    ID              reduce using rule 27 (instruccion -> repeat .)
    COMMENT         reduce using rule 27 (instruccion -> repeat .)
    RP              reduce using rule 27 (instruccion -> repeat .)


state 34

    (28) instruccion -> change .

    DEF             reduce using rule 28 (instruccion -> change .)
    CALL            reduce using rule 28 (instruccion -> change .)
    ALTER           reduce using rule 28 (instruccion -> change .)
    NOT             reduce using rule 28 (instruccion -> change .)
    PRINT           reduce using rule 28 (instruccion -> change .)
    WHILE           reduce using rule 28 (instruccion -> change .)
    UNTIL           reduce using rule 28 (instruccion -> change .)
    CASE            reduce using rule 28 (instruccion -> change .)
    MOVER           reduce using rule 28 (instruccion -> change .)
    ALEATORIO       reduce using rule 28 (instruccion -> change .)
    ISTRUE          reduce using rule 28 (instruccion -> change .)
    REPEAT          reduce using rule 28 (instruccion -> change .)
    ID              reduce using rule 28 (instruccion -> change .)
    COMMENT         reduce using rule 28 (instruccion -> change .)
    RP              reduce using rule 28 (instruccion -> change .)


state 35

    (29) instruccion -> comment .

    DEF             reduce using rule 29 (instruccion -> comment .)
    CALL            reduce using rule 29 (instruccion -> comment .)
    ALTER           reduce using rule 29 (instruccion -> comment .)
    NOT             reduce using rule 29 (instruccion -> comment .)
    PRINT           reduce using rule 29 (instruccion -> comment .)
    WHILE           reduce using rule 29 (instruccion -> comment .)
    UNTIL           reduce using rule 29 (instruccion -> comment .)
    CASE            reduce using rule 29 (instruccion -> comment .)
    MOVER           reduce using rule 29 (instruccion -> comment .)
    ALEATORIO       reduce using rule 29 (instruccion -> comment .)
    ISTRUE          reduce using rule 29 (instruccion -> comment .)
    REPEAT          reduce using rule 29 (instruccion -> comment .)
    ID              reduce using rule 29 (instruccion -> comment .)
    COMMENT         reduce using rule 29 (instruccion -> comment .)
    RP              reduce using rule 29 (instruccion -> comment .)


state 36

    (30) def -> DEF . LP ID COMMA TYPE COMMA value RP SEMICOLON
    (31) def -> DEF . LP ID COMMA TYPE RP SEMICOLON

    LP              shift and go to state 53


state 37

    (68) change -> ID . LP value RP SEMICOLON

    LP              shift and go to state 54


state 38

    (32) call -> CALL . LP ID RP SEMICOLON

    LP              shift and go to state 55


state 39

    (33) alter -> ALTER . LP ID COMMA INTEGER RP SEMICOLON
    (34) alter -> ALTER . LP ID COMMA ID RP SEMICOLON

    LP              shift and go to state 56


state 40

    (35) not -> NOT . LP ID RP SEMICOLON

    LP              shift and go to state 57


state 41

    (37) print -> PRINT . LP prints RP SEMICOLON

    LP              shift and go to state 58


state 42

    (42) iterative -> WHILE . condicion LP instrucciones RP SEMICOLON
    (59) condicion -> . oper GT oper
    (60) condicion -> . oper LT oper
    (61) condicion -> . oper EQUAL oper
    (62) condicion -> . oper DIF oper
    (63) condicion -> . oper GTE oper
    (64) condicion -> . oper LTE oper
    (65) condicion -> . istrue
    (66) oper -> . value
    (67) oper -> . expression
    (36) istrue -> . ISTRUE LP ID RP SEMICOLON
    (49) value -> . INTEGER
    (50) value -> . BOOL
    (69) expression -> . expression PLUS term
    (70) expression -> . expression MINUS term
    (71) expression -> . term
    (72) term -> . term STAR factor
    (73) term -> . term SLASH factor
    (74) term -> . factor
    (75) factor -> . INTEGER
    (76) factor -> . LP expression RP

    ISTRUE          shift and go to state 47
    INTEGER         shift and go to state 65
    BOOL            shift and go to state 66
    LP              shift and go to state 60

    condicion                      shift and go to state 59
    oper                           shift and go to state 61
    istrue                         shift and go to state 62
    value                          shift and go to state 63
    expression                     shift and go to state 64
    term                           shift and go to state 67
    factor                         shift and go to state 68

state 43

    (43) iterative -> UNTIL . LP instrucciones RP condicion SEMICOLON

    LP              shift and go to state 69


state 44

    (44) case -> CASE . funciones SEMICOLON
    (45) case -> CASE . ID funciones SEMICOLON
    (51) funciones -> . funcion
    (52) funciones -> . funciones funcion
    (53) funcion -> . when then
    (54) funcion -> . when then else
    (55) when -> . WHEN LP condicion RP
    (56) when -> . WHEN value

    ID              shift and go to state 71
    WHEN            shift and go to state 74

    funciones                      shift and go to state 70
    funcion                        shift and go to state 72
    when                           shift and go to state 73

state 45

    (46) mover -> MOVER . LP DIR RP SEMICOLON

    LP              shift and go to state 75


state 46

    (47) aleatorio -> ALEATORIO . LP RP SEMICOLON

    LP              shift and go to state 76


state 47

    (36) istrue -> ISTRUE . LP ID RP SEMICOLON

    LP              shift and go to state 77


state 48

    (48) repeat -> REPEAT . LP instrucciones RP SEMICOLON

    LP              shift and go to state 78


state 49

    (12) proc -> PROC ID LP . instrucciones RP SEMICOLON
    (15) instrucciones -> . instruccion instrucciones
    (16) instrucciones -> . instruccion
    (17) instruccion -> . def
    (18) instruccion -> . call
    (19) instruccion -> . alter
    (20) instruccion -> . not
    (21) instruccion -> . print
    (22) instruccion -> . iterative
    (23) instruccion -> . case
    (24) instruccion -> . mover
    (25) instruccion -> . aleatorio
    (26) instruccion -> . istrue
    (27) instruccion -> . repeat
    (28) instruccion -> . change
    (29) instruccion -> . comment
    (30) def -> . DEF LP ID COMMA TYPE COMMA value RP SEMICOLON
    (31) def -> . DEF LP ID COMMA TYPE RP SEMICOLON
    (32) call -> . CALL LP ID RP SEMICOLON
    (33) alter -> . ALTER LP ID COMMA INTEGER RP SEMICOLON
    (34) alter -> . ALTER LP ID COMMA ID RP SEMICOLON
    (35) not -> . NOT LP ID RP SEMICOLON
    (37) print -> . PRINT LP prints RP SEMICOLON
    (42) iterative -> . WHILE condicion LP instrucciones RP SEMICOLON
    (43) iterative -> . UNTIL LP instrucciones RP condicion SEMICOLON
    (44) case -> . CASE funciones SEMICOLON
    (45) case -> . CASE ID funciones SEMICOLON
    (46) mover -> . MOVER LP DIR RP SEMICOLON
    (47) aleatorio -> . ALEATORIO LP RP SEMICOLON
    (36) istrue -> . ISTRUE LP ID RP SEMICOLON
    (48) repeat -> . REPEAT LP instrucciones RP SEMICOLON
    (68) change -> . ID LP value RP SEMICOLON
    (77) comment -> . COMMENT

    DEF             shift and go to state 36
    CALL            shift and go to state 38
    ALTER           shift and go to state 39
    NOT             shift and go to state 40
    PRINT           shift and go to state 41
    WHILE           shift and go to state 42
    UNTIL           shift and go to state 43
    CASE            shift and go to state 44
    MOVER           shift and go to state 45
    ALEATORIO       shift and go to state 46
    ISTRUE          shift and go to state 47
    REPEAT          shift and go to state 48
    ID              shift and go to state 37
    COMMENT         shift and go to state 3

    instrucciones                  shift and go to state 79
    instruccion                    shift and go to state 22
    def                            shift and go to state 23
    call                           shift and go to state 24
    alter                          shift and go to state 25
    not                            shift and go to state 26
    print                          shift and go to state 27
    iterative                      shift and go to state 28
    case                           shift and go to state 29
    mover                          shift and go to state 30
    aleatorio                      shift and go to state 31
    istrue                         shift and go to state 32
    repeat                         shift and go to state 33
    change                         shift and go to state 34
    comment                        shift and go to state 35

state 50

    (13) main -> MAIN LP instrucciones RP . SEMICOLON

    SEMICOLON       shift and go to state 80


state 51

    (14) main -> MAIN LP RP SEMICOLON .

    PROC            reduce using rule 14 (main -> MAIN LP RP SEMICOLON .)
    COMMENT         reduce using rule 14 (main -> MAIN LP RP SEMICOLON .)
    $end            reduce using rule 14 (main -> MAIN LP RP SEMICOLON .)


state 52

    (15) instrucciones -> instruccion instrucciones .

    RP              reduce using rule 15 (instrucciones -> instruccion instrucciones .)


state 53

    (30) def -> DEF LP . ID COMMA TYPE COMMA value RP SEMICOLON
    (31) def -> DEF LP . ID COMMA TYPE RP SEMICOLON

    ID              shift and go to state 81


state 54

    (68) change -> ID LP . value RP SEMICOLON
    (49) value -> . INTEGER
    (50) value -> . BOOL

    INTEGER         shift and go to state 83
    BOOL            shift and go to state 66

    value                          shift and go to state 82

state 55

    (32) call -> CALL LP . ID RP SEMICOLON

    ID              shift and go to state 84


state 56

    (33) alter -> ALTER LP . ID COMMA INTEGER RP SEMICOLON
    (34) alter -> ALTER LP . ID COMMA ID RP SEMICOLON

    ID              shift and go to state 85


state 57

    (35) not -> NOT LP . ID RP SEMICOLON

    ID              shift and go to state 86


state 58

    (37) print -> PRINT LP . prints RP SEMICOLON
    (38) prints -> . printexpr
    (39) prints -> . prints printexpr
    (40) printexpr -> . STRING
    (41) printexpr -> . ID

    STRING          shift and go to state 89
    ID              shift and go to state 90

    prints                         shift and go to state 87
    printexpr                      shift and go to state 88

state 59

    (42) iterative -> WHILE condicion . LP instrucciones RP SEMICOLON

    LP              shift and go to state 91


state 60

    (76) factor -> LP . expression RP
    (69) expression -> . expression PLUS term
    (70) expression -> . expression MINUS term
    (71) expression -> . term
    (72) term -> . term STAR factor
    (73) term -> . term SLASH factor
    (74) term -> . factor
    (75) factor -> . INTEGER
    (76) factor -> . LP expression RP

    INTEGER         shift and go to state 93
    LP              shift and go to state 60

    expression                     shift and go to state 92
    term                           shift and go to state 67
    factor                         shift and go to state 68

state 61

    (59) condicion -> oper . GT oper
    (60) condicion -> oper . LT oper
    (61) condicion -> oper . EQUAL oper
    (62) condicion -> oper . DIF oper
    (63) condicion -> oper . GTE oper
    (64) condicion -> oper . LTE oper

    GT              shift and go to state 94
    LT              shift and go to state 95
    EQUAL           shift and go to state 96
    DIF             shift and go to state 97
    GTE             shift and go to state 98
    LTE             shift and go to state 99


state 62

    (65) condicion -> istrue .

    LP              reduce using rule 65 (condicion -> istrue .)
    RP              reduce using rule 65 (condicion -> istrue .)
    SEMICOLON       reduce using rule 65 (condicion -> istrue .)


state 63

    (66) oper -> value .

    GT              reduce using rule 66 (oper -> value .)
    LT              reduce using rule 66 (oper -> value .)
    EQUAL           reduce using rule 66 (oper -> value .)
    DIF             reduce using rule 66 (oper -> value .)
    GTE             reduce using rule 66 (oper -> value .)
    LTE             reduce using rule 66 (oper -> value .)
    LP              reduce using rule 66 (oper -> value .)
    RP              reduce using rule 66 (oper -> value .)
    SEMICOLON       reduce using rule 66 (oper -> value .)


state 64

    (67) oper -> expression .
    (69) expression -> expression . PLUS term
    (70) expression -> expression . MINUS term

    GT              reduce using rule 67 (oper -> expression .)
    LT              reduce using rule 67 (oper -> expression .)
    EQUAL           reduce using rule 67 (oper -> expression .)
    DIF             reduce using rule 67 (oper -> expression .)
    GTE             reduce using rule 67 (oper -> expression .)
    LTE             reduce using rule 67 (oper -> expression .)
    LP              reduce using rule 67 (oper -> expression .)
    RP              reduce using rule 67 (oper -> expression .)
    SEMICOLON       reduce using rule 67 (oper -> expression .)
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101


state 65

    (49) value -> INTEGER .
    (75) factor -> INTEGER .

  ! reduce/reduce conflict for GT resolved using rule 49 (value -> INTEGER .)
  ! reduce/reduce conflict for LT resolved using rule 49 (value -> INTEGER .)
  ! reduce/reduce conflict for EQUAL resolved using rule 49 (value -> INTEGER .)
  ! reduce/reduce conflict for DIF resolved using rule 49 (value -> INTEGER .)
  ! reduce/reduce conflict for GTE resolved using rule 49 (value -> INTEGER .)
  ! reduce/reduce conflict for LTE resolved using rule 49 (value -> INTEGER .)
  ! reduce/reduce conflict for LP resolved using rule 49 (value -> INTEGER .)
  ! reduce/reduce conflict for RP resolved using rule 49 (value -> INTEGER .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 49 (value -> INTEGER .)
    GT              reduce using rule 49 (value -> INTEGER .)
    LT              reduce using rule 49 (value -> INTEGER .)
    EQUAL           reduce using rule 49 (value -> INTEGER .)
    DIF             reduce using rule 49 (value -> INTEGER .)
    GTE             reduce using rule 49 (value -> INTEGER .)
    LTE             reduce using rule 49 (value -> INTEGER .)
    LP              reduce using rule 49 (value -> INTEGER .)
    RP              reduce using rule 49 (value -> INTEGER .)
    SEMICOLON       reduce using rule 49 (value -> INTEGER .)
    STAR            reduce using rule 75 (factor -> INTEGER .)
    SLASH           reduce using rule 75 (factor -> INTEGER .)
    PLUS            reduce using rule 75 (factor -> INTEGER .)
    MINUS           reduce using rule 75 (factor -> INTEGER .)

  ! GT              [ reduce using rule 75 (factor -> INTEGER .) ]
  ! LT              [ reduce using rule 75 (factor -> INTEGER .) ]
  ! EQUAL           [ reduce using rule 75 (factor -> INTEGER .) ]
  ! DIF             [ reduce using rule 75 (factor -> INTEGER .) ]
  ! GTE             [ reduce using rule 75 (factor -> INTEGER .) ]
  ! LTE             [ reduce using rule 75 (factor -> INTEGER .) ]
  ! LP              [ reduce using rule 75 (factor -> INTEGER .) ]
  ! RP              [ reduce using rule 75 (factor -> INTEGER .) ]
  ! SEMICOLON       [ reduce using rule 75 (factor -> INTEGER .) ]


state 66

    (50) value -> BOOL .

    GT              reduce using rule 50 (value -> BOOL .)
    LT              reduce using rule 50 (value -> BOOL .)
    EQUAL           reduce using rule 50 (value -> BOOL .)
    DIF             reduce using rule 50 (value -> BOOL .)
    GTE             reduce using rule 50 (value -> BOOL .)
    LTE             reduce using rule 50 (value -> BOOL .)
    RP              reduce using rule 50 (value -> BOOL .)
    THEN            reduce using rule 50 (value -> BOOL .)
    LP              reduce using rule 50 (value -> BOOL .)
    SEMICOLON       reduce using rule 50 (value -> BOOL .)


state 67

    (71) expression -> term .
    (72) term -> term . STAR factor
    (73) term -> term . SLASH factor

    PLUS            reduce using rule 71 (expression -> term .)
    MINUS           reduce using rule 71 (expression -> term .)
    GT              reduce using rule 71 (expression -> term .)
    LT              reduce using rule 71 (expression -> term .)
    EQUAL           reduce using rule 71 (expression -> term .)
    DIF             reduce using rule 71 (expression -> term .)
    GTE             reduce using rule 71 (expression -> term .)
    LTE             reduce using rule 71 (expression -> term .)
    RP              reduce using rule 71 (expression -> term .)
    LP              reduce using rule 71 (expression -> term .)
    SEMICOLON       reduce using rule 71 (expression -> term .)
    STAR            shift and go to state 102
    SLASH           shift and go to state 103


state 68

    (74) term -> factor .

    STAR            reduce using rule 74 (term -> factor .)
    SLASH           reduce using rule 74 (term -> factor .)
    PLUS            reduce using rule 74 (term -> factor .)
    MINUS           reduce using rule 74 (term -> factor .)
    GT              reduce using rule 74 (term -> factor .)
    LT              reduce using rule 74 (term -> factor .)
    EQUAL           reduce using rule 74 (term -> factor .)
    DIF             reduce using rule 74 (term -> factor .)
    GTE             reduce using rule 74 (term -> factor .)
    LTE             reduce using rule 74 (term -> factor .)
    RP              reduce using rule 74 (term -> factor .)
    LP              reduce using rule 74 (term -> factor .)
    SEMICOLON       reduce using rule 74 (term -> factor .)


state 69

    (43) iterative -> UNTIL LP . instrucciones RP condicion SEMICOLON
    (15) instrucciones -> . instruccion instrucciones
    (16) instrucciones -> . instruccion
    (17) instruccion -> . def
    (18) instruccion -> . call
    (19) instruccion -> . alter
    (20) instruccion -> . not
    (21) instruccion -> . print
    (22) instruccion -> . iterative
    (23) instruccion -> . case
    (24) instruccion -> . mover
    (25) instruccion -> . aleatorio
    (26) instruccion -> . istrue
    (27) instruccion -> . repeat
    (28) instruccion -> . change
    (29) instruccion -> . comment
    (30) def -> . DEF LP ID COMMA TYPE COMMA value RP SEMICOLON
    (31) def -> . DEF LP ID COMMA TYPE RP SEMICOLON
    (32) call -> . CALL LP ID RP SEMICOLON
    (33) alter -> . ALTER LP ID COMMA INTEGER RP SEMICOLON
    (34) alter -> . ALTER LP ID COMMA ID RP SEMICOLON
    (35) not -> . NOT LP ID RP SEMICOLON
    (37) print -> . PRINT LP prints RP SEMICOLON
    (42) iterative -> . WHILE condicion LP instrucciones RP SEMICOLON
    (43) iterative -> . UNTIL LP instrucciones RP condicion SEMICOLON
    (44) case -> . CASE funciones SEMICOLON
    (45) case -> . CASE ID funciones SEMICOLON
    (46) mover -> . MOVER LP DIR RP SEMICOLON
    (47) aleatorio -> . ALEATORIO LP RP SEMICOLON
    (36) istrue -> . ISTRUE LP ID RP SEMICOLON
    (48) repeat -> . REPEAT LP instrucciones RP SEMICOLON
    (68) change -> . ID LP value RP SEMICOLON
    (77) comment -> . COMMENT

    DEF             shift and go to state 36
    CALL            shift and go to state 38
    ALTER           shift and go to state 39
    NOT             shift and go to state 40
    PRINT           shift and go to state 41
    WHILE           shift and go to state 42
    UNTIL           shift and go to state 43
    CASE            shift and go to state 44
    MOVER           shift and go to state 45
    ALEATORIO       shift and go to state 46
    ISTRUE          shift and go to state 47
    REPEAT          shift and go to state 48
    ID              shift and go to state 37
    COMMENT         shift and go to state 3

    instrucciones                  shift and go to state 104
    instruccion                    shift and go to state 22
    def                            shift and go to state 23
    call                           shift and go to state 24
    alter                          shift and go to state 25
    not                            shift and go to state 26
    print                          shift and go to state 27
    iterative                      shift and go to state 28
    case                           shift and go to state 29
    mover                          shift and go to state 30
    aleatorio                      shift and go to state 31
    istrue                         shift and go to state 32
    repeat                         shift and go to state 33
    change                         shift and go to state 34
    comment                        shift and go to state 35

state 70

    (44) case -> CASE funciones . SEMICOLON
    (52) funciones -> funciones . funcion
    (53) funcion -> . when then
    (54) funcion -> . when then else
    (55) when -> . WHEN LP condicion RP
    (56) when -> . WHEN value

    SEMICOLON       shift and go to state 105
    WHEN            shift and go to state 74

    funcion                        shift and go to state 106
    when                           shift and go to state 73

state 71

    (45) case -> CASE ID . funciones SEMICOLON
    (51) funciones -> . funcion
    (52) funciones -> . funciones funcion
    (53) funcion -> . when then
    (54) funcion -> . when then else
    (55) when -> . WHEN LP condicion RP
    (56) when -> . WHEN value

    WHEN            shift and go to state 74

    funciones                      shift and go to state 107
    funcion                        shift and go to state 72
    when                           shift and go to state 73

state 72

    (51) funciones -> funcion .

    SEMICOLON       reduce using rule 51 (funciones -> funcion .)
    WHEN            reduce using rule 51 (funciones -> funcion .)


state 73

    (53) funcion -> when . then
    (54) funcion -> when . then else
    (57) then -> . THEN LP instrucciones RP

    THEN            shift and go to state 109

    then                           shift and go to state 108

state 74

    (55) when -> WHEN . LP condicion RP
    (56) when -> WHEN . value
    (49) value -> . INTEGER
    (50) value -> . BOOL

    LP              shift and go to state 110
    INTEGER         shift and go to state 83
    BOOL            shift and go to state 66

    value                          shift and go to state 111

state 75

    (46) mover -> MOVER LP . DIR RP SEMICOLON

    DIR             shift and go to state 112


state 76

    (47) aleatorio -> ALEATORIO LP . RP SEMICOLON

    RP              shift and go to state 113


state 77

    (36) istrue -> ISTRUE LP . ID RP SEMICOLON

    ID              shift and go to state 114


state 78

    (48) repeat -> REPEAT LP . instrucciones RP SEMICOLON
    (15) instrucciones -> . instruccion instrucciones
    (16) instrucciones -> . instruccion
    (17) instruccion -> . def
    (18) instruccion -> . call
    (19) instruccion -> . alter
    (20) instruccion -> . not
    (21) instruccion -> . print
    (22) instruccion -> . iterative
    (23) instruccion -> . case
    (24) instruccion -> . mover
    (25) instruccion -> . aleatorio
    (26) instruccion -> . istrue
    (27) instruccion -> . repeat
    (28) instruccion -> . change
    (29) instruccion -> . comment
    (30) def -> . DEF LP ID COMMA TYPE COMMA value RP SEMICOLON
    (31) def -> . DEF LP ID COMMA TYPE RP SEMICOLON
    (32) call -> . CALL LP ID RP SEMICOLON
    (33) alter -> . ALTER LP ID COMMA INTEGER RP SEMICOLON
    (34) alter -> . ALTER LP ID COMMA ID RP SEMICOLON
    (35) not -> . NOT LP ID RP SEMICOLON
    (37) print -> . PRINT LP prints RP SEMICOLON
    (42) iterative -> . WHILE condicion LP instrucciones RP SEMICOLON
    (43) iterative -> . UNTIL LP instrucciones RP condicion SEMICOLON
    (44) case -> . CASE funciones SEMICOLON
    (45) case -> . CASE ID funciones SEMICOLON
    (46) mover -> . MOVER LP DIR RP SEMICOLON
    (47) aleatorio -> . ALEATORIO LP RP SEMICOLON
    (36) istrue -> . ISTRUE LP ID RP SEMICOLON
    (48) repeat -> . REPEAT LP instrucciones RP SEMICOLON
    (68) change -> . ID LP value RP SEMICOLON
    (77) comment -> . COMMENT

    DEF             shift and go to state 36
    CALL            shift and go to state 38
    ALTER           shift and go to state 39
    NOT             shift and go to state 40
    PRINT           shift and go to state 41
    WHILE           shift and go to state 42
    UNTIL           shift and go to state 43
    CASE            shift and go to state 44
    MOVER           shift and go to state 45
    ALEATORIO       shift and go to state 46
    ISTRUE          shift and go to state 47
    REPEAT          shift and go to state 48
    ID              shift and go to state 37
    COMMENT         shift and go to state 3

    instrucciones                  shift and go to state 115
    instruccion                    shift and go to state 22
    def                            shift and go to state 23
    call                           shift and go to state 24
    alter                          shift and go to state 25
    not                            shift and go to state 26
    print                          shift and go to state 27
    iterative                      shift and go to state 28
    case                           shift and go to state 29
    mover                          shift and go to state 30
    aleatorio                      shift and go to state 31
    istrue                         shift and go to state 32
    repeat                         shift and go to state 33
    change                         shift and go to state 34
    comment                        shift and go to state 35

state 79

    (12) proc -> PROC ID LP instrucciones . RP SEMICOLON

    RP              shift and go to state 116


state 80

    (13) main -> MAIN LP instrucciones RP SEMICOLON .

    PROC            reduce using rule 13 (main -> MAIN LP instrucciones RP SEMICOLON .)
    COMMENT         reduce using rule 13 (main -> MAIN LP instrucciones RP SEMICOLON .)
    $end            reduce using rule 13 (main -> MAIN LP instrucciones RP SEMICOLON .)


state 81

    (30) def -> DEF LP ID . COMMA TYPE COMMA value RP SEMICOLON
    (31) def -> DEF LP ID . COMMA TYPE RP SEMICOLON

    COMMA           shift and go to state 117


state 82

    (68) change -> ID LP value . RP SEMICOLON

    RP              shift and go to state 118


state 83

    (49) value -> INTEGER .

    RP              reduce using rule 49 (value -> INTEGER .)
    THEN            reduce using rule 49 (value -> INTEGER .)


state 84

    (32) call -> CALL LP ID . RP SEMICOLON

    RP              shift and go to state 119


state 85

    (33) alter -> ALTER LP ID . COMMA INTEGER RP SEMICOLON
    (34) alter -> ALTER LP ID . COMMA ID RP SEMICOLON

    COMMA           shift and go to state 120


state 86

    (35) not -> NOT LP ID . RP SEMICOLON

    RP              shift and go to state 121


state 87

    (37) print -> PRINT LP prints . RP SEMICOLON
    (39) prints -> prints . printexpr
    (40) printexpr -> . STRING
    (41) printexpr -> . ID

    RP              shift and go to state 122
    STRING          shift and go to state 89
    ID              shift and go to state 90

    printexpr                      shift and go to state 123

state 88

    (38) prints -> printexpr .

    RP              reduce using rule 38 (prints -> printexpr .)
    STRING          reduce using rule 38 (prints -> printexpr .)
    ID              reduce using rule 38 (prints -> printexpr .)


state 89

    (40) printexpr -> STRING .

    RP              reduce using rule 40 (printexpr -> STRING .)
    STRING          reduce using rule 40 (printexpr -> STRING .)
    ID              reduce using rule 40 (printexpr -> STRING .)


state 90

    (41) printexpr -> ID .

    RP              reduce using rule 41 (printexpr -> ID .)
    STRING          reduce using rule 41 (printexpr -> ID .)
    ID              reduce using rule 41 (printexpr -> ID .)


state 91

    (42) iterative -> WHILE condicion LP . instrucciones RP SEMICOLON
    (15) instrucciones -> . instruccion instrucciones
    (16) instrucciones -> . instruccion
    (17) instruccion -> . def
    (18) instruccion -> . call
    (19) instruccion -> . alter
    (20) instruccion -> . not
    (21) instruccion -> . print
    (22) instruccion -> . iterative
    (23) instruccion -> . case
    (24) instruccion -> . mover
    (25) instruccion -> . aleatorio
    (26) instruccion -> . istrue
    (27) instruccion -> . repeat
    (28) instruccion -> . change
    (29) instruccion -> . comment
    (30) def -> . DEF LP ID COMMA TYPE COMMA value RP SEMICOLON
    (31) def -> . DEF LP ID COMMA TYPE RP SEMICOLON
    (32) call -> . CALL LP ID RP SEMICOLON
    (33) alter -> . ALTER LP ID COMMA INTEGER RP SEMICOLON
    (34) alter -> . ALTER LP ID COMMA ID RP SEMICOLON
    (35) not -> . NOT LP ID RP SEMICOLON
    (37) print -> . PRINT LP prints RP SEMICOLON
    (42) iterative -> . WHILE condicion LP instrucciones RP SEMICOLON
    (43) iterative -> . UNTIL LP instrucciones RP condicion SEMICOLON
    (44) case -> . CASE funciones SEMICOLON
    (45) case -> . CASE ID funciones SEMICOLON
    (46) mover -> . MOVER LP DIR RP SEMICOLON
    (47) aleatorio -> . ALEATORIO LP RP SEMICOLON
    (36) istrue -> . ISTRUE LP ID RP SEMICOLON
    (48) repeat -> . REPEAT LP instrucciones RP SEMICOLON
    (68) change -> . ID LP value RP SEMICOLON
    (77) comment -> . COMMENT

    DEF             shift and go to state 36
    CALL            shift and go to state 38
    ALTER           shift and go to state 39
    NOT             shift and go to state 40
    PRINT           shift and go to state 41
    WHILE           shift and go to state 42
    UNTIL           shift and go to state 43
    CASE            shift and go to state 44
    MOVER           shift and go to state 45
    ALEATORIO       shift and go to state 46
    ISTRUE          shift and go to state 47
    REPEAT          shift and go to state 48
    ID              shift and go to state 37
    COMMENT         shift and go to state 3

    instrucciones                  shift and go to state 124
    instruccion                    shift and go to state 22
    def                            shift and go to state 23
    call                           shift and go to state 24
    alter                          shift and go to state 25
    not                            shift and go to state 26
    print                          shift and go to state 27
    iterative                      shift and go to state 28
    case                           shift and go to state 29
    mover                          shift and go to state 30
    aleatorio                      shift and go to state 31
    istrue                         shift and go to state 32
    repeat                         shift and go to state 33
    change                         shift and go to state 34
    comment                        shift and go to state 35

state 92

    (76) factor -> LP expression . RP
    (69) expression -> expression . PLUS term
    (70) expression -> expression . MINUS term

    RP              shift and go to state 125
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101


state 93

    (75) factor -> INTEGER .

    STAR            reduce using rule 75 (factor -> INTEGER .)
    SLASH           reduce using rule 75 (factor -> INTEGER .)
    RP              reduce using rule 75 (factor -> INTEGER .)
    PLUS            reduce using rule 75 (factor -> INTEGER .)
    MINUS           reduce using rule 75 (factor -> INTEGER .)
    GT              reduce using rule 75 (factor -> INTEGER .)
    LT              reduce using rule 75 (factor -> INTEGER .)
    EQUAL           reduce using rule 75 (factor -> INTEGER .)
    DIF             reduce using rule 75 (factor -> INTEGER .)
    GTE             reduce using rule 75 (factor -> INTEGER .)
    LTE             reduce using rule 75 (factor -> INTEGER .)
    LP              reduce using rule 75 (factor -> INTEGER .)
    SEMICOLON       reduce using rule 75 (factor -> INTEGER .)


state 94

    (59) condicion -> oper GT . oper
    (66) oper -> . value
    (67) oper -> . expression
    (49) value -> . INTEGER
    (50) value -> . BOOL
    (69) expression -> . expression PLUS term
    (70) expression -> . expression MINUS term
    (71) expression -> . term
    (72) term -> . term STAR factor
    (73) term -> . term SLASH factor
    (74) term -> . factor
    (75) factor -> . INTEGER
    (76) factor -> . LP expression RP

    INTEGER         shift and go to state 65
    BOOL            shift and go to state 66
    LP              shift and go to state 60

    oper                           shift and go to state 126
    value                          shift and go to state 63
    expression                     shift and go to state 64
    term                           shift and go to state 67
    factor                         shift and go to state 68

state 95

    (60) condicion -> oper LT . oper
    (66) oper -> . value
    (67) oper -> . expression
    (49) value -> . INTEGER
    (50) value -> . BOOL
    (69) expression -> . expression PLUS term
    (70) expression -> . expression MINUS term
    (71) expression -> . term
    (72) term -> . term STAR factor
    (73) term -> . term SLASH factor
    (74) term -> . factor
    (75) factor -> . INTEGER
    (76) factor -> . LP expression RP

    INTEGER         shift and go to state 65
    BOOL            shift and go to state 66
    LP              shift and go to state 60

    oper                           shift and go to state 127
    value                          shift and go to state 63
    expression                     shift and go to state 64
    term                           shift and go to state 67
    factor                         shift and go to state 68

state 96

    (61) condicion -> oper EQUAL . oper
    (66) oper -> . value
    (67) oper -> . expression
    (49) value -> . INTEGER
    (50) value -> . BOOL
    (69) expression -> . expression PLUS term
    (70) expression -> . expression MINUS term
    (71) expression -> . term
    (72) term -> . term STAR factor
    (73) term -> . term SLASH factor
    (74) term -> . factor
    (75) factor -> . INTEGER
    (76) factor -> . LP expression RP

    INTEGER         shift and go to state 65
    BOOL            shift and go to state 66
    LP              shift and go to state 60

    oper                           shift and go to state 128
    value                          shift and go to state 63
    expression                     shift and go to state 64
    term                           shift and go to state 67
    factor                         shift and go to state 68

state 97

    (62) condicion -> oper DIF . oper
    (66) oper -> . value
    (67) oper -> . expression
    (49) value -> . INTEGER
    (50) value -> . BOOL
    (69) expression -> . expression PLUS term
    (70) expression -> . expression MINUS term
    (71) expression -> . term
    (72) term -> . term STAR factor
    (73) term -> . term SLASH factor
    (74) term -> . factor
    (75) factor -> . INTEGER
    (76) factor -> . LP expression RP

    INTEGER         shift and go to state 65
    BOOL            shift and go to state 66
    LP              shift and go to state 60

    oper                           shift and go to state 129
    value                          shift and go to state 63
    expression                     shift and go to state 64
    term                           shift and go to state 67
    factor                         shift and go to state 68

state 98

    (63) condicion -> oper GTE . oper
    (66) oper -> . value
    (67) oper -> . expression
    (49) value -> . INTEGER
    (50) value -> . BOOL
    (69) expression -> . expression PLUS term
    (70) expression -> . expression MINUS term
    (71) expression -> . term
    (72) term -> . term STAR factor
    (73) term -> . term SLASH factor
    (74) term -> . factor
    (75) factor -> . INTEGER
    (76) factor -> . LP expression RP

    INTEGER         shift and go to state 65
    BOOL            shift and go to state 66
    LP              shift and go to state 60

    oper                           shift and go to state 130
    value                          shift and go to state 63
    expression                     shift and go to state 64
    term                           shift and go to state 67
    factor                         shift and go to state 68

state 99

    (64) condicion -> oper LTE . oper
    (66) oper -> . value
    (67) oper -> . expression
    (49) value -> . INTEGER
    (50) value -> . BOOL
    (69) expression -> . expression PLUS term
    (70) expression -> . expression MINUS term
    (71) expression -> . term
    (72) term -> . term STAR factor
    (73) term -> . term SLASH factor
    (74) term -> . factor
    (75) factor -> . INTEGER
    (76) factor -> . LP expression RP

    INTEGER         shift and go to state 65
    BOOL            shift and go to state 66
    LP              shift and go to state 60

    oper                           shift and go to state 131
    value                          shift and go to state 63
    expression                     shift and go to state 64
    term                           shift and go to state 67
    factor                         shift and go to state 68

state 100

    (69) expression -> expression PLUS . term
    (72) term -> . term STAR factor
    (73) term -> . term SLASH factor
    (74) term -> . factor
    (75) factor -> . INTEGER
    (76) factor -> . LP expression RP

    INTEGER         shift and go to state 93
    LP              shift and go to state 60

    term                           shift and go to state 132
    factor                         shift and go to state 68

state 101

    (70) expression -> expression MINUS . term
    (72) term -> . term STAR factor
    (73) term -> . term SLASH factor
    (74) term -> . factor
    (75) factor -> . INTEGER
    (76) factor -> . LP expression RP

    INTEGER         shift and go to state 93
    LP              shift and go to state 60

    term                           shift and go to state 133
    factor                         shift and go to state 68

state 102

    (72) term -> term STAR . factor
    (75) factor -> . INTEGER
    (76) factor -> . LP expression RP

    INTEGER         shift and go to state 93
    LP              shift and go to state 60

    factor                         shift and go to state 134

state 103

    (73) term -> term SLASH . factor
    (75) factor -> . INTEGER
    (76) factor -> . LP expression RP

    INTEGER         shift and go to state 93
    LP              shift and go to state 60

    factor                         shift and go to state 135

state 104

    (43) iterative -> UNTIL LP instrucciones . RP condicion SEMICOLON

    RP              shift and go to state 136


state 105

    (44) case -> CASE funciones SEMICOLON .

    DEF             reduce using rule 44 (case -> CASE funciones SEMICOLON .)
    CALL            reduce using rule 44 (case -> CASE funciones SEMICOLON .)
    ALTER           reduce using rule 44 (case -> CASE funciones SEMICOLON .)
    NOT             reduce using rule 44 (case -> CASE funciones SEMICOLON .)
    PRINT           reduce using rule 44 (case -> CASE funciones SEMICOLON .)
    WHILE           reduce using rule 44 (case -> CASE funciones SEMICOLON .)
    UNTIL           reduce using rule 44 (case -> CASE funciones SEMICOLON .)
    CASE            reduce using rule 44 (case -> CASE funciones SEMICOLON .)
    MOVER           reduce using rule 44 (case -> CASE funciones SEMICOLON .)
    ALEATORIO       reduce using rule 44 (case -> CASE funciones SEMICOLON .)
    ISTRUE          reduce using rule 44 (case -> CASE funciones SEMICOLON .)
    REPEAT          reduce using rule 44 (case -> CASE funciones SEMICOLON .)
    ID              reduce using rule 44 (case -> CASE funciones SEMICOLON .)
    COMMENT         reduce using rule 44 (case -> CASE funciones SEMICOLON .)
    RP              reduce using rule 44 (case -> CASE funciones SEMICOLON .)


state 106

    (52) funciones -> funciones funcion .

    SEMICOLON       reduce using rule 52 (funciones -> funciones funcion .)
    WHEN            reduce using rule 52 (funciones -> funciones funcion .)


state 107

    (45) case -> CASE ID funciones . SEMICOLON
    (52) funciones -> funciones . funcion
    (53) funcion -> . when then
    (54) funcion -> . when then else
    (55) when -> . WHEN LP condicion RP
    (56) when -> . WHEN value

    SEMICOLON       shift and go to state 137
    WHEN            shift and go to state 74

    funcion                        shift and go to state 106
    when                           shift and go to state 73

state 108

    (53) funcion -> when then .
    (54) funcion -> when then . else
    (58) else -> . ELSE LP instrucciones RP

    SEMICOLON       reduce using rule 53 (funcion -> when then .)
    WHEN            reduce using rule 53 (funcion -> when then .)
    ELSE            shift and go to state 139

    else                           shift and go to state 138

state 109

    (57) then -> THEN . LP instrucciones RP

    LP              shift and go to state 140


state 110

    (55) when -> WHEN LP . condicion RP
    (59) condicion -> . oper GT oper
    (60) condicion -> . oper LT oper
    (61) condicion -> . oper EQUAL oper
    (62) condicion -> . oper DIF oper
    (63) condicion -> . oper GTE oper
    (64) condicion -> . oper LTE oper
    (65) condicion -> . istrue
    (66) oper -> . value
    (67) oper -> . expression
    (36) istrue -> . ISTRUE LP ID RP SEMICOLON
    (49) value -> . INTEGER
    (50) value -> . BOOL
    (69) expression -> . expression PLUS term
    (70) expression -> . expression MINUS term
    (71) expression -> . term
    (72) term -> . term STAR factor
    (73) term -> . term SLASH factor
    (74) term -> . factor
    (75) factor -> . INTEGER
    (76) factor -> . LP expression RP

    ISTRUE          shift and go to state 47
    INTEGER         shift and go to state 65
    BOOL            shift and go to state 66
    LP              shift and go to state 60

    condicion                      shift and go to state 141
    oper                           shift and go to state 61
    istrue                         shift and go to state 62
    value                          shift and go to state 63
    expression                     shift and go to state 64
    term                           shift and go to state 67
    factor                         shift and go to state 68

state 111

    (56) when -> WHEN value .

    THEN            reduce using rule 56 (when -> WHEN value .)


state 112

    (46) mover -> MOVER LP DIR . RP SEMICOLON

    RP              shift and go to state 142


state 113

    (47) aleatorio -> ALEATORIO LP RP . SEMICOLON

    SEMICOLON       shift and go to state 143


state 114

    (36) istrue -> ISTRUE LP ID . RP SEMICOLON

    RP              shift and go to state 144


state 115

    (48) repeat -> REPEAT LP instrucciones . RP SEMICOLON

    RP              shift and go to state 145


state 116

    (12) proc -> PROC ID LP instrucciones RP . SEMICOLON

    SEMICOLON       shift and go to state 146


state 117

    (30) def -> DEF LP ID COMMA . TYPE COMMA value RP SEMICOLON
    (31) def -> DEF LP ID COMMA . TYPE RP SEMICOLON

    TYPE            shift and go to state 147


state 118

    (68) change -> ID LP value RP . SEMICOLON

    SEMICOLON       shift and go to state 148


state 119

    (32) call -> CALL LP ID RP . SEMICOLON

    SEMICOLON       shift and go to state 149


state 120

    (33) alter -> ALTER LP ID COMMA . INTEGER RP SEMICOLON
    (34) alter -> ALTER LP ID COMMA . ID RP SEMICOLON

    INTEGER         shift and go to state 151
    ID              shift and go to state 150


state 121

    (35) not -> NOT LP ID RP . SEMICOLON

    SEMICOLON       shift and go to state 152


state 122

    (37) print -> PRINT LP prints RP . SEMICOLON

    SEMICOLON       shift and go to state 153


state 123

    (39) prints -> prints printexpr .

    RP              reduce using rule 39 (prints -> prints printexpr .)
    STRING          reduce using rule 39 (prints -> prints printexpr .)
    ID              reduce using rule 39 (prints -> prints printexpr .)


state 124

    (42) iterative -> WHILE condicion LP instrucciones . RP SEMICOLON

    RP              shift and go to state 154


state 125

    (76) factor -> LP expression RP .

    STAR            reduce using rule 76 (factor -> LP expression RP .)
    SLASH           reduce using rule 76 (factor -> LP expression RP .)
    PLUS            reduce using rule 76 (factor -> LP expression RP .)
    MINUS           reduce using rule 76 (factor -> LP expression RP .)
    GT              reduce using rule 76 (factor -> LP expression RP .)
    LT              reduce using rule 76 (factor -> LP expression RP .)
    EQUAL           reduce using rule 76 (factor -> LP expression RP .)
    DIF             reduce using rule 76 (factor -> LP expression RP .)
    GTE             reduce using rule 76 (factor -> LP expression RP .)
    LTE             reduce using rule 76 (factor -> LP expression RP .)
    RP              reduce using rule 76 (factor -> LP expression RP .)
    LP              reduce using rule 76 (factor -> LP expression RP .)
    SEMICOLON       reduce using rule 76 (factor -> LP expression RP .)


state 126

    (59) condicion -> oper GT oper .

    LP              reduce using rule 59 (condicion -> oper GT oper .)
    RP              reduce using rule 59 (condicion -> oper GT oper .)
    SEMICOLON       reduce using rule 59 (condicion -> oper GT oper .)


state 127

    (60) condicion -> oper LT oper .

    LP              reduce using rule 60 (condicion -> oper LT oper .)
    RP              reduce using rule 60 (condicion -> oper LT oper .)
    SEMICOLON       reduce using rule 60 (condicion -> oper LT oper .)


state 128

    (61) condicion -> oper EQUAL oper .

    LP              reduce using rule 61 (condicion -> oper EQUAL oper .)
    RP              reduce using rule 61 (condicion -> oper EQUAL oper .)
    SEMICOLON       reduce using rule 61 (condicion -> oper EQUAL oper .)


state 129

    (62) condicion -> oper DIF oper .

    LP              reduce using rule 62 (condicion -> oper DIF oper .)
    RP              reduce using rule 62 (condicion -> oper DIF oper .)
    SEMICOLON       reduce using rule 62 (condicion -> oper DIF oper .)


state 130

    (63) condicion -> oper GTE oper .

    LP              reduce using rule 63 (condicion -> oper GTE oper .)
    RP              reduce using rule 63 (condicion -> oper GTE oper .)
    SEMICOLON       reduce using rule 63 (condicion -> oper GTE oper .)


state 131

    (64) condicion -> oper LTE oper .

    LP              reduce using rule 64 (condicion -> oper LTE oper .)
    RP              reduce using rule 64 (condicion -> oper LTE oper .)
    SEMICOLON       reduce using rule 64 (condicion -> oper LTE oper .)


state 132

    (69) expression -> expression PLUS term .
    (72) term -> term . STAR factor
    (73) term -> term . SLASH factor

    PLUS            reduce using rule 69 (expression -> expression PLUS term .)
    MINUS           reduce using rule 69 (expression -> expression PLUS term .)
    GT              reduce using rule 69 (expression -> expression PLUS term .)
    LT              reduce using rule 69 (expression -> expression PLUS term .)
    EQUAL           reduce using rule 69 (expression -> expression PLUS term .)
    DIF             reduce using rule 69 (expression -> expression PLUS term .)
    GTE             reduce using rule 69 (expression -> expression PLUS term .)
    LTE             reduce using rule 69 (expression -> expression PLUS term .)
    RP              reduce using rule 69 (expression -> expression PLUS term .)
    LP              reduce using rule 69 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 69 (expression -> expression PLUS term .)
    STAR            shift and go to state 102
    SLASH           shift and go to state 103


state 133

    (70) expression -> expression MINUS term .
    (72) term -> term . STAR factor
    (73) term -> term . SLASH factor

    PLUS            reduce using rule 70 (expression -> expression MINUS term .)
    MINUS           reduce using rule 70 (expression -> expression MINUS term .)
    GT              reduce using rule 70 (expression -> expression MINUS term .)
    LT              reduce using rule 70 (expression -> expression MINUS term .)
    EQUAL           reduce using rule 70 (expression -> expression MINUS term .)
    DIF             reduce using rule 70 (expression -> expression MINUS term .)
    GTE             reduce using rule 70 (expression -> expression MINUS term .)
    LTE             reduce using rule 70 (expression -> expression MINUS term .)
    RP              reduce using rule 70 (expression -> expression MINUS term .)
    LP              reduce using rule 70 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 70 (expression -> expression MINUS term .)
    STAR            shift and go to state 102
    SLASH           shift and go to state 103


state 134

    (72) term -> term STAR factor .

    STAR            reduce using rule 72 (term -> term STAR factor .)
    SLASH           reduce using rule 72 (term -> term STAR factor .)
    PLUS            reduce using rule 72 (term -> term STAR factor .)
    MINUS           reduce using rule 72 (term -> term STAR factor .)
    GT              reduce using rule 72 (term -> term STAR factor .)
    LT              reduce using rule 72 (term -> term STAR factor .)
    EQUAL           reduce using rule 72 (term -> term STAR factor .)
    DIF             reduce using rule 72 (term -> term STAR factor .)
    GTE             reduce using rule 72 (term -> term STAR factor .)
    LTE             reduce using rule 72 (term -> term STAR factor .)
    RP              reduce using rule 72 (term -> term STAR factor .)
    LP              reduce using rule 72 (term -> term STAR factor .)
    SEMICOLON       reduce using rule 72 (term -> term STAR factor .)


state 135

    (73) term -> term SLASH factor .

    STAR            reduce using rule 73 (term -> term SLASH factor .)
    SLASH           reduce using rule 73 (term -> term SLASH factor .)
    PLUS            reduce using rule 73 (term -> term SLASH factor .)
    MINUS           reduce using rule 73 (term -> term SLASH factor .)
    GT              reduce using rule 73 (term -> term SLASH factor .)
    LT              reduce using rule 73 (term -> term SLASH factor .)
    EQUAL           reduce using rule 73 (term -> term SLASH factor .)
    DIF             reduce using rule 73 (term -> term SLASH factor .)
    GTE             reduce using rule 73 (term -> term SLASH factor .)
    LTE             reduce using rule 73 (term -> term SLASH factor .)
    RP              reduce using rule 73 (term -> term SLASH factor .)
    LP              reduce using rule 73 (term -> term SLASH factor .)
    SEMICOLON       reduce using rule 73 (term -> term SLASH factor .)


state 136

    (43) iterative -> UNTIL LP instrucciones RP . condicion SEMICOLON
    (59) condicion -> . oper GT oper
    (60) condicion -> . oper LT oper
    (61) condicion -> . oper EQUAL oper
    (62) condicion -> . oper DIF oper
    (63) condicion -> . oper GTE oper
    (64) condicion -> . oper LTE oper
    (65) condicion -> . istrue
    (66) oper -> . value
    (67) oper -> . expression
    (36) istrue -> . ISTRUE LP ID RP SEMICOLON
    (49) value -> . INTEGER
    (50) value -> . BOOL
    (69) expression -> . expression PLUS term
    (70) expression -> . expression MINUS term
    (71) expression -> . term
    (72) term -> . term STAR factor
    (73) term -> . term SLASH factor
    (74) term -> . factor
    (75) factor -> . INTEGER
    (76) factor -> . LP expression RP

    ISTRUE          shift and go to state 47
    INTEGER         shift and go to state 65
    BOOL            shift and go to state 66
    LP              shift and go to state 60

    condicion                      shift and go to state 155
    oper                           shift and go to state 61
    istrue                         shift and go to state 62
    value                          shift and go to state 63
    expression                     shift and go to state 64
    term                           shift and go to state 67
    factor                         shift and go to state 68

state 137

    (45) case -> CASE ID funciones SEMICOLON .

    DEF             reduce using rule 45 (case -> CASE ID funciones SEMICOLON .)
    CALL            reduce using rule 45 (case -> CASE ID funciones SEMICOLON .)
    ALTER           reduce using rule 45 (case -> CASE ID funciones SEMICOLON .)
    NOT             reduce using rule 45 (case -> CASE ID funciones SEMICOLON .)
    PRINT           reduce using rule 45 (case -> CASE ID funciones SEMICOLON .)
    WHILE           reduce using rule 45 (case -> CASE ID funciones SEMICOLON .)
    UNTIL           reduce using rule 45 (case -> CASE ID funciones SEMICOLON .)
    CASE            reduce using rule 45 (case -> CASE ID funciones SEMICOLON .)
    MOVER           reduce using rule 45 (case -> CASE ID funciones SEMICOLON .)
    ALEATORIO       reduce using rule 45 (case -> CASE ID funciones SEMICOLON .)
    ISTRUE          reduce using rule 45 (case -> CASE ID funciones SEMICOLON .)
    REPEAT          reduce using rule 45 (case -> CASE ID funciones SEMICOLON .)
    ID              reduce using rule 45 (case -> CASE ID funciones SEMICOLON .)
    COMMENT         reduce using rule 45 (case -> CASE ID funciones SEMICOLON .)
    RP              reduce using rule 45 (case -> CASE ID funciones SEMICOLON .)


state 138

    (54) funcion -> when then else .

    SEMICOLON       reduce using rule 54 (funcion -> when then else .)
    WHEN            reduce using rule 54 (funcion -> when then else .)


state 139

    (58) else -> ELSE . LP instrucciones RP

    LP              shift and go to state 156


state 140

    (57) then -> THEN LP . instrucciones RP
    (15) instrucciones -> . instruccion instrucciones
    (16) instrucciones -> . instruccion
    (17) instruccion -> . def
    (18) instruccion -> . call
    (19) instruccion -> . alter
    (20) instruccion -> . not
    (21) instruccion -> . print
    (22) instruccion -> . iterative
    (23) instruccion -> . case
    (24) instruccion -> . mover
    (25) instruccion -> . aleatorio
    (26) instruccion -> . istrue
    (27) instruccion -> . repeat
    (28) instruccion -> . change
    (29) instruccion -> . comment
    (30) def -> . DEF LP ID COMMA TYPE COMMA value RP SEMICOLON
    (31) def -> . DEF LP ID COMMA TYPE RP SEMICOLON
    (32) call -> . CALL LP ID RP SEMICOLON
    (33) alter -> . ALTER LP ID COMMA INTEGER RP SEMICOLON
    (34) alter -> . ALTER LP ID COMMA ID RP SEMICOLON
    (35) not -> . NOT LP ID RP SEMICOLON
    (37) print -> . PRINT LP prints RP SEMICOLON
    (42) iterative -> . WHILE condicion LP instrucciones RP SEMICOLON
    (43) iterative -> . UNTIL LP instrucciones RP condicion SEMICOLON
    (44) case -> . CASE funciones SEMICOLON
    (45) case -> . CASE ID funciones SEMICOLON
    (46) mover -> . MOVER LP DIR RP SEMICOLON
    (47) aleatorio -> . ALEATORIO LP RP SEMICOLON
    (36) istrue -> . ISTRUE LP ID RP SEMICOLON
    (48) repeat -> . REPEAT LP instrucciones RP SEMICOLON
    (68) change -> . ID LP value RP SEMICOLON
    (77) comment -> . COMMENT

    DEF             shift and go to state 36
    CALL            shift and go to state 38
    ALTER           shift and go to state 39
    NOT             shift and go to state 40
    PRINT           shift and go to state 41
    WHILE           shift and go to state 42
    UNTIL           shift and go to state 43
    CASE            shift and go to state 44
    MOVER           shift and go to state 45
    ALEATORIO       shift and go to state 46
    ISTRUE          shift and go to state 47
    REPEAT          shift and go to state 48
    ID              shift and go to state 37
    COMMENT         shift and go to state 3

    instrucciones                  shift and go to state 157
    instruccion                    shift and go to state 22
    def                            shift and go to state 23
    call                           shift and go to state 24
    alter                          shift and go to state 25
    not                            shift and go to state 26
    print                          shift and go to state 27
    iterative                      shift and go to state 28
    case                           shift and go to state 29
    mover                          shift and go to state 30
    aleatorio                      shift and go to state 31
    istrue                         shift and go to state 32
    repeat                         shift and go to state 33
    change                         shift and go to state 34
    comment                        shift and go to state 35

state 141

    (55) when -> WHEN LP condicion . RP

    RP              shift and go to state 158


state 142

    (46) mover -> MOVER LP DIR RP . SEMICOLON

    SEMICOLON       shift and go to state 159


state 143

    (47) aleatorio -> ALEATORIO LP RP SEMICOLON .

    DEF             reduce using rule 47 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    CALL            reduce using rule 47 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    ALTER           reduce using rule 47 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    NOT             reduce using rule 47 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    PRINT           reduce using rule 47 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    WHILE           reduce using rule 47 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    UNTIL           reduce using rule 47 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    CASE            reduce using rule 47 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    MOVER           reduce using rule 47 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    ALEATORIO       reduce using rule 47 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    ISTRUE          reduce using rule 47 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    REPEAT          reduce using rule 47 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    ID              reduce using rule 47 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    COMMENT         reduce using rule 47 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    RP              reduce using rule 47 (aleatorio -> ALEATORIO LP RP SEMICOLON .)


state 144

    (36) istrue -> ISTRUE LP ID RP . SEMICOLON

    SEMICOLON       shift and go to state 160


state 145

    (48) repeat -> REPEAT LP instrucciones RP . SEMICOLON

    SEMICOLON       shift and go to state 161


state 146

    (12) proc -> PROC ID LP instrucciones RP SEMICOLON .

    PROC            reduce using rule 12 (proc -> PROC ID LP instrucciones RP SEMICOLON .)
    MAIN            reduce using rule 12 (proc -> PROC ID LP instrucciones RP SEMICOLON .)
    COMMENT         reduce using rule 12 (proc -> PROC ID LP instrucciones RP SEMICOLON .)
    $end            reduce using rule 12 (proc -> PROC ID LP instrucciones RP SEMICOLON .)


state 147

    (30) def -> DEF LP ID COMMA TYPE . COMMA value RP SEMICOLON
    (31) def -> DEF LP ID COMMA TYPE . RP SEMICOLON

    COMMA           shift and go to state 162
    RP              shift and go to state 163


state 148

    (68) change -> ID LP value RP SEMICOLON .

    DEF             reduce using rule 68 (change -> ID LP value RP SEMICOLON .)
    CALL            reduce using rule 68 (change -> ID LP value RP SEMICOLON .)
    ALTER           reduce using rule 68 (change -> ID LP value RP SEMICOLON .)
    NOT             reduce using rule 68 (change -> ID LP value RP SEMICOLON .)
    PRINT           reduce using rule 68 (change -> ID LP value RP SEMICOLON .)
    WHILE           reduce using rule 68 (change -> ID LP value RP SEMICOLON .)
    UNTIL           reduce using rule 68 (change -> ID LP value RP SEMICOLON .)
    CASE            reduce using rule 68 (change -> ID LP value RP SEMICOLON .)
    MOVER           reduce using rule 68 (change -> ID LP value RP SEMICOLON .)
    ALEATORIO       reduce using rule 68 (change -> ID LP value RP SEMICOLON .)
    ISTRUE          reduce using rule 68 (change -> ID LP value RP SEMICOLON .)
    REPEAT          reduce using rule 68 (change -> ID LP value RP SEMICOLON .)
    ID              reduce using rule 68 (change -> ID LP value RP SEMICOLON .)
    COMMENT         reduce using rule 68 (change -> ID LP value RP SEMICOLON .)
    RP              reduce using rule 68 (change -> ID LP value RP SEMICOLON .)


state 149

    (32) call -> CALL LP ID RP SEMICOLON .

    DEF             reduce using rule 32 (call -> CALL LP ID RP SEMICOLON .)
    CALL            reduce using rule 32 (call -> CALL LP ID RP SEMICOLON .)
    ALTER           reduce using rule 32 (call -> CALL LP ID RP SEMICOLON .)
    NOT             reduce using rule 32 (call -> CALL LP ID RP SEMICOLON .)
    PRINT           reduce using rule 32 (call -> CALL LP ID RP SEMICOLON .)
    WHILE           reduce using rule 32 (call -> CALL LP ID RP SEMICOLON .)
    UNTIL           reduce using rule 32 (call -> CALL LP ID RP SEMICOLON .)
    CASE            reduce using rule 32 (call -> CALL LP ID RP SEMICOLON .)
    MOVER           reduce using rule 32 (call -> CALL LP ID RP SEMICOLON .)
    ALEATORIO       reduce using rule 32 (call -> CALL LP ID RP SEMICOLON .)
    ISTRUE          reduce using rule 32 (call -> CALL LP ID RP SEMICOLON .)
    REPEAT          reduce using rule 32 (call -> CALL LP ID RP SEMICOLON .)
    ID              reduce using rule 32 (call -> CALL LP ID RP SEMICOLON .)
    COMMENT         reduce using rule 32 (call -> CALL LP ID RP SEMICOLON .)
    RP              reduce using rule 32 (call -> CALL LP ID RP SEMICOLON .)


state 150

    (34) alter -> ALTER LP ID COMMA ID . RP SEMICOLON

    RP              shift and go to state 164


state 151

    (33) alter -> ALTER LP ID COMMA INTEGER . RP SEMICOLON

    RP              shift and go to state 165


state 152

    (35) not -> NOT LP ID RP SEMICOLON .

    DEF             reduce using rule 35 (not -> NOT LP ID RP SEMICOLON .)
    CALL            reduce using rule 35 (not -> NOT LP ID RP SEMICOLON .)
    ALTER           reduce using rule 35 (not -> NOT LP ID RP SEMICOLON .)
    NOT             reduce using rule 35 (not -> NOT LP ID RP SEMICOLON .)
    PRINT           reduce using rule 35 (not -> NOT LP ID RP SEMICOLON .)
    WHILE           reduce using rule 35 (not -> NOT LP ID RP SEMICOLON .)
    UNTIL           reduce using rule 35 (not -> NOT LP ID RP SEMICOLON .)
    CASE            reduce using rule 35 (not -> NOT LP ID RP SEMICOLON .)
    MOVER           reduce using rule 35 (not -> NOT LP ID RP SEMICOLON .)
    ALEATORIO       reduce using rule 35 (not -> NOT LP ID RP SEMICOLON .)
    ISTRUE          reduce using rule 35 (not -> NOT LP ID RP SEMICOLON .)
    REPEAT          reduce using rule 35 (not -> NOT LP ID RP SEMICOLON .)
    ID              reduce using rule 35 (not -> NOT LP ID RP SEMICOLON .)
    COMMENT         reduce using rule 35 (not -> NOT LP ID RP SEMICOLON .)
    RP              reduce using rule 35 (not -> NOT LP ID RP SEMICOLON .)


state 153

    (37) print -> PRINT LP prints RP SEMICOLON .

    DEF             reduce using rule 37 (print -> PRINT LP prints RP SEMICOLON .)
    CALL            reduce using rule 37 (print -> PRINT LP prints RP SEMICOLON .)
    ALTER           reduce using rule 37 (print -> PRINT LP prints RP SEMICOLON .)
    NOT             reduce using rule 37 (print -> PRINT LP prints RP SEMICOLON .)
    PRINT           reduce using rule 37 (print -> PRINT LP prints RP SEMICOLON .)
    WHILE           reduce using rule 37 (print -> PRINT LP prints RP SEMICOLON .)
    UNTIL           reduce using rule 37 (print -> PRINT LP prints RP SEMICOLON .)
    CASE            reduce using rule 37 (print -> PRINT LP prints RP SEMICOLON .)
    MOVER           reduce using rule 37 (print -> PRINT LP prints RP SEMICOLON .)
    ALEATORIO       reduce using rule 37 (print -> PRINT LP prints RP SEMICOLON .)
    ISTRUE          reduce using rule 37 (print -> PRINT LP prints RP SEMICOLON .)
    REPEAT          reduce using rule 37 (print -> PRINT LP prints RP SEMICOLON .)
    ID              reduce using rule 37 (print -> PRINT LP prints RP SEMICOLON .)
    COMMENT         reduce using rule 37 (print -> PRINT LP prints RP SEMICOLON .)
    RP              reduce using rule 37 (print -> PRINT LP prints RP SEMICOLON .)


state 154

    (42) iterative -> WHILE condicion LP instrucciones RP . SEMICOLON

    SEMICOLON       shift and go to state 166


state 155

    (43) iterative -> UNTIL LP instrucciones RP condicion . SEMICOLON

    SEMICOLON       shift and go to state 167


state 156

    (58) else -> ELSE LP . instrucciones RP
    (15) instrucciones -> . instruccion instrucciones
    (16) instrucciones -> . instruccion
    (17) instruccion -> . def
    (18) instruccion -> . call
    (19) instruccion -> . alter
    (20) instruccion -> . not
    (21) instruccion -> . print
    (22) instruccion -> . iterative
    (23) instruccion -> . case
    (24) instruccion -> . mover
    (25) instruccion -> . aleatorio
    (26) instruccion -> . istrue
    (27) instruccion -> . repeat
    (28) instruccion -> . change
    (29) instruccion -> . comment
    (30) def -> . DEF LP ID COMMA TYPE COMMA value RP SEMICOLON
    (31) def -> . DEF LP ID COMMA TYPE RP SEMICOLON
    (32) call -> . CALL LP ID RP SEMICOLON
    (33) alter -> . ALTER LP ID COMMA INTEGER RP SEMICOLON
    (34) alter -> . ALTER LP ID COMMA ID RP SEMICOLON
    (35) not -> . NOT LP ID RP SEMICOLON
    (37) print -> . PRINT LP prints RP SEMICOLON
    (42) iterative -> . WHILE condicion LP instrucciones RP SEMICOLON
    (43) iterative -> . UNTIL LP instrucciones RP condicion SEMICOLON
    (44) case -> . CASE funciones SEMICOLON
    (45) case -> . CASE ID funciones SEMICOLON
    (46) mover -> . MOVER LP DIR RP SEMICOLON
    (47) aleatorio -> . ALEATORIO LP RP SEMICOLON
    (36) istrue -> . ISTRUE LP ID RP SEMICOLON
    (48) repeat -> . REPEAT LP instrucciones RP SEMICOLON
    (68) change -> . ID LP value RP SEMICOLON
    (77) comment -> . COMMENT

    DEF             shift and go to state 36
    CALL            shift and go to state 38
    ALTER           shift and go to state 39
    NOT             shift and go to state 40
    PRINT           shift and go to state 41
    WHILE           shift and go to state 42
    UNTIL           shift and go to state 43
    CASE            shift and go to state 44
    MOVER           shift and go to state 45
    ALEATORIO       shift and go to state 46
    ISTRUE          shift and go to state 47
    REPEAT          shift and go to state 48
    ID              shift and go to state 37
    COMMENT         shift and go to state 3

    instrucciones                  shift and go to state 168
    instruccion                    shift and go to state 22
    def                            shift and go to state 23
    call                           shift and go to state 24
    alter                          shift and go to state 25
    not                            shift and go to state 26
    print                          shift and go to state 27
    iterative                      shift and go to state 28
    case                           shift and go to state 29
    mover                          shift and go to state 30
    aleatorio                      shift and go to state 31
    istrue                         shift and go to state 32
    repeat                         shift and go to state 33
    change                         shift and go to state 34
    comment                        shift and go to state 35

state 157

    (57) then -> THEN LP instrucciones . RP

    RP              shift and go to state 169


state 158

    (55) when -> WHEN LP condicion RP .

    THEN            reduce using rule 55 (when -> WHEN LP condicion RP .)


state 159

    (46) mover -> MOVER LP DIR RP SEMICOLON .

    DEF             reduce using rule 46 (mover -> MOVER LP DIR RP SEMICOLON .)
    CALL            reduce using rule 46 (mover -> MOVER LP DIR RP SEMICOLON .)
    ALTER           reduce using rule 46 (mover -> MOVER LP DIR RP SEMICOLON .)
    NOT             reduce using rule 46 (mover -> MOVER LP DIR RP SEMICOLON .)
    PRINT           reduce using rule 46 (mover -> MOVER LP DIR RP SEMICOLON .)
    WHILE           reduce using rule 46 (mover -> MOVER LP DIR RP SEMICOLON .)
    UNTIL           reduce using rule 46 (mover -> MOVER LP DIR RP SEMICOLON .)
    CASE            reduce using rule 46 (mover -> MOVER LP DIR RP SEMICOLON .)
    MOVER           reduce using rule 46 (mover -> MOVER LP DIR RP SEMICOLON .)
    ALEATORIO       reduce using rule 46 (mover -> MOVER LP DIR RP SEMICOLON .)
    ISTRUE          reduce using rule 46 (mover -> MOVER LP DIR RP SEMICOLON .)
    REPEAT          reduce using rule 46 (mover -> MOVER LP DIR RP SEMICOLON .)
    ID              reduce using rule 46 (mover -> MOVER LP DIR RP SEMICOLON .)
    COMMENT         reduce using rule 46 (mover -> MOVER LP DIR RP SEMICOLON .)
    RP              reduce using rule 46 (mover -> MOVER LP DIR RP SEMICOLON .)


state 160

    (36) istrue -> ISTRUE LP ID RP SEMICOLON .

    DEF             reduce using rule 36 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    CALL            reduce using rule 36 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    ALTER           reduce using rule 36 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    NOT             reduce using rule 36 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    PRINT           reduce using rule 36 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    WHILE           reduce using rule 36 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    UNTIL           reduce using rule 36 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    CASE            reduce using rule 36 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    MOVER           reduce using rule 36 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    ALEATORIO       reduce using rule 36 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    ISTRUE          reduce using rule 36 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    REPEAT          reduce using rule 36 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    ID              reduce using rule 36 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    COMMENT         reduce using rule 36 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    RP              reduce using rule 36 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    LP              reduce using rule 36 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    SEMICOLON       reduce using rule 36 (istrue -> ISTRUE LP ID RP SEMICOLON .)


state 161

    (48) repeat -> REPEAT LP instrucciones RP SEMICOLON .

    DEF             reduce using rule 48 (repeat -> REPEAT LP instrucciones RP SEMICOLON .)
    CALL            reduce using rule 48 (repeat -> REPEAT LP instrucciones RP SEMICOLON .)
    ALTER           reduce using rule 48 (repeat -> REPEAT LP instrucciones RP SEMICOLON .)
    NOT             reduce using rule 48 (repeat -> REPEAT LP instrucciones RP SEMICOLON .)
    PRINT           reduce using rule 48 (repeat -> REPEAT LP instrucciones RP SEMICOLON .)
    WHILE           reduce using rule 48 (repeat -> REPEAT LP instrucciones RP SEMICOLON .)
    UNTIL           reduce using rule 48 (repeat -> REPEAT LP instrucciones RP SEMICOLON .)
    CASE            reduce using rule 48 (repeat -> REPEAT LP instrucciones RP SEMICOLON .)
    MOVER           reduce using rule 48 (repeat -> REPEAT LP instrucciones RP SEMICOLON .)
    ALEATORIO       reduce using rule 48 (repeat -> REPEAT LP instrucciones RP SEMICOLON .)
    ISTRUE          reduce using rule 48 (repeat -> REPEAT LP instrucciones RP SEMICOLON .)
    REPEAT          reduce using rule 48 (repeat -> REPEAT LP instrucciones RP SEMICOLON .)
    ID              reduce using rule 48 (repeat -> REPEAT LP instrucciones RP SEMICOLON .)
    COMMENT         reduce using rule 48 (repeat -> REPEAT LP instrucciones RP SEMICOLON .)
    RP              reduce using rule 48 (repeat -> REPEAT LP instrucciones RP SEMICOLON .)


state 162

    (30) def -> DEF LP ID COMMA TYPE COMMA . value RP SEMICOLON
    (49) value -> . INTEGER
    (50) value -> . BOOL

    INTEGER         shift and go to state 83
    BOOL            shift and go to state 66

    value                          shift and go to state 170

state 163

    (31) def -> DEF LP ID COMMA TYPE RP . SEMICOLON

    SEMICOLON       shift and go to state 171


state 164

    (34) alter -> ALTER LP ID COMMA ID RP . SEMICOLON

    SEMICOLON       shift and go to state 172


state 165

    (33) alter -> ALTER LP ID COMMA INTEGER RP . SEMICOLON

    SEMICOLON       shift and go to state 173


state 166

    (42) iterative -> WHILE condicion LP instrucciones RP SEMICOLON .

    DEF             reduce using rule 42 (iterative -> WHILE condicion LP instrucciones RP SEMICOLON .)
    CALL            reduce using rule 42 (iterative -> WHILE condicion LP instrucciones RP SEMICOLON .)
    ALTER           reduce using rule 42 (iterative -> WHILE condicion LP instrucciones RP SEMICOLON .)
    NOT             reduce using rule 42 (iterative -> WHILE condicion LP instrucciones RP SEMICOLON .)
    PRINT           reduce using rule 42 (iterative -> WHILE condicion LP instrucciones RP SEMICOLON .)
    WHILE           reduce using rule 42 (iterative -> WHILE condicion LP instrucciones RP SEMICOLON .)
    UNTIL           reduce using rule 42 (iterative -> WHILE condicion LP instrucciones RP SEMICOLON .)
    CASE            reduce using rule 42 (iterative -> WHILE condicion LP instrucciones RP SEMICOLON .)
    MOVER           reduce using rule 42 (iterative -> WHILE condicion LP instrucciones RP SEMICOLON .)
    ALEATORIO       reduce using rule 42 (iterative -> WHILE condicion LP instrucciones RP SEMICOLON .)
    ISTRUE          reduce using rule 42 (iterative -> WHILE condicion LP instrucciones RP SEMICOLON .)
    REPEAT          reduce using rule 42 (iterative -> WHILE condicion LP instrucciones RP SEMICOLON .)
    ID              reduce using rule 42 (iterative -> WHILE condicion LP instrucciones RP SEMICOLON .)
    COMMENT         reduce using rule 42 (iterative -> WHILE condicion LP instrucciones RP SEMICOLON .)
    RP              reduce using rule 42 (iterative -> WHILE condicion LP instrucciones RP SEMICOLON .)


state 167

    (43) iterative -> UNTIL LP instrucciones RP condicion SEMICOLON .

    DEF             reduce using rule 43 (iterative -> UNTIL LP instrucciones RP condicion SEMICOLON .)
    CALL            reduce using rule 43 (iterative -> UNTIL LP instrucciones RP condicion SEMICOLON .)
    ALTER           reduce using rule 43 (iterative -> UNTIL LP instrucciones RP condicion SEMICOLON .)
    NOT             reduce using rule 43 (iterative -> UNTIL LP instrucciones RP condicion SEMICOLON .)
    PRINT           reduce using rule 43 (iterative -> UNTIL LP instrucciones RP condicion SEMICOLON .)
    WHILE           reduce using rule 43 (iterative -> UNTIL LP instrucciones RP condicion SEMICOLON .)
    UNTIL           reduce using rule 43 (iterative -> UNTIL LP instrucciones RP condicion SEMICOLON .)
    CASE            reduce using rule 43 (iterative -> UNTIL LP instrucciones RP condicion SEMICOLON .)
    MOVER           reduce using rule 43 (iterative -> UNTIL LP instrucciones RP condicion SEMICOLON .)
    ALEATORIO       reduce using rule 43 (iterative -> UNTIL LP instrucciones RP condicion SEMICOLON .)
    ISTRUE          reduce using rule 43 (iterative -> UNTIL LP instrucciones RP condicion SEMICOLON .)
    REPEAT          reduce using rule 43 (iterative -> UNTIL LP instrucciones RP condicion SEMICOLON .)
    ID              reduce using rule 43 (iterative -> UNTIL LP instrucciones RP condicion SEMICOLON .)
    COMMENT         reduce using rule 43 (iterative -> UNTIL LP instrucciones RP condicion SEMICOLON .)
    RP              reduce using rule 43 (iterative -> UNTIL LP instrucciones RP condicion SEMICOLON .)


state 168

    (58) else -> ELSE LP instrucciones . RP

    RP              shift and go to state 174


state 169

    (57) then -> THEN LP instrucciones RP .

    ELSE            reduce using rule 57 (then -> THEN LP instrucciones RP .)
    SEMICOLON       reduce using rule 57 (then -> THEN LP instrucciones RP .)
    WHEN            reduce using rule 57 (then -> THEN LP instrucciones RP .)


state 170

    (30) def -> DEF LP ID COMMA TYPE COMMA value . RP SEMICOLON

    RP              shift and go to state 175


state 171

    (31) def -> DEF LP ID COMMA TYPE RP SEMICOLON .

    DEF             reduce using rule 31 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    CALL            reduce using rule 31 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    ALTER           reduce using rule 31 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    NOT             reduce using rule 31 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    PRINT           reduce using rule 31 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    WHILE           reduce using rule 31 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    UNTIL           reduce using rule 31 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    CASE            reduce using rule 31 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    MOVER           reduce using rule 31 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    ALEATORIO       reduce using rule 31 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    ISTRUE          reduce using rule 31 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    REPEAT          reduce using rule 31 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    ID              reduce using rule 31 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    COMMENT         reduce using rule 31 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    RP              reduce using rule 31 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)


state 172

    (34) alter -> ALTER LP ID COMMA ID RP SEMICOLON .

    DEF             reduce using rule 34 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    CALL            reduce using rule 34 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    ALTER           reduce using rule 34 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    NOT             reduce using rule 34 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    PRINT           reduce using rule 34 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    WHILE           reduce using rule 34 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    UNTIL           reduce using rule 34 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    CASE            reduce using rule 34 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    MOVER           reduce using rule 34 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    ALEATORIO       reduce using rule 34 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    ISTRUE          reduce using rule 34 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    REPEAT          reduce using rule 34 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    ID              reduce using rule 34 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    COMMENT         reduce using rule 34 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    RP              reduce using rule 34 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)


state 173

    (33) alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .

    DEF             reduce using rule 33 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    CALL            reduce using rule 33 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    ALTER           reduce using rule 33 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    NOT             reduce using rule 33 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    PRINT           reduce using rule 33 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    WHILE           reduce using rule 33 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    UNTIL           reduce using rule 33 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    CASE            reduce using rule 33 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    MOVER           reduce using rule 33 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    ALEATORIO       reduce using rule 33 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    ISTRUE          reduce using rule 33 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    REPEAT          reduce using rule 33 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    ID              reduce using rule 33 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    COMMENT         reduce using rule 33 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    RP              reduce using rule 33 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)


state 174

    (58) else -> ELSE LP instrucciones RP .

    SEMICOLON       reduce using rule 58 (else -> ELSE LP instrucciones RP .)
    WHEN            reduce using rule 58 (else -> ELSE LP instrucciones RP .)


state 175

    (30) def -> DEF LP ID COMMA TYPE COMMA value RP . SEMICOLON

    SEMICOLON       shift and go to state 176


state 176

    (30) def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .

    DEF             reduce using rule 30 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    CALL            reduce using rule 30 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    ALTER           reduce using rule 30 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    NOT             reduce using rule 30 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    PRINT           reduce using rule 30 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    WHILE           reduce using rule 30 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    UNTIL           reduce using rule 30 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    CASE            reduce using rule 30 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    MOVER           reduce using rule 30 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    ALEATORIO       reduce using rule 30 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    ISTRUE          reduce using rule 30 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    REPEAT          reduce using rule 30 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    ID              reduce using rule 30 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    COMMENT         reduce using rule 30 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    RP              reduce using rule 30 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMENT in state 12 resolved as shift
WARNING: reduce/reduce conflict in state 65 resolved using rule (value -> INTEGER)
WARNING: rejected rule (factor -> INTEGER) in state 65
