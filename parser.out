Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CHANGE
    VALUE

Grammar

Rule 0     S' -> init
Rule 1     init -> comment code
Rule 2     init -> comment
Rule 3     code -> procedimientos main
Rule 4     code -> main procedimientos
Rule 5     code -> procedimientos main procedimientos
Rule 6     code -> main
Rule 7     code -> comment code
Rule 8     code -> code comment
Rule 9     procedimientos -> procedimiento procedimientos
Rule 10    procedimientos -> procedimiento
Rule 11    procedimiento -> proc
Rule 12    proc -> PROC ID LP instrucciones RP SEMICOLON
Rule 13    main -> MAIN LP instrucciones RP SEMICOLON
Rule 14    main -> MAIN LP RP SEMICOLON
Rule 15    instrucciones -> instruccion instrucciones
Rule 16    instrucciones -> instruccion
Rule 17    instruccion -> def
Rule 18    instruccion -> call
Rule 19    instruccion -> alter
Rule 20    instruccion -> not
Rule 21    instruccion -> print
Rule 22    instruccion -> iterative
Rule 23    instruccion -> case
Rule 24    instruccion -> mover
Rule 25    instruccion -> aleatorio
Rule 26    instruccion -> istrue
Rule 27    instruccion -> repeat
Rule 28    instruccion -> change
Rule 29    instruccion -> comment
Rule 30    break -> BREAK
Rule 31    def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON
Rule 32    def -> DEF LP ID COMMA TYPE RP SEMICOLON
Rule 33    call -> CALL LP ID RP SEMICOLON
Rule 34    alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON
Rule 35    alter -> ALTER LP ID COMMA ID RP SEMICOLON
Rule 36    not -> NOT LP ID RP
Rule 37    istrue -> ISTRUE LP ID RP SEMICOLON
Rule 38    print -> PRINT LP prints RP SEMICOLON
Rule 39    prints -> printexpr
Rule 40    prints -> prints printexpr
Rule 41    printexpr -> STRING
Rule 42    printexpr -> ID
Rule 43    iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON
Rule 44    iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON
Rule 45    case -> CASE funciones SEMICOLON
Rule 46    case -> CASE ID funciones SEMICOLON
Rule 47    mover -> MOVER LP DIR RP SEMICOLON
Rule 48    aleatorio -> ALEATORIO LP RP SEMICOLON
Rule 49    repeat -> REPEAT LP instrucciones break RP SEMICOLON
Rule 50    value -> INTEGER
Rule 51    value -> BOOL
Rule 52    value -> expression
Rule 53    value -> ID
Rule 54    value -> not
Rule 55    funciones -> funcion
Rule 56    funciones -> funciones funcion
Rule 57    funcion -> when then
Rule 58    funcion -> when then else
Rule 59    when -> WHEN LP condicion RP
Rule 60    when -> WHEN value
Rule 61    then -> THEN LP instrucciones RP
Rule 62    else -> ELSE LP instrucciones RP
Rule 63    condicion -> oper GT oper
Rule 64    condicion -> oper LT oper
Rule 65    condicion -> oper EQUAL oper
Rule 66    condicion -> oper DIF oper
Rule 67    condicion -> oper GTE oper
Rule 68    condicion -> oper LTE oper
Rule 69    condicion -> istrue
Rule 70    oper -> value
Rule 71    oper -> expression
Rule 72    change -> ID LP value RP SEMICOLON
Rule 73    expression -> expression PLUS term
Rule 74    expression -> expression MINUS term
Rule 75    expression -> term
Rule 76    term -> term STAR factor
Rule 77    term -> term SLASH factor
Rule 78    term -> factor
Rule 79    factor -> INTEGER
Rule 80    factor -> LP expression RP
Rule 81    comment -> COMMENT

Terminals, with rules where they appear

ALEATORIO            : 48
ALTER                : 34 35
BOOL                 : 51
BREAK                : 30
CALL                 : 33
CASE                 : 45 46
CHANGE               : 
COMMA                : 31 31 32 34 35
COMMENT              : 81
DEF                  : 31 32
DIF                  : 66
DIR                  : 47
ELSE                 : 62
EQUAL                : 65
GT                   : 63
GTE                  : 67
ID                   : 12 31 32 33 34 35 35 36 37 42 46 53 72
INTEGER              : 34 50 79
ISTRUE               : 37
LP                   : 12 13 14 31 32 33 34 35 36 37 38 43 43 44 44 47 48 49 59 61 62 72 80
LT                   : 64
LTE                  : 68
MAIN                 : 13 14
MINUS                : 74
MOVER                : 47
NOT                  : 36
PLUS                 : 73
PRINT                : 38
PROC                 : 12
REPEAT               : 49
RP                   : 12 13 14 31 32 33 34 35 36 37 38 43 43 44 44 47 48 49 59 61 62 72 80
SEMICOLON            : 12 13 14 31 32 33 34 35 37 38 43 44 45 46 47 48 49 72
SLASH                : 77
STAR                 : 76
STRING               : 41
THEN                 : 61
TYPE                 : 31 32
UNTIL                : 44
VALUE                : 
WHEN                 : 59 60
WHILE                : 43
error                : 

Nonterminals, with rules where they appear

aleatorio            : 25
alter                : 19
break                : 49
call                 : 18
case                 : 23
change               : 28
code                 : 1 7 8
comment              : 1 2 7 8 29
condicion            : 43 44 59
def                  : 17
else                 : 58
expression           : 52 71 73 74 80
factor               : 76 77 78
funcion              : 55 56
funciones            : 45 46 56
init                 : 0
instruccion          : 15 16
instrucciones        : 12 13 15 43 44 49 61 62
istrue               : 26 69
iterative            : 22
main                 : 3 4 5 6
mover                : 24
not                  : 20 54
oper                 : 63 63 64 64 65 65 66 66 67 67 68 68
print                : 21
printexpr            : 39 40
prints               : 38 40
proc                 : 11
procedimiento        : 9 10
procedimientos       : 3 4 5 5 9
repeat               : 27
term                 : 73 74 75 76 77
then                 : 57 58
value                : 31 60 70 72
when                 : 57 58

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . comment code
    (2) init -> . comment
    (81) comment -> . COMMENT

    COMMENT         shift and go to state 3

    init                           shift and go to state 1
    comment                        shift and go to state 2

state 1

    (0) S' -> init .



state 2

    (1) init -> comment . code
    (2) init -> comment .
    (3) code -> . procedimientos main
    (4) code -> . main procedimientos
    (5) code -> . procedimientos main procedimientos
    (6) code -> . main
    (7) code -> . comment code
    (8) code -> . code comment
    (9) procedimientos -> . procedimiento procedimientos
    (10) procedimientos -> . procedimiento
    (13) main -> . MAIN LP instrucciones RP SEMICOLON
    (14) main -> . MAIN LP RP SEMICOLON
    (81) comment -> . COMMENT
    (11) procedimiento -> . proc
    (12) proc -> . PROC ID LP instrucciones RP SEMICOLON

    $end            reduce using rule 2 (init -> comment .)
    MAIN            shift and go to state 9
    COMMENT         shift and go to state 3
    PROC            shift and go to state 11

    comment                        shift and go to state 4
    code                           shift and go to state 5
    procedimientos                 shift and go to state 6
    main                           shift and go to state 7
    procedimiento                  shift and go to state 8
    proc                           shift and go to state 10

state 3

    (81) comment -> COMMENT .

    MAIN            reduce using rule 81 (comment -> COMMENT .)
    COMMENT         reduce using rule 81 (comment -> COMMENT .)
    PROC            reduce using rule 81 (comment -> COMMENT .)
    $end            reduce using rule 81 (comment -> COMMENT .)
    DEF             reduce using rule 81 (comment -> COMMENT .)
    CALL            reduce using rule 81 (comment -> COMMENT .)
    ALTER           reduce using rule 81 (comment -> COMMENT .)
    NOT             reduce using rule 81 (comment -> COMMENT .)
    PRINT           reduce using rule 81 (comment -> COMMENT .)
    WHILE           reduce using rule 81 (comment -> COMMENT .)
    UNTIL           reduce using rule 81 (comment -> COMMENT .)
    CASE            reduce using rule 81 (comment -> COMMENT .)
    MOVER           reduce using rule 81 (comment -> COMMENT .)
    ALEATORIO       reduce using rule 81 (comment -> COMMENT .)
    ISTRUE          reduce using rule 81 (comment -> COMMENT .)
    REPEAT          reduce using rule 81 (comment -> COMMENT .)
    ID              reduce using rule 81 (comment -> COMMENT .)
    RP              reduce using rule 81 (comment -> COMMENT .)
    BREAK           reduce using rule 81 (comment -> COMMENT .)


state 4

    (7) code -> comment . code
    (3) code -> . procedimientos main
    (4) code -> . main procedimientos
    (5) code -> . procedimientos main procedimientos
    (6) code -> . main
    (7) code -> . comment code
    (8) code -> . code comment
    (9) procedimientos -> . procedimiento procedimientos
    (10) procedimientos -> . procedimiento
    (13) main -> . MAIN LP instrucciones RP SEMICOLON
    (14) main -> . MAIN LP RP SEMICOLON
    (81) comment -> . COMMENT
    (11) procedimiento -> . proc
    (12) proc -> . PROC ID LP instrucciones RP SEMICOLON

    MAIN            shift and go to state 9
    COMMENT         shift and go to state 3
    PROC            shift and go to state 11

    comment                        shift and go to state 4
    code                           shift and go to state 12
    procedimientos                 shift and go to state 6
    main                           shift and go to state 7
    procedimiento                  shift and go to state 8
    proc                           shift and go to state 10

state 5

    (1) init -> comment code .
    (8) code -> code . comment
    (81) comment -> . COMMENT

    $end            reduce using rule 1 (init -> comment code .)
    COMMENT         shift and go to state 3

    comment                        shift and go to state 13

state 6

    (3) code -> procedimientos . main
    (5) code -> procedimientos . main procedimientos
    (13) main -> . MAIN LP instrucciones RP SEMICOLON
    (14) main -> . MAIN LP RP SEMICOLON

    MAIN            shift and go to state 9

    main                           shift and go to state 14

state 7

    (4) code -> main . procedimientos
    (6) code -> main .
    (9) procedimientos -> . procedimiento procedimientos
    (10) procedimientos -> . procedimiento
    (11) procedimiento -> . proc
    (12) proc -> . PROC ID LP instrucciones RP SEMICOLON

    COMMENT         reduce using rule 6 (code -> main .)
    $end            reduce using rule 6 (code -> main .)
    PROC            shift and go to state 11

    procedimientos                 shift and go to state 15
    procedimiento                  shift and go to state 8
    proc                           shift and go to state 10

state 8

    (9) procedimientos -> procedimiento . procedimientos
    (10) procedimientos -> procedimiento .
    (9) procedimientos -> . procedimiento procedimientos
    (10) procedimientos -> . procedimiento
    (11) procedimiento -> . proc
    (12) proc -> . PROC ID LP instrucciones RP SEMICOLON

    MAIN            reduce using rule 10 (procedimientos -> procedimiento .)
    COMMENT         reduce using rule 10 (procedimientos -> procedimiento .)
    $end            reduce using rule 10 (procedimientos -> procedimiento .)
    PROC            shift and go to state 11

    procedimiento                  shift and go to state 8
    procedimientos                 shift and go to state 16
    proc                           shift and go to state 10

state 9

    (13) main -> MAIN . LP instrucciones RP SEMICOLON
    (14) main -> MAIN . LP RP SEMICOLON

    LP              shift and go to state 17


state 10

    (11) procedimiento -> proc .

    PROC            reduce using rule 11 (procedimiento -> proc .)
    MAIN            reduce using rule 11 (procedimiento -> proc .)
    COMMENT         reduce using rule 11 (procedimiento -> proc .)
    $end            reduce using rule 11 (procedimiento -> proc .)


state 11

    (12) proc -> PROC . ID LP instrucciones RP SEMICOLON

    ID              shift and go to state 18


state 12

    (7) code -> comment code .
    (8) code -> code . comment
    (81) comment -> . COMMENT

  ! shift/reduce conflict for COMMENT resolved as shift
    $end            reduce using rule 7 (code -> comment code .)
    COMMENT         shift and go to state 3

  ! COMMENT         [ reduce using rule 7 (code -> comment code .) ]

    comment                        shift and go to state 13

state 13

    (8) code -> code comment .

    COMMENT         reduce using rule 8 (code -> code comment .)
    $end            reduce using rule 8 (code -> code comment .)


state 14

    (3) code -> procedimientos main .
    (5) code -> procedimientos main . procedimientos
    (9) procedimientos -> . procedimiento procedimientos
    (10) procedimientos -> . procedimiento
    (11) procedimiento -> . proc
    (12) proc -> . PROC ID LP instrucciones RP SEMICOLON

    COMMENT         reduce using rule 3 (code -> procedimientos main .)
    $end            reduce using rule 3 (code -> procedimientos main .)
    PROC            shift and go to state 11

    procedimientos                 shift and go to state 19
    procedimiento                  shift and go to state 8
    proc                           shift and go to state 10

state 15

    (4) code -> main procedimientos .

    COMMENT         reduce using rule 4 (code -> main procedimientos .)
    $end            reduce using rule 4 (code -> main procedimientos .)


state 16

    (9) procedimientos -> procedimiento procedimientos .

    MAIN            reduce using rule 9 (procedimientos -> procedimiento procedimientos .)
    COMMENT         reduce using rule 9 (procedimientos -> procedimiento procedimientos .)
    $end            reduce using rule 9 (procedimientos -> procedimiento procedimientos .)


state 17

    (13) main -> MAIN LP . instrucciones RP SEMICOLON
    (14) main -> MAIN LP . RP SEMICOLON
    (15) instrucciones -> . instruccion instrucciones
    (16) instrucciones -> . instruccion
    (17) instruccion -> . def
    (18) instruccion -> . call
    (19) instruccion -> . alter
    (20) instruccion -> . not
    (21) instruccion -> . print
    (22) instruccion -> . iterative
    (23) instruccion -> . case
    (24) instruccion -> . mover
    (25) instruccion -> . aleatorio
    (26) instruccion -> . istrue
    (27) instruccion -> . repeat
    (28) instruccion -> . change
    (29) instruccion -> . comment
    (31) def -> . DEF LP ID COMMA TYPE COMMA value RP SEMICOLON
    (32) def -> . DEF LP ID COMMA TYPE RP SEMICOLON
    (33) call -> . CALL LP ID RP SEMICOLON
    (34) alter -> . ALTER LP ID COMMA INTEGER RP SEMICOLON
    (35) alter -> . ALTER LP ID COMMA ID RP SEMICOLON
    (36) not -> . NOT LP ID RP
    (38) print -> . PRINT LP prints RP SEMICOLON
    (43) iterative -> . WHILE LP condicion RP LP instrucciones RP SEMICOLON
    (44) iterative -> . UNTIL LP instrucciones RP LP condicion RP SEMICOLON
    (45) case -> . CASE funciones SEMICOLON
    (46) case -> . CASE ID funciones SEMICOLON
    (47) mover -> . MOVER LP DIR RP SEMICOLON
    (48) aleatorio -> . ALEATORIO LP RP SEMICOLON
    (37) istrue -> . ISTRUE LP ID RP SEMICOLON
    (49) repeat -> . REPEAT LP instrucciones break RP SEMICOLON
    (72) change -> . ID LP value RP SEMICOLON
    (81) comment -> . COMMENT

    RP              shift and go to state 21
    DEF             shift and go to state 36
    CALL            shift and go to state 38
    ALTER           shift and go to state 39
    NOT             shift and go to state 40
    PRINT           shift and go to state 41
    WHILE           shift and go to state 42
    UNTIL           shift and go to state 43
    CASE            shift and go to state 44
    MOVER           shift and go to state 45
    ALEATORIO       shift and go to state 46
    ISTRUE          shift and go to state 47
    REPEAT          shift and go to state 48
    ID              shift and go to state 37
    COMMENT         shift and go to state 3

    instrucciones                  shift and go to state 20
    instruccion                    shift and go to state 22
    def                            shift and go to state 23
    call                           shift and go to state 24
    alter                          shift and go to state 25
    not                            shift and go to state 26
    print                          shift and go to state 27
    iterative                      shift and go to state 28
    case                           shift and go to state 29
    mover                          shift and go to state 30
    aleatorio                      shift and go to state 31
    istrue                         shift and go to state 32
    repeat                         shift and go to state 33
    change                         shift and go to state 34
    comment                        shift and go to state 35

state 18

    (12) proc -> PROC ID . LP instrucciones RP SEMICOLON

    LP              shift and go to state 49


state 19

    (5) code -> procedimientos main procedimientos .

    COMMENT         reduce using rule 5 (code -> procedimientos main procedimientos .)
    $end            reduce using rule 5 (code -> procedimientos main procedimientos .)


state 20

    (13) main -> MAIN LP instrucciones . RP SEMICOLON

    RP              shift and go to state 50


state 21

    (14) main -> MAIN LP RP . SEMICOLON

    SEMICOLON       shift and go to state 51


state 22

    (15) instrucciones -> instruccion . instrucciones
    (16) instrucciones -> instruccion .
    (15) instrucciones -> . instruccion instrucciones
    (16) instrucciones -> . instruccion
    (17) instruccion -> . def
    (18) instruccion -> . call
    (19) instruccion -> . alter
    (20) instruccion -> . not
    (21) instruccion -> . print
    (22) instruccion -> . iterative
    (23) instruccion -> . case
    (24) instruccion -> . mover
    (25) instruccion -> . aleatorio
    (26) instruccion -> . istrue
    (27) instruccion -> . repeat
    (28) instruccion -> . change
    (29) instruccion -> . comment
    (31) def -> . DEF LP ID COMMA TYPE COMMA value RP SEMICOLON
    (32) def -> . DEF LP ID COMMA TYPE RP SEMICOLON
    (33) call -> . CALL LP ID RP SEMICOLON
    (34) alter -> . ALTER LP ID COMMA INTEGER RP SEMICOLON
    (35) alter -> . ALTER LP ID COMMA ID RP SEMICOLON
    (36) not -> . NOT LP ID RP
    (38) print -> . PRINT LP prints RP SEMICOLON
    (43) iterative -> . WHILE LP condicion RP LP instrucciones RP SEMICOLON
    (44) iterative -> . UNTIL LP instrucciones RP LP condicion RP SEMICOLON
    (45) case -> . CASE funciones SEMICOLON
    (46) case -> . CASE ID funciones SEMICOLON
    (47) mover -> . MOVER LP DIR RP SEMICOLON
    (48) aleatorio -> . ALEATORIO LP RP SEMICOLON
    (37) istrue -> . ISTRUE LP ID RP SEMICOLON
    (49) repeat -> . REPEAT LP instrucciones break RP SEMICOLON
    (72) change -> . ID LP value RP SEMICOLON
    (81) comment -> . COMMENT

    RP              reduce using rule 16 (instrucciones -> instruccion .)
    BREAK           reduce using rule 16 (instrucciones -> instruccion .)
    DEF             shift and go to state 36
    CALL            shift and go to state 38
    ALTER           shift and go to state 39
    NOT             shift and go to state 40
    PRINT           shift and go to state 41
    WHILE           shift and go to state 42
    UNTIL           shift and go to state 43
    CASE            shift and go to state 44
    MOVER           shift and go to state 45
    ALEATORIO       shift and go to state 46
    ISTRUE          shift and go to state 47
    REPEAT          shift and go to state 48
    ID              shift and go to state 37
    COMMENT         shift and go to state 3

    instruccion                    shift and go to state 22
    instrucciones                  shift and go to state 52
    def                            shift and go to state 23
    call                           shift and go to state 24
    alter                          shift and go to state 25
    not                            shift and go to state 26
    print                          shift and go to state 27
    iterative                      shift and go to state 28
    case                           shift and go to state 29
    mover                          shift and go to state 30
    aleatorio                      shift and go to state 31
    istrue                         shift and go to state 32
    repeat                         shift and go to state 33
    change                         shift and go to state 34
    comment                        shift and go to state 35

state 23

    (17) instruccion -> def .

    DEF             reduce using rule 17 (instruccion -> def .)
    CALL            reduce using rule 17 (instruccion -> def .)
    ALTER           reduce using rule 17 (instruccion -> def .)
    NOT             reduce using rule 17 (instruccion -> def .)
    PRINT           reduce using rule 17 (instruccion -> def .)
    WHILE           reduce using rule 17 (instruccion -> def .)
    UNTIL           reduce using rule 17 (instruccion -> def .)
    CASE            reduce using rule 17 (instruccion -> def .)
    MOVER           reduce using rule 17 (instruccion -> def .)
    ALEATORIO       reduce using rule 17 (instruccion -> def .)
    ISTRUE          reduce using rule 17 (instruccion -> def .)
    REPEAT          reduce using rule 17 (instruccion -> def .)
    ID              reduce using rule 17 (instruccion -> def .)
    COMMENT         reduce using rule 17 (instruccion -> def .)
    RP              reduce using rule 17 (instruccion -> def .)
    BREAK           reduce using rule 17 (instruccion -> def .)


state 24

    (18) instruccion -> call .

    DEF             reduce using rule 18 (instruccion -> call .)
    CALL            reduce using rule 18 (instruccion -> call .)
    ALTER           reduce using rule 18 (instruccion -> call .)
    NOT             reduce using rule 18 (instruccion -> call .)
    PRINT           reduce using rule 18 (instruccion -> call .)
    WHILE           reduce using rule 18 (instruccion -> call .)
    UNTIL           reduce using rule 18 (instruccion -> call .)
    CASE            reduce using rule 18 (instruccion -> call .)
    MOVER           reduce using rule 18 (instruccion -> call .)
    ALEATORIO       reduce using rule 18 (instruccion -> call .)
    ISTRUE          reduce using rule 18 (instruccion -> call .)
    REPEAT          reduce using rule 18 (instruccion -> call .)
    ID              reduce using rule 18 (instruccion -> call .)
    COMMENT         reduce using rule 18 (instruccion -> call .)
    RP              reduce using rule 18 (instruccion -> call .)
    BREAK           reduce using rule 18 (instruccion -> call .)


state 25

    (19) instruccion -> alter .

    DEF             reduce using rule 19 (instruccion -> alter .)
    CALL            reduce using rule 19 (instruccion -> alter .)
    ALTER           reduce using rule 19 (instruccion -> alter .)
    NOT             reduce using rule 19 (instruccion -> alter .)
    PRINT           reduce using rule 19 (instruccion -> alter .)
    WHILE           reduce using rule 19 (instruccion -> alter .)
    UNTIL           reduce using rule 19 (instruccion -> alter .)
    CASE            reduce using rule 19 (instruccion -> alter .)
    MOVER           reduce using rule 19 (instruccion -> alter .)
    ALEATORIO       reduce using rule 19 (instruccion -> alter .)
    ISTRUE          reduce using rule 19 (instruccion -> alter .)
    REPEAT          reduce using rule 19 (instruccion -> alter .)
    ID              reduce using rule 19 (instruccion -> alter .)
    COMMENT         reduce using rule 19 (instruccion -> alter .)
    RP              reduce using rule 19 (instruccion -> alter .)
    BREAK           reduce using rule 19 (instruccion -> alter .)


state 26

    (20) instruccion -> not .

    DEF             reduce using rule 20 (instruccion -> not .)
    CALL            reduce using rule 20 (instruccion -> not .)
    ALTER           reduce using rule 20 (instruccion -> not .)
    NOT             reduce using rule 20 (instruccion -> not .)
    PRINT           reduce using rule 20 (instruccion -> not .)
    WHILE           reduce using rule 20 (instruccion -> not .)
    UNTIL           reduce using rule 20 (instruccion -> not .)
    CASE            reduce using rule 20 (instruccion -> not .)
    MOVER           reduce using rule 20 (instruccion -> not .)
    ALEATORIO       reduce using rule 20 (instruccion -> not .)
    ISTRUE          reduce using rule 20 (instruccion -> not .)
    REPEAT          reduce using rule 20 (instruccion -> not .)
    ID              reduce using rule 20 (instruccion -> not .)
    COMMENT         reduce using rule 20 (instruccion -> not .)
    RP              reduce using rule 20 (instruccion -> not .)
    BREAK           reduce using rule 20 (instruccion -> not .)


state 27

    (21) instruccion -> print .

    DEF             reduce using rule 21 (instruccion -> print .)
    CALL            reduce using rule 21 (instruccion -> print .)
    ALTER           reduce using rule 21 (instruccion -> print .)
    NOT             reduce using rule 21 (instruccion -> print .)
    PRINT           reduce using rule 21 (instruccion -> print .)
    WHILE           reduce using rule 21 (instruccion -> print .)
    UNTIL           reduce using rule 21 (instruccion -> print .)
    CASE            reduce using rule 21 (instruccion -> print .)
    MOVER           reduce using rule 21 (instruccion -> print .)
    ALEATORIO       reduce using rule 21 (instruccion -> print .)
    ISTRUE          reduce using rule 21 (instruccion -> print .)
    REPEAT          reduce using rule 21 (instruccion -> print .)
    ID              reduce using rule 21 (instruccion -> print .)
    COMMENT         reduce using rule 21 (instruccion -> print .)
    RP              reduce using rule 21 (instruccion -> print .)
    BREAK           reduce using rule 21 (instruccion -> print .)


state 28

    (22) instruccion -> iterative .

    DEF             reduce using rule 22 (instruccion -> iterative .)
    CALL            reduce using rule 22 (instruccion -> iterative .)
    ALTER           reduce using rule 22 (instruccion -> iterative .)
    NOT             reduce using rule 22 (instruccion -> iterative .)
    PRINT           reduce using rule 22 (instruccion -> iterative .)
    WHILE           reduce using rule 22 (instruccion -> iterative .)
    UNTIL           reduce using rule 22 (instruccion -> iterative .)
    CASE            reduce using rule 22 (instruccion -> iterative .)
    MOVER           reduce using rule 22 (instruccion -> iterative .)
    ALEATORIO       reduce using rule 22 (instruccion -> iterative .)
    ISTRUE          reduce using rule 22 (instruccion -> iterative .)
    REPEAT          reduce using rule 22 (instruccion -> iterative .)
    ID              reduce using rule 22 (instruccion -> iterative .)
    COMMENT         reduce using rule 22 (instruccion -> iterative .)
    RP              reduce using rule 22 (instruccion -> iterative .)
    BREAK           reduce using rule 22 (instruccion -> iterative .)


state 29

    (23) instruccion -> case .

    DEF             reduce using rule 23 (instruccion -> case .)
    CALL            reduce using rule 23 (instruccion -> case .)
    ALTER           reduce using rule 23 (instruccion -> case .)
    NOT             reduce using rule 23 (instruccion -> case .)
    PRINT           reduce using rule 23 (instruccion -> case .)
    WHILE           reduce using rule 23 (instruccion -> case .)
    UNTIL           reduce using rule 23 (instruccion -> case .)
    CASE            reduce using rule 23 (instruccion -> case .)
    MOVER           reduce using rule 23 (instruccion -> case .)
    ALEATORIO       reduce using rule 23 (instruccion -> case .)
    ISTRUE          reduce using rule 23 (instruccion -> case .)
    REPEAT          reduce using rule 23 (instruccion -> case .)
    ID              reduce using rule 23 (instruccion -> case .)
    COMMENT         reduce using rule 23 (instruccion -> case .)
    RP              reduce using rule 23 (instruccion -> case .)
    BREAK           reduce using rule 23 (instruccion -> case .)


state 30

    (24) instruccion -> mover .

    DEF             reduce using rule 24 (instruccion -> mover .)
    CALL            reduce using rule 24 (instruccion -> mover .)
    ALTER           reduce using rule 24 (instruccion -> mover .)
    NOT             reduce using rule 24 (instruccion -> mover .)
    PRINT           reduce using rule 24 (instruccion -> mover .)
    WHILE           reduce using rule 24 (instruccion -> mover .)
    UNTIL           reduce using rule 24 (instruccion -> mover .)
    CASE            reduce using rule 24 (instruccion -> mover .)
    MOVER           reduce using rule 24 (instruccion -> mover .)
    ALEATORIO       reduce using rule 24 (instruccion -> mover .)
    ISTRUE          reduce using rule 24 (instruccion -> mover .)
    REPEAT          reduce using rule 24 (instruccion -> mover .)
    ID              reduce using rule 24 (instruccion -> mover .)
    COMMENT         reduce using rule 24 (instruccion -> mover .)
    RP              reduce using rule 24 (instruccion -> mover .)
    BREAK           reduce using rule 24 (instruccion -> mover .)


state 31

    (25) instruccion -> aleatorio .

    DEF             reduce using rule 25 (instruccion -> aleatorio .)
    CALL            reduce using rule 25 (instruccion -> aleatorio .)
    ALTER           reduce using rule 25 (instruccion -> aleatorio .)
    NOT             reduce using rule 25 (instruccion -> aleatorio .)
    PRINT           reduce using rule 25 (instruccion -> aleatorio .)
    WHILE           reduce using rule 25 (instruccion -> aleatorio .)
    UNTIL           reduce using rule 25 (instruccion -> aleatorio .)
    CASE            reduce using rule 25 (instruccion -> aleatorio .)
    MOVER           reduce using rule 25 (instruccion -> aleatorio .)
    ALEATORIO       reduce using rule 25 (instruccion -> aleatorio .)
    ISTRUE          reduce using rule 25 (instruccion -> aleatorio .)
    REPEAT          reduce using rule 25 (instruccion -> aleatorio .)
    ID              reduce using rule 25 (instruccion -> aleatorio .)
    COMMENT         reduce using rule 25 (instruccion -> aleatorio .)
    RP              reduce using rule 25 (instruccion -> aleatorio .)
    BREAK           reduce using rule 25 (instruccion -> aleatorio .)


state 32

    (26) instruccion -> istrue .

    DEF             reduce using rule 26 (instruccion -> istrue .)
    CALL            reduce using rule 26 (instruccion -> istrue .)
    ALTER           reduce using rule 26 (instruccion -> istrue .)
    NOT             reduce using rule 26 (instruccion -> istrue .)
    PRINT           reduce using rule 26 (instruccion -> istrue .)
    WHILE           reduce using rule 26 (instruccion -> istrue .)
    UNTIL           reduce using rule 26 (instruccion -> istrue .)
    CASE            reduce using rule 26 (instruccion -> istrue .)
    MOVER           reduce using rule 26 (instruccion -> istrue .)
    ALEATORIO       reduce using rule 26 (instruccion -> istrue .)
    ISTRUE          reduce using rule 26 (instruccion -> istrue .)
    REPEAT          reduce using rule 26 (instruccion -> istrue .)
    ID              reduce using rule 26 (instruccion -> istrue .)
    COMMENT         reduce using rule 26 (instruccion -> istrue .)
    RP              reduce using rule 26 (instruccion -> istrue .)
    BREAK           reduce using rule 26 (instruccion -> istrue .)


state 33

    (27) instruccion -> repeat .

    DEF             reduce using rule 27 (instruccion -> repeat .)
    CALL            reduce using rule 27 (instruccion -> repeat .)
    ALTER           reduce using rule 27 (instruccion -> repeat .)
    NOT             reduce using rule 27 (instruccion -> repeat .)
    PRINT           reduce using rule 27 (instruccion -> repeat .)
    WHILE           reduce using rule 27 (instruccion -> repeat .)
    UNTIL           reduce using rule 27 (instruccion -> repeat .)
    CASE            reduce using rule 27 (instruccion -> repeat .)
    MOVER           reduce using rule 27 (instruccion -> repeat .)
    ALEATORIO       reduce using rule 27 (instruccion -> repeat .)
    ISTRUE          reduce using rule 27 (instruccion -> repeat .)
    REPEAT          reduce using rule 27 (instruccion -> repeat .)
    ID              reduce using rule 27 (instruccion -> repeat .)
    COMMENT         reduce using rule 27 (instruccion -> repeat .)
    RP              reduce using rule 27 (instruccion -> repeat .)
    BREAK           reduce using rule 27 (instruccion -> repeat .)


state 34

    (28) instruccion -> change .

    DEF             reduce using rule 28 (instruccion -> change .)
    CALL            reduce using rule 28 (instruccion -> change .)
    ALTER           reduce using rule 28 (instruccion -> change .)
    NOT             reduce using rule 28 (instruccion -> change .)
    PRINT           reduce using rule 28 (instruccion -> change .)
    WHILE           reduce using rule 28 (instruccion -> change .)
    UNTIL           reduce using rule 28 (instruccion -> change .)
    CASE            reduce using rule 28 (instruccion -> change .)
    MOVER           reduce using rule 28 (instruccion -> change .)
    ALEATORIO       reduce using rule 28 (instruccion -> change .)
    ISTRUE          reduce using rule 28 (instruccion -> change .)
    REPEAT          reduce using rule 28 (instruccion -> change .)
    ID              reduce using rule 28 (instruccion -> change .)
    COMMENT         reduce using rule 28 (instruccion -> change .)
    RP              reduce using rule 28 (instruccion -> change .)
    BREAK           reduce using rule 28 (instruccion -> change .)


state 35

    (29) instruccion -> comment .

    DEF             reduce using rule 29 (instruccion -> comment .)
    CALL            reduce using rule 29 (instruccion -> comment .)
    ALTER           reduce using rule 29 (instruccion -> comment .)
    NOT             reduce using rule 29 (instruccion -> comment .)
    PRINT           reduce using rule 29 (instruccion -> comment .)
    WHILE           reduce using rule 29 (instruccion -> comment .)
    UNTIL           reduce using rule 29 (instruccion -> comment .)
    CASE            reduce using rule 29 (instruccion -> comment .)
    MOVER           reduce using rule 29 (instruccion -> comment .)
    ALEATORIO       reduce using rule 29 (instruccion -> comment .)
    ISTRUE          reduce using rule 29 (instruccion -> comment .)
    REPEAT          reduce using rule 29 (instruccion -> comment .)
    ID              reduce using rule 29 (instruccion -> comment .)
    COMMENT         reduce using rule 29 (instruccion -> comment .)
    RP              reduce using rule 29 (instruccion -> comment .)
    BREAK           reduce using rule 29 (instruccion -> comment .)


state 36

    (31) def -> DEF . LP ID COMMA TYPE COMMA value RP SEMICOLON
    (32) def -> DEF . LP ID COMMA TYPE RP SEMICOLON

    LP              shift and go to state 53


state 37

    (72) change -> ID . LP value RP SEMICOLON

    LP              shift and go to state 54


state 38

    (33) call -> CALL . LP ID RP SEMICOLON

    LP              shift and go to state 55


state 39

    (34) alter -> ALTER . LP ID COMMA INTEGER RP SEMICOLON
    (35) alter -> ALTER . LP ID COMMA ID RP SEMICOLON

    LP              shift and go to state 56


state 40

    (36) not -> NOT . LP ID RP

    LP              shift and go to state 57


state 41

    (38) print -> PRINT . LP prints RP SEMICOLON

    LP              shift and go to state 58


state 42

    (43) iterative -> WHILE . LP condicion RP LP instrucciones RP SEMICOLON

    LP              shift and go to state 59


state 43

    (44) iterative -> UNTIL . LP instrucciones RP LP condicion RP SEMICOLON

    LP              shift and go to state 60


state 44

    (45) case -> CASE . funciones SEMICOLON
    (46) case -> CASE . ID funciones SEMICOLON
    (55) funciones -> . funcion
    (56) funciones -> . funciones funcion
    (57) funcion -> . when then
    (58) funcion -> . when then else
    (59) when -> . WHEN LP condicion RP
    (60) when -> . WHEN value

    ID              shift and go to state 62
    WHEN            shift and go to state 65

    funciones                      shift and go to state 61
    funcion                        shift and go to state 63
    when                           shift and go to state 64

state 45

    (47) mover -> MOVER . LP DIR RP SEMICOLON

    LP              shift and go to state 66


state 46

    (48) aleatorio -> ALEATORIO . LP RP SEMICOLON

    LP              shift and go to state 67


state 47

    (37) istrue -> ISTRUE . LP ID RP SEMICOLON

    LP              shift and go to state 68


state 48

    (49) repeat -> REPEAT . LP instrucciones break RP SEMICOLON

    LP              shift and go to state 69


state 49

    (12) proc -> PROC ID LP . instrucciones RP SEMICOLON
    (15) instrucciones -> . instruccion instrucciones
    (16) instrucciones -> . instruccion
    (17) instruccion -> . def
    (18) instruccion -> . call
    (19) instruccion -> . alter
    (20) instruccion -> . not
    (21) instruccion -> . print
    (22) instruccion -> . iterative
    (23) instruccion -> . case
    (24) instruccion -> . mover
    (25) instruccion -> . aleatorio
    (26) instruccion -> . istrue
    (27) instruccion -> . repeat
    (28) instruccion -> . change
    (29) instruccion -> . comment
    (31) def -> . DEF LP ID COMMA TYPE COMMA value RP SEMICOLON
    (32) def -> . DEF LP ID COMMA TYPE RP SEMICOLON
    (33) call -> . CALL LP ID RP SEMICOLON
    (34) alter -> . ALTER LP ID COMMA INTEGER RP SEMICOLON
    (35) alter -> . ALTER LP ID COMMA ID RP SEMICOLON
    (36) not -> . NOT LP ID RP
    (38) print -> . PRINT LP prints RP SEMICOLON
    (43) iterative -> . WHILE LP condicion RP LP instrucciones RP SEMICOLON
    (44) iterative -> . UNTIL LP instrucciones RP LP condicion RP SEMICOLON
    (45) case -> . CASE funciones SEMICOLON
    (46) case -> . CASE ID funciones SEMICOLON
    (47) mover -> . MOVER LP DIR RP SEMICOLON
    (48) aleatorio -> . ALEATORIO LP RP SEMICOLON
    (37) istrue -> . ISTRUE LP ID RP SEMICOLON
    (49) repeat -> . REPEAT LP instrucciones break RP SEMICOLON
    (72) change -> . ID LP value RP SEMICOLON
    (81) comment -> . COMMENT

    DEF             shift and go to state 36
    CALL            shift and go to state 38
    ALTER           shift and go to state 39
    NOT             shift and go to state 40
    PRINT           shift and go to state 41
    WHILE           shift and go to state 42
    UNTIL           shift and go to state 43
    CASE            shift and go to state 44
    MOVER           shift and go to state 45
    ALEATORIO       shift and go to state 46
    ISTRUE          shift and go to state 47
    REPEAT          shift and go to state 48
    ID              shift and go to state 37
    COMMENT         shift and go to state 3

    instrucciones                  shift and go to state 70
    instruccion                    shift and go to state 22
    def                            shift and go to state 23
    call                           shift and go to state 24
    alter                          shift and go to state 25
    not                            shift and go to state 26
    print                          shift and go to state 27
    iterative                      shift and go to state 28
    case                           shift and go to state 29
    mover                          shift and go to state 30
    aleatorio                      shift and go to state 31
    istrue                         shift and go to state 32
    repeat                         shift and go to state 33
    change                         shift and go to state 34
    comment                        shift and go to state 35

state 50

    (13) main -> MAIN LP instrucciones RP . SEMICOLON

    SEMICOLON       shift and go to state 71


state 51

    (14) main -> MAIN LP RP SEMICOLON .

    PROC            reduce using rule 14 (main -> MAIN LP RP SEMICOLON .)
    COMMENT         reduce using rule 14 (main -> MAIN LP RP SEMICOLON .)
    $end            reduce using rule 14 (main -> MAIN LP RP SEMICOLON .)


state 52

    (15) instrucciones -> instruccion instrucciones .

    RP              reduce using rule 15 (instrucciones -> instruccion instrucciones .)
    BREAK           reduce using rule 15 (instrucciones -> instruccion instrucciones .)


state 53

    (31) def -> DEF LP . ID COMMA TYPE COMMA value RP SEMICOLON
    (32) def -> DEF LP . ID COMMA TYPE RP SEMICOLON

    ID              shift and go to state 72


state 54

    (72) change -> ID LP . value RP SEMICOLON
    (50) value -> . INTEGER
    (51) value -> . BOOL
    (52) value -> . expression
    (53) value -> . ID
    (54) value -> . not
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . term
    (36) not -> . NOT LP ID RP
    (76) term -> . term STAR factor
    (77) term -> . term SLASH factor
    (78) term -> . factor
    (79) factor -> . INTEGER
    (80) factor -> . LP expression RP

    INTEGER         shift and go to state 76
    BOOL            shift and go to state 77
    ID              shift and go to state 73
    NOT             shift and go to state 40
    LP              shift and go to state 74

    value                          shift and go to state 75
    expression                     shift and go to state 78
    not                            shift and go to state 79
    term                           shift and go to state 80
    factor                         shift and go to state 81

state 55

    (33) call -> CALL LP . ID RP SEMICOLON

    ID              shift and go to state 82


state 56

    (34) alter -> ALTER LP . ID COMMA INTEGER RP SEMICOLON
    (35) alter -> ALTER LP . ID COMMA ID RP SEMICOLON

    ID              shift and go to state 83


state 57

    (36) not -> NOT LP . ID RP

    ID              shift and go to state 84


state 58

    (38) print -> PRINT LP . prints RP SEMICOLON
    (39) prints -> . printexpr
    (40) prints -> . prints printexpr
    (41) printexpr -> . STRING
    (42) printexpr -> . ID

    STRING          shift and go to state 87
    ID              shift and go to state 88

    prints                         shift and go to state 85
    printexpr                      shift and go to state 86

state 59

    (43) iterative -> WHILE LP . condicion RP LP instrucciones RP SEMICOLON
    (63) condicion -> . oper GT oper
    (64) condicion -> . oper LT oper
    (65) condicion -> . oper EQUAL oper
    (66) condicion -> . oper DIF oper
    (67) condicion -> . oper GTE oper
    (68) condicion -> . oper LTE oper
    (69) condicion -> . istrue
    (70) oper -> . value
    (71) oper -> . expression
    (37) istrue -> . ISTRUE LP ID RP SEMICOLON
    (50) value -> . INTEGER
    (51) value -> . BOOL
    (52) value -> . expression
    (53) value -> . ID
    (54) value -> . not
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . term
    (36) not -> . NOT LP ID RP
    (76) term -> . term STAR factor
    (77) term -> . term SLASH factor
    (78) term -> . factor
    (79) factor -> . INTEGER
    (80) factor -> . LP expression RP

    ISTRUE          shift and go to state 47
    INTEGER         shift and go to state 76
    BOOL            shift and go to state 77
    ID              shift and go to state 73
    NOT             shift and go to state 40
    LP              shift and go to state 74

    condicion                      shift and go to state 89
    oper                           shift and go to state 90
    istrue                         shift and go to state 91
    value                          shift and go to state 92
    expression                     shift and go to state 93
    not                            shift and go to state 79
    term                           shift and go to state 80
    factor                         shift and go to state 81

state 60

    (44) iterative -> UNTIL LP . instrucciones RP LP condicion RP SEMICOLON
    (15) instrucciones -> . instruccion instrucciones
    (16) instrucciones -> . instruccion
    (17) instruccion -> . def
    (18) instruccion -> . call
    (19) instruccion -> . alter
    (20) instruccion -> . not
    (21) instruccion -> . print
    (22) instruccion -> . iterative
    (23) instruccion -> . case
    (24) instruccion -> . mover
    (25) instruccion -> . aleatorio
    (26) instruccion -> . istrue
    (27) instruccion -> . repeat
    (28) instruccion -> . change
    (29) instruccion -> . comment
    (31) def -> . DEF LP ID COMMA TYPE COMMA value RP SEMICOLON
    (32) def -> . DEF LP ID COMMA TYPE RP SEMICOLON
    (33) call -> . CALL LP ID RP SEMICOLON
    (34) alter -> . ALTER LP ID COMMA INTEGER RP SEMICOLON
    (35) alter -> . ALTER LP ID COMMA ID RP SEMICOLON
    (36) not -> . NOT LP ID RP
    (38) print -> . PRINT LP prints RP SEMICOLON
    (43) iterative -> . WHILE LP condicion RP LP instrucciones RP SEMICOLON
    (44) iterative -> . UNTIL LP instrucciones RP LP condicion RP SEMICOLON
    (45) case -> . CASE funciones SEMICOLON
    (46) case -> . CASE ID funciones SEMICOLON
    (47) mover -> . MOVER LP DIR RP SEMICOLON
    (48) aleatorio -> . ALEATORIO LP RP SEMICOLON
    (37) istrue -> . ISTRUE LP ID RP SEMICOLON
    (49) repeat -> . REPEAT LP instrucciones break RP SEMICOLON
    (72) change -> . ID LP value RP SEMICOLON
    (81) comment -> . COMMENT

    DEF             shift and go to state 36
    CALL            shift and go to state 38
    ALTER           shift and go to state 39
    NOT             shift and go to state 40
    PRINT           shift and go to state 41
    WHILE           shift and go to state 42
    UNTIL           shift and go to state 43
    CASE            shift and go to state 44
    MOVER           shift and go to state 45
    ALEATORIO       shift and go to state 46
    ISTRUE          shift and go to state 47
    REPEAT          shift and go to state 48
    ID              shift and go to state 37
    COMMENT         shift and go to state 3

    instrucciones                  shift and go to state 94
    instruccion                    shift and go to state 22
    def                            shift and go to state 23
    call                           shift and go to state 24
    alter                          shift and go to state 25
    not                            shift and go to state 26
    print                          shift and go to state 27
    iterative                      shift and go to state 28
    case                           shift and go to state 29
    mover                          shift and go to state 30
    aleatorio                      shift and go to state 31
    istrue                         shift and go to state 32
    repeat                         shift and go to state 33
    change                         shift and go to state 34
    comment                        shift and go to state 35

state 61

    (45) case -> CASE funciones . SEMICOLON
    (56) funciones -> funciones . funcion
    (57) funcion -> . when then
    (58) funcion -> . when then else
    (59) when -> . WHEN LP condicion RP
    (60) when -> . WHEN value

    SEMICOLON       shift and go to state 95
    WHEN            shift and go to state 65

    funcion                        shift and go to state 96
    when                           shift and go to state 64

state 62

    (46) case -> CASE ID . funciones SEMICOLON
    (55) funciones -> . funcion
    (56) funciones -> . funciones funcion
    (57) funcion -> . when then
    (58) funcion -> . when then else
    (59) when -> . WHEN LP condicion RP
    (60) when -> . WHEN value

    WHEN            shift and go to state 65

    funciones                      shift and go to state 97
    funcion                        shift and go to state 63
    when                           shift and go to state 64

state 63

    (55) funciones -> funcion .

    SEMICOLON       reduce using rule 55 (funciones -> funcion .)
    WHEN            reduce using rule 55 (funciones -> funcion .)


state 64

    (57) funcion -> when . then
    (58) funcion -> when . then else
    (61) then -> . THEN LP instrucciones RP

    THEN            shift and go to state 99

    then                           shift and go to state 98

state 65

    (59) when -> WHEN . LP condicion RP
    (60) when -> WHEN . value
    (50) value -> . INTEGER
    (51) value -> . BOOL
    (52) value -> . expression
    (53) value -> . ID
    (54) value -> . not
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . term
    (36) not -> . NOT LP ID RP
    (76) term -> . term STAR factor
    (77) term -> . term SLASH factor
    (78) term -> . factor
    (79) factor -> . INTEGER
    (80) factor -> . LP expression RP

    LP              shift and go to state 100
    INTEGER         shift and go to state 76
    BOOL            shift and go to state 77
    ID              shift and go to state 73
    NOT             shift and go to state 40

    value                          shift and go to state 101
    expression                     shift and go to state 78
    not                            shift and go to state 79
    term                           shift and go to state 80
    factor                         shift and go to state 81

state 66

    (47) mover -> MOVER LP . DIR RP SEMICOLON

    DIR             shift and go to state 102


state 67

    (48) aleatorio -> ALEATORIO LP . RP SEMICOLON

    RP              shift and go to state 103


state 68

    (37) istrue -> ISTRUE LP . ID RP SEMICOLON

    ID              shift and go to state 104


state 69

    (49) repeat -> REPEAT LP . instrucciones break RP SEMICOLON
    (15) instrucciones -> . instruccion instrucciones
    (16) instrucciones -> . instruccion
    (17) instruccion -> . def
    (18) instruccion -> . call
    (19) instruccion -> . alter
    (20) instruccion -> . not
    (21) instruccion -> . print
    (22) instruccion -> . iterative
    (23) instruccion -> . case
    (24) instruccion -> . mover
    (25) instruccion -> . aleatorio
    (26) instruccion -> . istrue
    (27) instruccion -> . repeat
    (28) instruccion -> . change
    (29) instruccion -> . comment
    (31) def -> . DEF LP ID COMMA TYPE COMMA value RP SEMICOLON
    (32) def -> . DEF LP ID COMMA TYPE RP SEMICOLON
    (33) call -> . CALL LP ID RP SEMICOLON
    (34) alter -> . ALTER LP ID COMMA INTEGER RP SEMICOLON
    (35) alter -> . ALTER LP ID COMMA ID RP SEMICOLON
    (36) not -> . NOT LP ID RP
    (38) print -> . PRINT LP prints RP SEMICOLON
    (43) iterative -> . WHILE LP condicion RP LP instrucciones RP SEMICOLON
    (44) iterative -> . UNTIL LP instrucciones RP LP condicion RP SEMICOLON
    (45) case -> . CASE funciones SEMICOLON
    (46) case -> . CASE ID funciones SEMICOLON
    (47) mover -> . MOVER LP DIR RP SEMICOLON
    (48) aleatorio -> . ALEATORIO LP RP SEMICOLON
    (37) istrue -> . ISTRUE LP ID RP SEMICOLON
    (49) repeat -> . REPEAT LP instrucciones break RP SEMICOLON
    (72) change -> . ID LP value RP SEMICOLON
    (81) comment -> . COMMENT

    DEF             shift and go to state 36
    CALL            shift and go to state 38
    ALTER           shift and go to state 39
    NOT             shift and go to state 40
    PRINT           shift and go to state 41
    WHILE           shift and go to state 42
    UNTIL           shift and go to state 43
    CASE            shift and go to state 44
    MOVER           shift and go to state 45
    ALEATORIO       shift and go to state 46
    ISTRUE          shift and go to state 47
    REPEAT          shift and go to state 48
    ID              shift and go to state 37
    COMMENT         shift and go to state 3

    instrucciones                  shift and go to state 105
    instruccion                    shift and go to state 22
    def                            shift and go to state 23
    call                           shift and go to state 24
    alter                          shift and go to state 25
    not                            shift and go to state 26
    print                          shift and go to state 27
    iterative                      shift and go to state 28
    case                           shift and go to state 29
    mover                          shift and go to state 30
    aleatorio                      shift and go to state 31
    istrue                         shift and go to state 32
    repeat                         shift and go to state 33
    change                         shift and go to state 34
    comment                        shift and go to state 35

state 70

    (12) proc -> PROC ID LP instrucciones . RP SEMICOLON

    RP              shift and go to state 106


state 71

    (13) main -> MAIN LP instrucciones RP SEMICOLON .

    PROC            reduce using rule 13 (main -> MAIN LP instrucciones RP SEMICOLON .)
    COMMENT         reduce using rule 13 (main -> MAIN LP instrucciones RP SEMICOLON .)
    $end            reduce using rule 13 (main -> MAIN LP instrucciones RP SEMICOLON .)


state 72

    (31) def -> DEF LP ID . COMMA TYPE COMMA value RP SEMICOLON
    (32) def -> DEF LP ID . COMMA TYPE RP SEMICOLON

    COMMA           shift and go to state 107


state 73

    (53) value -> ID .

    RP              reduce using rule 53 (value -> ID .)
    GT              reduce using rule 53 (value -> ID .)
    LT              reduce using rule 53 (value -> ID .)
    EQUAL           reduce using rule 53 (value -> ID .)
    DIF             reduce using rule 53 (value -> ID .)
    GTE             reduce using rule 53 (value -> ID .)
    LTE             reduce using rule 53 (value -> ID .)
    THEN            reduce using rule 53 (value -> ID .)


state 74

    (80) factor -> LP . expression RP
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . term
    (76) term -> . term STAR factor
    (77) term -> . term SLASH factor
    (78) term -> . factor
    (79) factor -> . INTEGER
    (80) factor -> . LP expression RP

    INTEGER         shift and go to state 109
    LP              shift and go to state 74

    expression                     shift and go to state 108
    term                           shift and go to state 80
    factor                         shift and go to state 81

state 75

    (72) change -> ID LP value . RP SEMICOLON

    RP              shift and go to state 110


state 76

    (50) value -> INTEGER .
    (79) factor -> INTEGER .

  ! reduce/reduce conflict for RP resolved using rule 50 (value -> INTEGER .)
  ! reduce/reduce conflict for GT resolved using rule 50 (value -> INTEGER .)
  ! reduce/reduce conflict for LT resolved using rule 50 (value -> INTEGER .)
  ! reduce/reduce conflict for EQUAL resolved using rule 50 (value -> INTEGER .)
  ! reduce/reduce conflict for DIF resolved using rule 50 (value -> INTEGER .)
  ! reduce/reduce conflict for GTE resolved using rule 50 (value -> INTEGER .)
  ! reduce/reduce conflict for LTE resolved using rule 50 (value -> INTEGER .)
  ! reduce/reduce conflict for THEN resolved using rule 50 (value -> INTEGER .)
    RP              reduce using rule 50 (value -> INTEGER .)
    GT              reduce using rule 50 (value -> INTEGER .)
    LT              reduce using rule 50 (value -> INTEGER .)
    EQUAL           reduce using rule 50 (value -> INTEGER .)
    DIF             reduce using rule 50 (value -> INTEGER .)
    GTE             reduce using rule 50 (value -> INTEGER .)
    LTE             reduce using rule 50 (value -> INTEGER .)
    THEN            reduce using rule 50 (value -> INTEGER .)
    STAR            reduce using rule 79 (factor -> INTEGER .)
    SLASH           reduce using rule 79 (factor -> INTEGER .)
    PLUS            reduce using rule 79 (factor -> INTEGER .)
    MINUS           reduce using rule 79 (factor -> INTEGER .)

  ! RP              [ reduce using rule 79 (factor -> INTEGER .) ]
  ! GT              [ reduce using rule 79 (factor -> INTEGER .) ]
  ! LT              [ reduce using rule 79 (factor -> INTEGER .) ]
  ! EQUAL           [ reduce using rule 79 (factor -> INTEGER .) ]
  ! DIF             [ reduce using rule 79 (factor -> INTEGER .) ]
  ! GTE             [ reduce using rule 79 (factor -> INTEGER .) ]
  ! LTE             [ reduce using rule 79 (factor -> INTEGER .) ]
  ! THEN            [ reduce using rule 79 (factor -> INTEGER .) ]


state 77

    (51) value -> BOOL .

    RP              reduce using rule 51 (value -> BOOL .)
    GT              reduce using rule 51 (value -> BOOL .)
    LT              reduce using rule 51 (value -> BOOL .)
    EQUAL           reduce using rule 51 (value -> BOOL .)
    DIF             reduce using rule 51 (value -> BOOL .)
    GTE             reduce using rule 51 (value -> BOOL .)
    LTE             reduce using rule 51 (value -> BOOL .)
    THEN            reduce using rule 51 (value -> BOOL .)


state 78

    (52) value -> expression .
    (73) expression -> expression . PLUS term
    (74) expression -> expression . MINUS term

    RP              reduce using rule 52 (value -> expression .)
    THEN            reduce using rule 52 (value -> expression .)
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112


state 79

    (54) value -> not .

    RP              reduce using rule 54 (value -> not .)
    GT              reduce using rule 54 (value -> not .)
    LT              reduce using rule 54 (value -> not .)
    EQUAL           reduce using rule 54 (value -> not .)
    DIF             reduce using rule 54 (value -> not .)
    GTE             reduce using rule 54 (value -> not .)
    LTE             reduce using rule 54 (value -> not .)
    THEN            reduce using rule 54 (value -> not .)


state 80

    (75) expression -> term .
    (76) term -> term . STAR factor
    (77) term -> term . SLASH factor

    PLUS            reduce using rule 75 (expression -> term .)
    MINUS           reduce using rule 75 (expression -> term .)
    RP              reduce using rule 75 (expression -> term .)
    GT              reduce using rule 75 (expression -> term .)
    LT              reduce using rule 75 (expression -> term .)
    EQUAL           reduce using rule 75 (expression -> term .)
    DIF             reduce using rule 75 (expression -> term .)
    GTE             reduce using rule 75 (expression -> term .)
    LTE             reduce using rule 75 (expression -> term .)
    THEN            reduce using rule 75 (expression -> term .)
    STAR            shift and go to state 113
    SLASH           shift and go to state 114


state 81

    (78) term -> factor .

    STAR            reduce using rule 78 (term -> factor .)
    SLASH           reduce using rule 78 (term -> factor .)
    PLUS            reduce using rule 78 (term -> factor .)
    MINUS           reduce using rule 78 (term -> factor .)
    RP              reduce using rule 78 (term -> factor .)
    GT              reduce using rule 78 (term -> factor .)
    LT              reduce using rule 78 (term -> factor .)
    EQUAL           reduce using rule 78 (term -> factor .)
    DIF             reduce using rule 78 (term -> factor .)
    GTE             reduce using rule 78 (term -> factor .)
    LTE             reduce using rule 78 (term -> factor .)
    THEN            reduce using rule 78 (term -> factor .)


state 82

    (33) call -> CALL LP ID . RP SEMICOLON

    RP              shift and go to state 115


state 83

    (34) alter -> ALTER LP ID . COMMA INTEGER RP SEMICOLON
    (35) alter -> ALTER LP ID . COMMA ID RP SEMICOLON

    COMMA           shift and go to state 116


state 84

    (36) not -> NOT LP ID . RP

    RP              shift and go to state 117


state 85

    (38) print -> PRINT LP prints . RP SEMICOLON
    (40) prints -> prints . printexpr
    (41) printexpr -> . STRING
    (42) printexpr -> . ID

    RP              shift and go to state 118
    STRING          shift and go to state 87
    ID              shift and go to state 88

    printexpr                      shift and go to state 119

state 86

    (39) prints -> printexpr .

    RP              reduce using rule 39 (prints -> printexpr .)
    STRING          reduce using rule 39 (prints -> printexpr .)
    ID              reduce using rule 39 (prints -> printexpr .)


state 87

    (41) printexpr -> STRING .

    RP              reduce using rule 41 (printexpr -> STRING .)
    STRING          reduce using rule 41 (printexpr -> STRING .)
    ID              reduce using rule 41 (printexpr -> STRING .)


state 88

    (42) printexpr -> ID .

    RP              reduce using rule 42 (printexpr -> ID .)
    STRING          reduce using rule 42 (printexpr -> ID .)
    ID              reduce using rule 42 (printexpr -> ID .)


state 89

    (43) iterative -> WHILE LP condicion . RP LP instrucciones RP SEMICOLON

    RP              shift and go to state 120


state 90

    (63) condicion -> oper . GT oper
    (64) condicion -> oper . LT oper
    (65) condicion -> oper . EQUAL oper
    (66) condicion -> oper . DIF oper
    (67) condicion -> oper . GTE oper
    (68) condicion -> oper . LTE oper

    GT              shift and go to state 121
    LT              shift and go to state 122
    EQUAL           shift and go to state 123
    DIF             shift and go to state 124
    GTE             shift and go to state 125
    LTE             shift and go to state 126


state 91

    (69) condicion -> istrue .

    RP              reduce using rule 69 (condicion -> istrue .)


state 92

    (70) oper -> value .

    GT              reduce using rule 70 (oper -> value .)
    LT              reduce using rule 70 (oper -> value .)
    EQUAL           reduce using rule 70 (oper -> value .)
    DIF             reduce using rule 70 (oper -> value .)
    GTE             reduce using rule 70 (oper -> value .)
    LTE             reduce using rule 70 (oper -> value .)
    RP              reduce using rule 70 (oper -> value .)


state 93

    (71) oper -> expression .
    (52) value -> expression .
    (73) expression -> expression . PLUS term
    (74) expression -> expression . MINUS term

  ! reduce/reduce conflict for GT resolved using rule 52 (value -> expression .)
  ! reduce/reduce conflict for LT resolved using rule 52 (value -> expression .)
  ! reduce/reduce conflict for EQUAL resolved using rule 52 (value -> expression .)
  ! reduce/reduce conflict for DIF resolved using rule 52 (value -> expression .)
  ! reduce/reduce conflict for GTE resolved using rule 52 (value -> expression .)
  ! reduce/reduce conflict for LTE resolved using rule 52 (value -> expression .)
  ! reduce/reduce conflict for RP resolved using rule 52 (value -> expression .)
    GT              reduce using rule 52 (value -> expression .)
    LT              reduce using rule 52 (value -> expression .)
    EQUAL           reduce using rule 52 (value -> expression .)
    DIF             reduce using rule 52 (value -> expression .)
    GTE             reduce using rule 52 (value -> expression .)
    LTE             reduce using rule 52 (value -> expression .)
    RP              reduce using rule 52 (value -> expression .)
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112

  ! GT              [ reduce using rule 71 (oper -> expression .) ]
  ! LT              [ reduce using rule 71 (oper -> expression .) ]
  ! EQUAL           [ reduce using rule 71 (oper -> expression .) ]
  ! DIF             [ reduce using rule 71 (oper -> expression .) ]
  ! GTE             [ reduce using rule 71 (oper -> expression .) ]
  ! LTE             [ reduce using rule 71 (oper -> expression .) ]
  ! RP              [ reduce using rule 71 (oper -> expression .) ]


state 94

    (44) iterative -> UNTIL LP instrucciones . RP LP condicion RP SEMICOLON

    RP              shift and go to state 127


state 95

    (45) case -> CASE funciones SEMICOLON .

    DEF             reduce using rule 45 (case -> CASE funciones SEMICOLON .)
    CALL            reduce using rule 45 (case -> CASE funciones SEMICOLON .)
    ALTER           reduce using rule 45 (case -> CASE funciones SEMICOLON .)
    NOT             reduce using rule 45 (case -> CASE funciones SEMICOLON .)
    PRINT           reduce using rule 45 (case -> CASE funciones SEMICOLON .)
    WHILE           reduce using rule 45 (case -> CASE funciones SEMICOLON .)
    UNTIL           reduce using rule 45 (case -> CASE funciones SEMICOLON .)
    CASE            reduce using rule 45 (case -> CASE funciones SEMICOLON .)
    MOVER           reduce using rule 45 (case -> CASE funciones SEMICOLON .)
    ALEATORIO       reduce using rule 45 (case -> CASE funciones SEMICOLON .)
    ISTRUE          reduce using rule 45 (case -> CASE funciones SEMICOLON .)
    REPEAT          reduce using rule 45 (case -> CASE funciones SEMICOLON .)
    ID              reduce using rule 45 (case -> CASE funciones SEMICOLON .)
    COMMENT         reduce using rule 45 (case -> CASE funciones SEMICOLON .)
    RP              reduce using rule 45 (case -> CASE funciones SEMICOLON .)
    BREAK           reduce using rule 45 (case -> CASE funciones SEMICOLON .)


state 96

    (56) funciones -> funciones funcion .

    SEMICOLON       reduce using rule 56 (funciones -> funciones funcion .)
    WHEN            reduce using rule 56 (funciones -> funciones funcion .)


state 97

    (46) case -> CASE ID funciones . SEMICOLON
    (56) funciones -> funciones . funcion
    (57) funcion -> . when then
    (58) funcion -> . when then else
    (59) when -> . WHEN LP condicion RP
    (60) when -> . WHEN value

    SEMICOLON       shift and go to state 128
    WHEN            shift and go to state 65

    funcion                        shift and go to state 96
    when                           shift and go to state 64

state 98

    (57) funcion -> when then .
    (58) funcion -> when then . else
    (62) else -> . ELSE LP instrucciones RP

    SEMICOLON       reduce using rule 57 (funcion -> when then .)
    WHEN            reduce using rule 57 (funcion -> when then .)
    ELSE            shift and go to state 130

    else                           shift and go to state 129

state 99

    (61) then -> THEN . LP instrucciones RP

    LP              shift and go to state 131


state 100

    (59) when -> WHEN LP . condicion RP
    (80) factor -> LP . expression RP
    (63) condicion -> . oper GT oper
    (64) condicion -> . oper LT oper
    (65) condicion -> . oper EQUAL oper
    (66) condicion -> . oper DIF oper
    (67) condicion -> . oper GTE oper
    (68) condicion -> . oper LTE oper
    (69) condicion -> . istrue
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . term
    (70) oper -> . value
    (71) oper -> . expression
    (37) istrue -> . ISTRUE LP ID RP SEMICOLON
    (76) term -> . term STAR factor
    (77) term -> . term SLASH factor
    (78) term -> . factor
    (50) value -> . INTEGER
    (51) value -> . BOOL
    (52) value -> . expression
    (53) value -> . ID
    (54) value -> . not
    (79) factor -> . INTEGER
    (80) factor -> . LP expression RP
    (36) not -> . NOT LP ID RP

    ISTRUE          shift and go to state 47
    INTEGER         shift and go to state 76
    BOOL            shift and go to state 77
    ID              shift and go to state 73
    LP              shift and go to state 74
    NOT             shift and go to state 40

    condicion                      shift and go to state 132
    expression                     shift and go to state 133
    oper                           shift and go to state 90
    istrue                         shift and go to state 91
    term                           shift and go to state 80
    value                          shift and go to state 92
    factor                         shift and go to state 81
    not                            shift and go to state 79

state 101

    (60) when -> WHEN value .

    THEN            reduce using rule 60 (when -> WHEN value .)


state 102

    (47) mover -> MOVER LP DIR . RP SEMICOLON

    RP              shift and go to state 134


state 103

    (48) aleatorio -> ALEATORIO LP RP . SEMICOLON

    SEMICOLON       shift and go to state 135


state 104

    (37) istrue -> ISTRUE LP ID . RP SEMICOLON

    RP              shift and go to state 136


state 105

    (49) repeat -> REPEAT LP instrucciones . break RP SEMICOLON
    (30) break -> . BREAK

    BREAK           shift and go to state 138

    break                          shift and go to state 137

state 106

    (12) proc -> PROC ID LP instrucciones RP . SEMICOLON

    SEMICOLON       shift and go to state 139


state 107

    (31) def -> DEF LP ID COMMA . TYPE COMMA value RP SEMICOLON
    (32) def -> DEF LP ID COMMA . TYPE RP SEMICOLON

    TYPE            shift and go to state 140


state 108

    (80) factor -> LP expression . RP
    (73) expression -> expression . PLUS term
    (74) expression -> expression . MINUS term

    RP              shift and go to state 141
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112


state 109

    (79) factor -> INTEGER .

    STAR            reduce using rule 79 (factor -> INTEGER .)
    SLASH           reduce using rule 79 (factor -> INTEGER .)
    RP              reduce using rule 79 (factor -> INTEGER .)
    PLUS            reduce using rule 79 (factor -> INTEGER .)
    MINUS           reduce using rule 79 (factor -> INTEGER .)
    GT              reduce using rule 79 (factor -> INTEGER .)
    LT              reduce using rule 79 (factor -> INTEGER .)
    EQUAL           reduce using rule 79 (factor -> INTEGER .)
    DIF             reduce using rule 79 (factor -> INTEGER .)
    GTE             reduce using rule 79 (factor -> INTEGER .)
    LTE             reduce using rule 79 (factor -> INTEGER .)
    THEN            reduce using rule 79 (factor -> INTEGER .)


state 110

    (72) change -> ID LP value RP . SEMICOLON

    SEMICOLON       shift and go to state 142


state 111

    (73) expression -> expression PLUS . term
    (76) term -> . term STAR factor
    (77) term -> . term SLASH factor
    (78) term -> . factor
    (79) factor -> . INTEGER
    (80) factor -> . LP expression RP

    INTEGER         shift and go to state 109
    LP              shift and go to state 74

    term                           shift and go to state 143
    factor                         shift and go to state 81

state 112

    (74) expression -> expression MINUS . term
    (76) term -> . term STAR factor
    (77) term -> . term SLASH factor
    (78) term -> . factor
    (79) factor -> . INTEGER
    (80) factor -> . LP expression RP

    INTEGER         shift and go to state 109
    LP              shift and go to state 74

    term                           shift and go to state 144
    factor                         shift and go to state 81

state 113

    (76) term -> term STAR . factor
    (79) factor -> . INTEGER
    (80) factor -> . LP expression RP

    INTEGER         shift and go to state 109
    LP              shift and go to state 74

    factor                         shift and go to state 145

state 114

    (77) term -> term SLASH . factor
    (79) factor -> . INTEGER
    (80) factor -> . LP expression RP

    INTEGER         shift and go to state 109
    LP              shift and go to state 74

    factor                         shift and go to state 146

state 115

    (33) call -> CALL LP ID RP . SEMICOLON

    SEMICOLON       shift and go to state 147


state 116

    (34) alter -> ALTER LP ID COMMA . INTEGER RP SEMICOLON
    (35) alter -> ALTER LP ID COMMA . ID RP SEMICOLON

    INTEGER         shift and go to state 149
    ID              shift and go to state 148


state 117

    (36) not -> NOT LP ID RP .

    DEF             reduce using rule 36 (not -> NOT LP ID RP .)
    CALL            reduce using rule 36 (not -> NOT LP ID RP .)
    ALTER           reduce using rule 36 (not -> NOT LP ID RP .)
    NOT             reduce using rule 36 (not -> NOT LP ID RP .)
    PRINT           reduce using rule 36 (not -> NOT LP ID RP .)
    WHILE           reduce using rule 36 (not -> NOT LP ID RP .)
    UNTIL           reduce using rule 36 (not -> NOT LP ID RP .)
    CASE            reduce using rule 36 (not -> NOT LP ID RP .)
    MOVER           reduce using rule 36 (not -> NOT LP ID RP .)
    ALEATORIO       reduce using rule 36 (not -> NOT LP ID RP .)
    ISTRUE          reduce using rule 36 (not -> NOT LP ID RP .)
    REPEAT          reduce using rule 36 (not -> NOT LP ID RP .)
    ID              reduce using rule 36 (not -> NOT LP ID RP .)
    COMMENT         reduce using rule 36 (not -> NOT LP ID RP .)
    RP              reduce using rule 36 (not -> NOT LP ID RP .)
    BREAK           reduce using rule 36 (not -> NOT LP ID RP .)
    GT              reduce using rule 36 (not -> NOT LP ID RP .)
    LT              reduce using rule 36 (not -> NOT LP ID RP .)
    EQUAL           reduce using rule 36 (not -> NOT LP ID RP .)
    DIF             reduce using rule 36 (not -> NOT LP ID RP .)
    GTE             reduce using rule 36 (not -> NOT LP ID RP .)
    LTE             reduce using rule 36 (not -> NOT LP ID RP .)
    THEN            reduce using rule 36 (not -> NOT LP ID RP .)


state 118

    (38) print -> PRINT LP prints RP . SEMICOLON

    SEMICOLON       shift and go to state 150


state 119

    (40) prints -> prints printexpr .

    RP              reduce using rule 40 (prints -> prints printexpr .)
    STRING          reduce using rule 40 (prints -> prints printexpr .)
    ID              reduce using rule 40 (prints -> prints printexpr .)


state 120

    (43) iterative -> WHILE LP condicion RP . LP instrucciones RP SEMICOLON

    LP              shift and go to state 151


state 121

    (63) condicion -> oper GT . oper
    (70) oper -> . value
    (71) oper -> . expression
    (50) value -> . INTEGER
    (51) value -> . BOOL
    (52) value -> . expression
    (53) value -> . ID
    (54) value -> . not
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . term
    (36) not -> . NOT LP ID RP
    (76) term -> . term STAR factor
    (77) term -> . term SLASH factor
    (78) term -> . factor
    (79) factor -> . INTEGER
    (80) factor -> . LP expression RP

    INTEGER         shift and go to state 76
    BOOL            shift and go to state 77
    ID              shift and go to state 73
    NOT             shift and go to state 40
    LP              shift and go to state 74

    oper                           shift and go to state 152
    value                          shift and go to state 92
    expression                     shift and go to state 93
    not                            shift and go to state 79
    term                           shift and go to state 80
    factor                         shift and go to state 81

state 122

    (64) condicion -> oper LT . oper
    (70) oper -> . value
    (71) oper -> . expression
    (50) value -> . INTEGER
    (51) value -> . BOOL
    (52) value -> . expression
    (53) value -> . ID
    (54) value -> . not
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . term
    (36) not -> . NOT LP ID RP
    (76) term -> . term STAR factor
    (77) term -> . term SLASH factor
    (78) term -> . factor
    (79) factor -> . INTEGER
    (80) factor -> . LP expression RP

    INTEGER         shift and go to state 76
    BOOL            shift and go to state 77
    ID              shift and go to state 73
    NOT             shift and go to state 40
    LP              shift and go to state 74

    oper                           shift and go to state 153
    value                          shift and go to state 92
    expression                     shift and go to state 93
    not                            shift and go to state 79
    term                           shift and go to state 80
    factor                         shift and go to state 81

state 123

    (65) condicion -> oper EQUAL . oper
    (70) oper -> . value
    (71) oper -> . expression
    (50) value -> . INTEGER
    (51) value -> . BOOL
    (52) value -> . expression
    (53) value -> . ID
    (54) value -> . not
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . term
    (36) not -> . NOT LP ID RP
    (76) term -> . term STAR factor
    (77) term -> . term SLASH factor
    (78) term -> . factor
    (79) factor -> . INTEGER
    (80) factor -> . LP expression RP

    INTEGER         shift and go to state 76
    BOOL            shift and go to state 77
    ID              shift and go to state 73
    NOT             shift and go to state 40
    LP              shift and go to state 74

    oper                           shift and go to state 154
    value                          shift and go to state 92
    expression                     shift and go to state 93
    not                            shift and go to state 79
    term                           shift and go to state 80
    factor                         shift and go to state 81

state 124

    (66) condicion -> oper DIF . oper
    (70) oper -> . value
    (71) oper -> . expression
    (50) value -> . INTEGER
    (51) value -> . BOOL
    (52) value -> . expression
    (53) value -> . ID
    (54) value -> . not
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . term
    (36) not -> . NOT LP ID RP
    (76) term -> . term STAR factor
    (77) term -> . term SLASH factor
    (78) term -> . factor
    (79) factor -> . INTEGER
    (80) factor -> . LP expression RP

    INTEGER         shift and go to state 76
    BOOL            shift and go to state 77
    ID              shift and go to state 73
    NOT             shift and go to state 40
    LP              shift and go to state 74

    oper                           shift and go to state 155
    value                          shift and go to state 92
    expression                     shift and go to state 93
    not                            shift and go to state 79
    term                           shift and go to state 80
    factor                         shift and go to state 81

state 125

    (67) condicion -> oper GTE . oper
    (70) oper -> . value
    (71) oper -> . expression
    (50) value -> . INTEGER
    (51) value -> . BOOL
    (52) value -> . expression
    (53) value -> . ID
    (54) value -> . not
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . term
    (36) not -> . NOT LP ID RP
    (76) term -> . term STAR factor
    (77) term -> . term SLASH factor
    (78) term -> . factor
    (79) factor -> . INTEGER
    (80) factor -> . LP expression RP

    INTEGER         shift and go to state 76
    BOOL            shift and go to state 77
    ID              shift and go to state 73
    NOT             shift and go to state 40
    LP              shift and go to state 74

    oper                           shift and go to state 156
    value                          shift and go to state 92
    expression                     shift and go to state 93
    not                            shift and go to state 79
    term                           shift and go to state 80
    factor                         shift and go to state 81

state 126

    (68) condicion -> oper LTE . oper
    (70) oper -> . value
    (71) oper -> . expression
    (50) value -> . INTEGER
    (51) value -> . BOOL
    (52) value -> . expression
    (53) value -> . ID
    (54) value -> . not
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . term
    (36) not -> . NOT LP ID RP
    (76) term -> . term STAR factor
    (77) term -> . term SLASH factor
    (78) term -> . factor
    (79) factor -> . INTEGER
    (80) factor -> . LP expression RP

    INTEGER         shift and go to state 76
    BOOL            shift and go to state 77
    ID              shift and go to state 73
    NOT             shift and go to state 40
    LP              shift and go to state 74

    oper                           shift and go to state 157
    value                          shift and go to state 92
    expression                     shift and go to state 93
    not                            shift and go to state 79
    term                           shift and go to state 80
    factor                         shift and go to state 81

state 127

    (44) iterative -> UNTIL LP instrucciones RP . LP condicion RP SEMICOLON

    LP              shift and go to state 158


state 128

    (46) case -> CASE ID funciones SEMICOLON .

    DEF             reduce using rule 46 (case -> CASE ID funciones SEMICOLON .)
    CALL            reduce using rule 46 (case -> CASE ID funciones SEMICOLON .)
    ALTER           reduce using rule 46 (case -> CASE ID funciones SEMICOLON .)
    NOT             reduce using rule 46 (case -> CASE ID funciones SEMICOLON .)
    PRINT           reduce using rule 46 (case -> CASE ID funciones SEMICOLON .)
    WHILE           reduce using rule 46 (case -> CASE ID funciones SEMICOLON .)
    UNTIL           reduce using rule 46 (case -> CASE ID funciones SEMICOLON .)
    CASE            reduce using rule 46 (case -> CASE ID funciones SEMICOLON .)
    MOVER           reduce using rule 46 (case -> CASE ID funciones SEMICOLON .)
    ALEATORIO       reduce using rule 46 (case -> CASE ID funciones SEMICOLON .)
    ISTRUE          reduce using rule 46 (case -> CASE ID funciones SEMICOLON .)
    REPEAT          reduce using rule 46 (case -> CASE ID funciones SEMICOLON .)
    ID              reduce using rule 46 (case -> CASE ID funciones SEMICOLON .)
    COMMENT         reduce using rule 46 (case -> CASE ID funciones SEMICOLON .)
    RP              reduce using rule 46 (case -> CASE ID funciones SEMICOLON .)
    BREAK           reduce using rule 46 (case -> CASE ID funciones SEMICOLON .)


state 129

    (58) funcion -> when then else .

    SEMICOLON       reduce using rule 58 (funcion -> when then else .)
    WHEN            reduce using rule 58 (funcion -> when then else .)


state 130

    (62) else -> ELSE . LP instrucciones RP

    LP              shift and go to state 159


state 131

    (61) then -> THEN LP . instrucciones RP
    (15) instrucciones -> . instruccion instrucciones
    (16) instrucciones -> . instruccion
    (17) instruccion -> . def
    (18) instruccion -> . call
    (19) instruccion -> . alter
    (20) instruccion -> . not
    (21) instruccion -> . print
    (22) instruccion -> . iterative
    (23) instruccion -> . case
    (24) instruccion -> . mover
    (25) instruccion -> . aleatorio
    (26) instruccion -> . istrue
    (27) instruccion -> . repeat
    (28) instruccion -> . change
    (29) instruccion -> . comment
    (31) def -> . DEF LP ID COMMA TYPE COMMA value RP SEMICOLON
    (32) def -> . DEF LP ID COMMA TYPE RP SEMICOLON
    (33) call -> . CALL LP ID RP SEMICOLON
    (34) alter -> . ALTER LP ID COMMA INTEGER RP SEMICOLON
    (35) alter -> . ALTER LP ID COMMA ID RP SEMICOLON
    (36) not -> . NOT LP ID RP
    (38) print -> . PRINT LP prints RP SEMICOLON
    (43) iterative -> . WHILE LP condicion RP LP instrucciones RP SEMICOLON
    (44) iterative -> . UNTIL LP instrucciones RP LP condicion RP SEMICOLON
    (45) case -> . CASE funciones SEMICOLON
    (46) case -> . CASE ID funciones SEMICOLON
    (47) mover -> . MOVER LP DIR RP SEMICOLON
    (48) aleatorio -> . ALEATORIO LP RP SEMICOLON
    (37) istrue -> . ISTRUE LP ID RP SEMICOLON
    (49) repeat -> . REPEAT LP instrucciones break RP SEMICOLON
    (72) change -> . ID LP value RP SEMICOLON
    (81) comment -> . COMMENT

    DEF             shift and go to state 36
    CALL            shift and go to state 38
    ALTER           shift and go to state 39
    NOT             shift and go to state 40
    PRINT           shift and go to state 41
    WHILE           shift and go to state 42
    UNTIL           shift and go to state 43
    CASE            shift and go to state 44
    MOVER           shift and go to state 45
    ALEATORIO       shift and go to state 46
    ISTRUE          shift and go to state 47
    REPEAT          shift and go to state 48
    ID              shift and go to state 37
    COMMENT         shift and go to state 3

    instrucciones                  shift and go to state 160
    instruccion                    shift and go to state 22
    def                            shift and go to state 23
    call                           shift and go to state 24
    alter                          shift and go to state 25
    not                            shift and go to state 26
    print                          shift and go to state 27
    iterative                      shift and go to state 28
    case                           shift and go to state 29
    mover                          shift and go to state 30
    aleatorio                      shift and go to state 31
    istrue                         shift and go to state 32
    repeat                         shift and go to state 33
    change                         shift and go to state 34
    comment                        shift and go to state 35

state 132

    (59) when -> WHEN LP condicion . RP

    RP              shift and go to state 161


state 133

    (80) factor -> LP expression . RP
    (73) expression -> expression . PLUS term
    (74) expression -> expression . MINUS term
    (71) oper -> expression .
    (52) value -> expression .

  ! reduce/reduce conflict for GT resolved using rule 52 (value -> expression .)
  ! reduce/reduce conflict for LT resolved using rule 52 (value -> expression .)
  ! reduce/reduce conflict for EQUAL resolved using rule 52 (value -> expression .)
  ! reduce/reduce conflict for DIF resolved using rule 52 (value -> expression .)
  ! reduce/reduce conflict for GTE resolved using rule 52 (value -> expression .)
  ! reduce/reduce conflict for LTE resolved using rule 52 (value -> expression .)
    RP              shift and go to state 141
    PLUS            shift and go to state 111
    MINUS           shift and go to state 112
    GT              reduce using rule 52 (value -> expression .)
    LT              reduce using rule 52 (value -> expression .)
    EQUAL           reduce using rule 52 (value -> expression .)
    DIF             reduce using rule 52 (value -> expression .)
    GTE             reduce using rule 52 (value -> expression .)
    LTE             reduce using rule 52 (value -> expression .)

  ! GT              [ reduce using rule 71 (oper -> expression .) ]
  ! LT              [ reduce using rule 71 (oper -> expression .) ]
  ! EQUAL           [ reduce using rule 71 (oper -> expression .) ]
  ! DIF             [ reduce using rule 71 (oper -> expression .) ]
  ! GTE             [ reduce using rule 71 (oper -> expression .) ]
  ! LTE             [ reduce using rule 71 (oper -> expression .) ]


state 134

    (47) mover -> MOVER LP DIR RP . SEMICOLON

    SEMICOLON       shift and go to state 162


state 135

    (48) aleatorio -> ALEATORIO LP RP SEMICOLON .

    DEF             reduce using rule 48 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    CALL            reduce using rule 48 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    ALTER           reduce using rule 48 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    NOT             reduce using rule 48 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    PRINT           reduce using rule 48 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    WHILE           reduce using rule 48 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    UNTIL           reduce using rule 48 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    CASE            reduce using rule 48 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    MOVER           reduce using rule 48 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    ALEATORIO       reduce using rule 48 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    ISTRUE          reduce using rule 48 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    REPEAT          reduce using rule 48 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    ID              reduce using rule 48 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    COMMENT         reduce using rule 48 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    RP              reduce using rule 48 (aleatorio -> ALEATORIO LP RP SEMICOLON .)
    BREAK           reduce using rule 48 (aleatorio -> ALEATORIO LP RP SEMICOLON .)


state 136

    (37) istrue -> ISTRUE LP ID RP . SEMICOLON

    SEMICOLON       shift and go to state 163


state 137

    (49) repeat -> REPEAT LP instrucciones break . RP SEMICOLON

    RP              shift and go to state 164


state 138

    (30) break -> BREAK .

    RP              reduce using rule 30 (break -> BREAK .)


state 139

    (12) proc -> PROC ID LP instrucciones RP SEMICOLON .

    PROC            reduce using rule 12 (proc -> PROC ID LP instrucciones RP SEMICOLON .)
    MAIN            reduce using rule 12 (proc -> PROC ID LP instrucciones RP SEMICOLON .)
    COMMENT         reduce using rule 12 (proc -> PROC ID LP instrucciones RP SEMICOLON .)
    $end            reduce using rule 12 (proc -> PROC ID LP instrucciones RP SEMICOLON .)


state 140

    (31) def -> DEF LP ID COMMA TYPE . COMMA value RP SEMICOLON
    (32) def -> DEF LP ID COMMA TYPE . RP SEMICOLON

    COMMA           shift and go to state 165
    RP              shift and go to state 166


state 141

    (80) factor -> LP expression RP .

    STAR            reduce using rule 80 (factor -> LP expression RP .)
    SLASH           reduce using rule 80 (factor -> LP expression RP .)
    PLUS            reduce using rule 80 (factor -> LP expression RP .)
    MINUS           reduce using rule 80 (factor -> LP expression RP .)
    RP              reduce using rule 80 (factor -> LP expression RP .)
    GT              reduce using rule 80 (factor -> LP expression RP .)
    LT              reduce using rule 80 (factor -> LP expression RP .)
    EQUAL           reduce using rule 80 (factor -> LP expression RP .)
    DIF             reduce using rule 80 (factor -> LP expression RP .)
    GTE             reduce using rule 80 (factor -> LP expression RP .)
    LTE             reduce using rule 80 (factor -> LP expression RP .)
    THEN            reduce using rule 80 (factor -> LP expression RP .)


state 142

    (72) change -> ID LP value RP SEMICOLON .

    DEF             reduce using rule 72 (change -> ID LP value RP SEMICOLON .)
    CALL            reduce using rule 72 (change -> ID LP value RP SEMICOLON .)
    ALTER           reduce using rule 72 (change -> ID LP value RP SEMICOLON .)
    NOT             reduce using rule 72 (change -> ID LP value RP SEMICOLON .)
    PRINT           reduce using rule 72 (change -> ID LP value RP SEMICOLON .)
    WHILE           reduce using rule 72 (change -> ID LP value RP SEMICOLON .)
    UNTIL           reduce using rule 72 (change -> ID LP value RP SEMICOLON .)
    CASE            reduce using rule 72 (change -> ID LP value RP SEMICOLON .)
    MOVER           reduce using rule 72 (change -> ID LP value RP SEMICOLON .)
    ALEATORIO       reduce using rule 72 (change -> ID LP value RP SEMICOLON .)
    ISTRUE          reduce using rule 72 (change -> ID LP value RP SEMICOLON .)
    REPEAT          reduce using rule 72 (change -> ID LP value RP SEMICOLON .)
    ID              reduce using rule 72 (change -> ID LP value RP SEMICOLON .)
    COMMENT         reduce using rule 72 (change -> ID LP value RP SEMICOLON .)
    RP              reduce using rule 72 (change -> ID LP value RP SEMICOLON .)
    BREAK           reduce using rule 72 (change -> ID LP value RP SEMICOLON .)


state 143

    (73) expression -> expression PLUS term .
    (76) term -> term . STAR factor
    (77) term -> term . SLASH factor

    PLUS            reduce using rule 73 (expression -> expression PLUS term .)
    MINUS           reduce using rule 73 (expression -> expression PLUS term .)
    RP              reduce using rule 73 (expression -> expression PLUS term .)
    GT              reduce using rule 73 (expression -> expression PLUS term .)
    LT              reduce using rule 73 (expression -> expression PLUS term .)
    EQUAL           reduce using rule 73 (expression -> expression PLUS term .)
    DIF             reduce using rule 73 (expression -> expression PLUS term .)
    GTE             reduce using rule 73 (expression -> expression PLUS term .)
    LTE             reduce using rule 73 (expression -> expression PLUS term .)
    THEN            reduce using rule 73 (expression -> expression PLUS term .)
    STAR            shift and go to state 113
    SLASH           shift and go to state 114


state 144

    (74) expression -> expression MINUS term .
    (76) term -> term . STAR factor
    (77) term -> term . SLASH factor

    PLUS            reduce using rule 74 (expression -> expression MINUS term .)
    MINUS           reduce using rule 74 (expression -> expression MINUS term .)
    RP              reduce using rule 74 (expression -> expression MINUS term .)
    GT              reduce using rule 74 (expression -> expression MINUS term .)
    LT              reduce using rule 74 (expression -> expression MINUS term .)
    EQUAL           reduce using rule 74 (expression -> expression MINUS term .)
    DIF             reduce using rule 74 (expression -> expression MINUS term .)
    GTE             reduce using rule 74 (expression -> expression MINUS term .)
    LTE             reduce using rule 74 (expression -> expression MINUS term .)
    THEN            reduce using rule 74 (expression -> expression MINUS term .)
    STAR            shift and go to state 113
    SLASH           shift and go to state 114


state 145

    (76) term -> term STAR factor .

    STAR            reduce using rule 76 (term -> term STAR factor .)
    SLASH           reduce using rule 76 (term -> term STAR factor .)
    PLUS            reduce using rule 76 (term -> term STAR factor .)
    MINUS           reduce using rule 76 (term -> term STAR factor .)
    RP              reduce using rule 76 (term -> term STAR factor .)
    GT              reduce using rule 76 (term -> term STAR factor .)
    LT              reduce using rule 76 (term -> term STAR factor .)
    EQUAL           reduce using rule 76 (term -> term STAR factor .)
    DIF             reduce using rule 76 (term -> term STAR factor .)
    GTE             reduce using rule 76 (term -> term STAR factor .)
    LTE             reduce using rule 76 (term -> term STAR factor .)
    THEN            reduce using rule 76 (term -> term STAR factor .)


state 146

    (77) term -> term SLASH factor .

    STAR            reduce using rule 77 (term -> term SLASH factor .)
    SLASH           reduce using rule 77 (term -> term SLASH factor .)
    PLUS            reduce using rule 77 (term -> term SLASH factor .)
    MINUS           reduce using rule 77 (term -> term SLASH factor .)
    RP              reduce using rule 77 (term -> term SLASH factor .)
    GT              reduce using rule 77 (term -> term SLASH factor .)
    LT              reduce using rule 77 (term -> term SLASH factor .)
    EQUAL           reduce using rule 77 (term -> term SLASH factor .)
    DIF             reduce using rule 77 (term -> term SLASH factor .)
    GTE             reduce using rule 77 (term -> term SLASH factor .)
    LTE             reduce using rule 77 (term -> term SLASH factor .)
    THEN            reduce using rule 77 (term -> term SLASH factor .)


state 147

    (33) call -> CALL LP ID RP SEMICOLON .

    DEF             reduce using rule 33 (call -> CALL LP ID RP SEMICOLON .)
    CALL            reduce using rule 33 (call -> CALL LP ID RP SEMICOLON .)
    ALTER           reduce using rule 33 (call -> CALL LP ID RP SEMICOLON .)
    NOT             reduce using rule 33 (call -> CALL LP ID RP SEMICOLON .)
    PRINT           reduce using rule 33 (call -> CALL LP ID RP SEMICOLON .)
    WHILE           reduce using rule 33 (call -> CALL LP ID RP SEMICOLON .)
    UNTIL           reduce using rule 33 (call -> CALL LP ID RP SEMICOLON .)
    CASE            reduce using rule 33 (call -> CALL LP ID RP SEMICOLON .)
    MOVER           reduce using rule 33 (call -> CALL LP ID RP SEMICOLON .)
    ALEATORIO       reduce using rule 33 (call -> CALL LP ID RP SEMICOLON .)
    ISTRUE          reduce using rule 33 (call -> CALL LP ID RP SEMICOLON .)
    REPEAT          reduce using rule 33 (call -> CALL LP ID RP SEMICOLON .)
    ID              reduce using rule 33 (call -> CALL LP ID RP SEMICOLON .)
    COMMENT         reduce using rule 33 (call -> CALL LP ID RP SEMICOLON .)
    RP              reduce using rule 33 (call -> CALL LP ID RP SEMICOLON .)
    BREAK           reduce using rule 33 (call -> CALL LP ID RP SEMICOLON .)


state 148

    (35) alter -> ALTER LP ID COMMA ID . RP SEMICOLON

    RP              shift and go to state 167


state 149

    (34) alter -> ALTER LP ID COMMA INTEGER . RP SEMICOLON

    RP              shift and go to state 168


state 150

    (38) print -> PRINT LP prints RP SEMICOLON .

    DEF             reduce using rule 38 (print -> PRINT LP prints RP SEMICOLON .)
    CALL            reduce using rule 38 (print -> PRINT LP prints RP SEMICOLON .)
    ALTER           reduce using rule 38 (print -> PRINT LP prints RP SEMICOLON .)
    NOT             reduce using rule 38 (print -> PRINT LP prints RP SEMICOLON .)
    PRINT           reduce using rule 38 (print -> PRINT LP prints RP SEMICOLON .)
    WHILE           reduce using rule 38 (print -> PRINT LP prints RP SEMICOLON .)
    UNTIL           reduce using rule 38 (print -> PRINT LP prints RP SEMICOLON .)
    CASE            reduce using rule 38 (print -> PRINT LP prints RP SEMICOLON .)
    MOVER           reduce using rule 38 (print -> PRINT LP prints RP SEMICOLON .)
    ALEATORIO       reduce using rule 38 (print -> PRINT LP prints RP SEMICOLON .)
    ISTRUE          reduce using rule 38 (print -> PRINT LP prints RP SEMICOLON .)
    REPEAT          reduce using rule 38 (print -> PRINT LP prints RP SEMICOLON .)
    ID              reduce using rule 38 (print -> PRINT LP prints RP SEMICOLON .)
    COMMENT         reduce using rule 38 (print -> PRINT LP prints RP SEMICOLON .)
    RP              reduce using rule 38 (print -> PRINT LP prints RP SEMICOLON .)
    BREAK           reduce using rule 38 (print -> PRINT LP prints RP SEMICOLON .)


state 151

    (43) iterative -> WHILE LP condicion RP LP . instrucciones RP SEMICOLON
    (15) instrucciones -> . instruccion instrucciones
    (16) instrucciones -> . instruccion
    (17) instruccion -> . def
    (18) instruccion -> . call
    (19) instruccion -> . alter
    (20) instruccion -> . not
    (21) instruccion -> . print
    (22) instruccion -> . iterative
    (23) instruccion -> . case
    (24) instruccion -> . mover
    (25) instruccion -> . aleatorio
    (26) instruccion -> . istrue
    (27) instruccion -> . repeat
    (28) instruccion -> . change
    (29) instruccion -> . comment
    (31) def -> . DEF LP ID COMMA TYPE COMMA value RP SEMICOLON
    (32) def -> . DEF LP ID COMMA TYPE RP SEMICOLON
    (33) call -> . CALL LP ID RP SEMICOLON
    (34) alter -> . ALTER LP ID COMMA INTEGER RP SEMICOLON
    (35) alter -> . ALTER LP ID COMMA ID RP SEMICOLON
    (36) not -> . NOT LP ID RP
    (38) print -> . PRINT LP prints RP SEMICOLON
    (43) iterative -> . WHILE LP condicion RP LP instrucciones RP SEMICOLON
    (44) iterative -> . UNTIL LP instrucciones RP LP condicion RP SEMICOLON
    (45) case -> . CASE funciones SEMICOLON
    (46) case -> . CASE ID funciones SEMICOLON
    (47) mover -> . MOVER LP DIR RP SEMICOLON
    (48) aleatorio -> . ALEATORIO LP RP SEMICOLON
    (37) istrue -> . ISTRUE LP ID RP SEMICOLON
    (49) repeat -> . REPEAT LP instrucciones break RP SEMICOLON
    (72) change -> . ID LP value RP SEMICOLON
    (81) comment -> . COMMENT

    DEF             shift and go to state 36
    CALL            shift and go to state 38
    ALTER           shift and go to state 39
    NOT             shift and go to state 40
    PRINT           shift and go to state 41
    WHILE           shift and go to state 42
    UNTIL           shift and go to state 43
    CASE            shift and go to state 44
    MOVER           shift and go to state 45
    ALEATORIO       shift and go to state 46
    ISTRUE          shift and go to state 47
    REPEAT          shift and go to state 48
    ID              shift and go to state 37
    COMMENT         shift and go to state 3

    instrucciones                  shift and go to state 169
    instruccion                    shift and go to state 22
    def                            shift and go to state 23
    call                           shift and go to state 24
    alter                          shift and go to state 25
    not                            shift and go to state 26
    print                          shift and go to state 27
    iterative                      shift and go to state 28
    case                           shift and go to state 29
    mover                          shift and go to state 30
    aleatorio                      shift and go to state 31
    istrue                         shift and go to state 32
    repeat                         shift and go to state 33
    change                         shift and go to state 34
    comment                        shift and go to state 35

state 152

    (63) condicion -> oper GT oper .

    RP              reduce using rule 63 (condicion -> oper GT oper .)


state 153

    (64) condicion -> oper LT oper .

    RP              reduce using rule 64 (condicion -> oper LT oper .)


state 154

    (65) condicion -> oper EQUAL oper .

    RP              reduce using rule 65 (condicion -> oper EQUAL oper .)


state 155

    (66) condicion -> oper DIF oper .

    RP              reduce using rule 66 (condicion -> oper DIF oper .)


state 156

    (67) condicion -> oper GTE oper .

    RP              reduce using rule 67 (condicion -> oper GTE oper .)


state 157

    (68) condicion -> oper LTE oper .

    RP              reduce using rule 68 (condicion -> oper LTE oper .)


state 158

    (44) iterative -> UNTIL LP instrucciones RP LP . condicion RP SEMICOLON
    (63) condicion -> . oper GT oper
    (64) condicion -> . oper LT oper
    (65) condicion -> . oper EQUAL oper
    (66) condicion -> . oper DIF oper
    (67) condicion -> . oper GTE oper
    (68) condicion -> . oper LTE oper
    (69) condicion -> . istrue
    (70) oper -> . value
    (71) oper -> . expression
    (37) istrue -> . ISTRUE LP ID RP SEMICOLON
    (50) value -> . INTEGER
    (51) value -> . BOOL
    (52) value -> . expression
    (53) value -> . ID
    (54) value -> . not
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . term
    (36) not -> . NOT LP ID RP
    (76) term -> . term STAR factor
    (77) term -> . term SLASH factor
    (78) term -> . factor
    (79) factor -> . INTEGER
    (80) factor -> . LP expression RP

    ISTRUE          shift and go to state 47
    INTEGER         shift and go to state 76
    BOOL            shift and go to state 77
    ID              shift and go to state 73
    NOT             shift and go to state 40
    LP              shift and go to state 74

    condicion                      shift and go to state 170
    oper                           shift and go to state 90
    istrue                         shift and go to state 91
    value                          shift and go to state 92
    expression                     shift and go to state 93
    not                            shift and go to state 79
    term                           shift and go to state 80
    factor                         shift and go to state 81

state 159

    (62) else -> ELSE LP . instrucciones RP
    (15) instrucciones -> . instruccion instrucciones
    (16) instrucciones -> . instruccion
    (17) instruccion -> . def
    (18) instruccion -> . call
    (19) instruccion -> . alter
    (20) instruccion -> . not
    (21) instruccion -> . print
    (22) instruccion -> . iterative
    (23) instruccion -> . case
    (24) instruccion -> . mover
    (25) instruccion -> . aleatorio
    (26) instruccion -> . istrue
    (27) instruccion -> . repeat
    (28) instruccion -> . change
    (29) instruccion -> . comment
    (31) def -> . DEF LP ID COMMA TYPE COMMA value RP SEMICOLON
    (32) def -> . DEF LP ID COMMA TYPE RP SEMICOLON
    (33) call -> . CALL LP ID RP SEMICOLON
    (34) alter -> . ALTER LP ID COMMA INTEGER RP SEMICOLON
    (35) alter -> . ALTER LP ID COMMA ID RP SEMICOLON
    (36) not -> . NOT LP ID RP
    (38) print -> . PRINT LP prints RP SEMICOLON
    (43) iterative -> . WHILE LP condicion RP LP instrucciones RP SEMICOLON
    (44) iterative -> . UNTIL LP instrucciones RP LP condicion RP SEMICOLON
    (45) case -> . CASE funciones SEMICOLON
    (46) case -> . CASE ID funciones SEMICOLON
    (47) mover -> . MOVER LP DIR RP SEMICOLON
    (48) aleatorio -> . ALEATORIO LP RP SEMICOLON
    (37) istrue -> . ISTRUE LP ID RP SEMICOLON
    (49) repeat -> . REPEAT LP instrucciones break RP SEMICOLON
    (72) change -> . ID LP value RP SEMICOLON
    (81) comment -> . COMMENT

    DEF             shift and go to state 36
    CALL            shift and go to state 38
    ALTER           shift and go to state 39
    NOT             shift and go to state 40
    PRINT           shift and go to state 41
    WHILE           shift and go to state 42
    UNTIL           shift and go to state 43
    CASE            shift and go to state 44
    MOVER           shift and go to state 45
    ALEATORIO       shift and go to state 46
    ISTRUE          shift and go to state 47
    REPEAT          shift and go to state 48
    ID              shift and go to state 37
    COMMENT         shift and go to state 3

    instrucciones                  shift and go to state 171
    instruccion                    shift and go to state 22
    def                            shift and go to state 23
    call                           shift and go to state 24
    alter                          shift and go to state 25
    not                            shift and go to state 26
    print                          shift and go to state 27
    iterative                      shift and go to state 28
    case                           shift and go to state 29
    mover                          shift and go to state 30
    aleatorio                      shift and go to state 31
    istrue                         shift and go to state 32
    repeat                         shift and go to state 33
    change                         shift and go to state 34
    comment                        shift and go to state 35

state 160

    (61) then -> THEN LP instrucciones . RP

    RP              shift and go to state 172


state 161

    (59) when -> WHEN LP condicion RP .

    THEN            reduce using rule 59 (when -> WHEN LP condicion RP .)


state 162

    (47) mover -> MOVER LP DIR RP SEMICOLON .

    DEF             reduce using rule 47 (mover -> MOVER LP DIR RP SEMICOLON .)
    CALL            reduce using rule 47 (mover -> MOVER LP DIR RP SEMICOLON .)
    ALTER           reduce using rule 47 (mover -> MOVER LP DIR RP SEMICOLON .)
    NOT             reduce using rule 47 (mover -> MOVER LP DIR RP SEMICOLON .)
    PRINT           reduce using rule 47 (mover -> MOVER LP DIR RP SEMICOLON .)
    WHILE           reduce using rule 47 (mover -> MOVER LP DIR RP SEMICOLON .)
    UNTIL           reduce using rule 47 (mover -> MOVER LP DIR RP SEMICOLON .)
    CASE            reduce using rule 47 (mover -> MOVER LP DIR RP SEMICOLON .)
    MOVER           reduce using rule 47 (mover -> MOVER LP DIR RP SEMICOLON .)
    ALEATORIO       reduce using rule 47 (mover -> MOVER LP DIR RP SEMICOLON .)
    ISTRUE          reduce using rule 47 (mover -> MOVER LP DIR RP SEMICOLON .)
    REPEAT          reduce using rule 47 (mover -> MOVER LP DIR RP SEMICOLON .)
    ID              reduce using rule 47 (mover -> MOVER LP DIR RP SEMICOLON .)
    COMMENT         reduce using rule 47 (mover -> MOVER LP DIR RP SEMICOLON .)
    RP              reduce using rule 47 (mover -> MOVER LP DIR RP SEMICOLON .)
    BREAK           reduce using rule 47 (mover -> MOVER LP DIR RP SEMICOLON .)


state 163

    (37) istrue -> ISTRUE LP ID RP SEMICOLON .

    DEF             reduce using rule 37 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    CALL            reduce using rule 37 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    ALTER           reduce using rule 37 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    NOT             reduce using rule 37 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    PRINT           reduce using rule 37 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    WHILE           reduce using rule 37 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    UNTIL           reduce using rule 37 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    CASE            reduce using rule 37 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    MOVER           reduce using rule 37 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    ALEATORIO       reduce using rule 37 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    ISTRUE          reduce using rule 37 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    REPEAT          reduce using rule 37 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    ID              reduce using rule 37 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    COMMENT         reduce using rule 37 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    RP              reduce using rule 37 (istrue -> ISTRUE LP ID RP SEMICOLON .)
    BREAK           reduce using rule 37 (istrue -> ISTRUE LP ID RP SEMICOLON .)


state 164

    (49) repeat -> REPEAT LP instrucciones break RP . SEMICOLON

    SEMICOLON       shift and go to state 173


state 165

    (31) def -> DEF LP ID COMMA TYPE COMMA . value RP SEMICOLON
    (50) value -> . INTEGER
    (51) value -> . BOOL
    (52) value -> . expression
    (53) value -> . ID
    (54) value -> . not
    (73) expression -> . expression PLUS term
    (74) expression -> . expression MINUS term
    (75) expression -> . term
    (36) not -> . NOT LP ID RP
    (76) term -> . term STAR factor
    (77) term -> . term SLASH factor
    (78) term -> . factor
    (79) factor -> . INTEGER
    (80) factor -> . LP expression RP

    INTEGER         shift and go to state 76
    BOOL            shift and go to state 77
    ID              shift and go to state 73
    NOT             shift and go to state 40
    LP              shift and go to state 74

    value                          shift and go to state 174
    expression                     shift and go to state 78
    not                            shift and go to state 79
    term                           shift and go to state 80
    factor                         shift and go to state 81

state 166

    (32) def -> DEF LP ID COMMA TYPE RP . SEMICOLON

    SEMICOLON       shift and go to state 175


state 167

    (35) alter -> ALTER LP ID COMMA ID RP . SEMICOLON

    SEMICOLON       shift and go to state 176


state 168

    (34) alter -> ALTER LP ID COMMA INTEGER RP . SEMICOLON

    SEMICOLON       shift and go to state 177


state 169

    (43) iterative -> WHILE LP condicion RP LP instrucciones . RP SEMICOLON

    RP              shift and go to state 178


state 170

    (44) iterative -> UNTIL LP instrucciones RP LP condicion . RP SEMICOLON

    RP              shift and go to state 179


state 171

    (62) else -> ELSE LP instrucciones . RP

    RP              shift and go to state 180


state 172

    (61) then -> THEN LP instrucciones RP .

    ELSE            reduce using rule 61 (then -> THEN LP instrucciones RP .)
    SEMICOLON       reduce using rule 61 (then -> THEN LP instrucciones RP .)
    WHEN            reduce using rule 61 (then -> THEN LP instrucciones RP .)


state 173

    (49) repeat -> REPEAT LP instrucciones break RP SEMICOLON .

    DEF             reduce using rule 49 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    CALL            reduce using rule 49 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    ALTER           reduce using rule 49 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    NOT             reduce using rule 49 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    PRINT           reduce using rule 49 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    WHILE           reduce using rule 49 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    UNTIL           reduce using rule 49 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    CASE            reduce using rule 49 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    MOVER           reduce using rule 49 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    ALEATORIO       reduce using rule 49 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    ISTRUE          reduce using rule 49 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    REPEAT          reduce using rule 49 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    ID              reduce using rule 49 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    COMMENT         reduce using rule 49 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    RP              reduce using rule 49 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)
    BREAK           reduce using rule 49 (repeat -> REPEAT LP instrucciones break RP SEMICOLON .)


state 174

    (31) def -> DEF LP ID COMMA TYPE COMMA value . RP SEMICOLON

    RP              shift and go to state 181


state 175

    (32) def -> DEF LP ID COMMA TYPE RP SEMICOLON .

    DEF             reduce using rule 32 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    CALL            reduce using rule 32 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    ALTER           reduce using rule 32 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    NOT             reduce using rule 32 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    PRINT           reduce using rule 32 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    WHILE           reduce using rule 32 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    UNTIL           reduce using rule 32 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    CASE            reduce using rule 32 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    MOVER           reduce using rule 32 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    ALEATORIO       reduce using rule 32 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    ISTRUE          reduce using rule 32 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    REPEAT          reduce using rule 32 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    ID              reduce using rule 32 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    COMMENT         reduce using rule 32 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    RP              reduce using rule 32 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)
    BREAK           reduce using rule 32 (def -> DEF LP ID COMMA TYPE RP SEMICOLON .)


state 176

    (35) alter -> ALTER LP ID COMMA ID RP SEMICOLON .

    DEF             reduce using rule 35 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    CALL            reduce using rule 35 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    ALTER           reduce using rule 35 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    NOT             reduce using rule 35 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    PRINT           reduce using rule 35 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    WHILE           reduce using rule 35 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    UNTIL           reduce using rule 35 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    CASE            reduce using rule 35 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    MOVER           reduce using rule 35 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    ALEATORIO       reduce using rule 35 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    ISTRUE          reduce using rule 35 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    REPEAT          reduce using rule 35 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    ID              reduce using rule 35 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    COMMENT         reduce using rule 35 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    RP              reduce using rule 35 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)
    BREAK           reduce using rule 35 (alter -> ALTER LP ID COMMA ID RP SEMICOLON .)


state 177

    (34) alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .

    DEF             reduce using rule 34 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    CALL            reduce using rule 34 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    ALTER           reduce using rule 34 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    NOT             reduce using rule 34 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    PRINT           reduce using rule 34 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    WHILE           reduce using rule 34 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    UNTIL           reduce using rule 34 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    CASE            reduce using rule 34 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    MOVER           reduce using rule 34 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    ALEATORIO       reduce using rule 34 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    ISTRUE          reduce using rule 34 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    REPEAT          reduce using rule 34 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    ID              reduce using rule 34 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    COMMENT         reduce using rule 34 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    RP              reduce using rule 34 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)
    BREAK           reduce using rule 34 (alter -> ALTER LP ID COMMA INTEGER RP SEMICOLON .)


state 178

    (43) iterative -> WHILE LP condicion RP LP instrucciones RP . SEMICOLON

    SEMICOLON       shift and go to state 182


state 179

    (44) iterative -> UNTIL LP instrucciones RP LP condicion RP . SEMICOLON

    SEMICOLON       shift and go to state 183


state 180

    (62) else -> ELSE LP instrucciones RP .

    SEMICOLON       reduce using rule 62 (else -> ELSE LP instrucciones RP .)
    WHEN            reduce using rule 62 (else -> ELSE LP instrucciones RP .)


state 181

    (31) def -> DEF LP ID COMMA TYPE COMMA value RP . SEMICOLON

    SEMICOLON       shift and go to state 184


state 182

    (43) iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .

    DEF             reduce using rule 43 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    CALL            reduce using rule 43 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    ALTER           reduce using rule 43 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    NOT             reduce using rule 43 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    PRINT           reduce using rule 43 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    WHILE           reduce using rule 43 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    UNTIL           reduce using rule 43 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    CASE            reduce using rule 43 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    MOVER           reduce using rule 43 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    ALEATORIO       reduce using rule 43 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    ISTRUE          reduce using rule 43 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    REPEAT          reduce using rule 43 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    ID              reduce using rule 43 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    COMMENT         reduce using rule 43 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    RP              reduce using rule 43 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)
    BREAK           reduce using rule 43 (iterative -> WHILE LP condicion RP LP instrucciones RP SEMICOLON .)


state 183

    (44) iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .

    DEF             reduce using rule 44 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    CALL            reduce using rule 44 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    ALTER           reduce using rule 44 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    NOT             reduce using rule 44 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    PRINT           reduce using rule 44 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    WHILE           reduce using rule 44 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    UNTIL           reduce using rule 44 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    CASE            reduce using rule 44 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    MOVER           reduce using rule 44 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    ALEATORIO       reduce using rule 44 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    ISTRUE          reduce using rule 44 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    REPEAT          reduce using rule 44 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    ID              reduce using rule 44 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    COMMENT         reduce using rule 44 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    RP              reduce using rule 44 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)
    BREAK           reduce using rule 44 (iterative -> UNTIL LP instrucciones RP LP condicion RP SEMICOLON .)


state 184

    (31) def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .

    DEF             reduce using rule 31 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    CALL            reduce using rule 31 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    ALTER           reduce using rule 31 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    NOT             reduce using rule 31 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    PRINT           reduce using rule 31 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    WHILE           reduce using rule 31 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    UNTIL           reduce using rule 31 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    CASE            reduce using rule 31 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    MOVER           reduce using rule 31 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    ALEATORIO       reduce using rule 31 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    ISTRUE          reduce using rule 31 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    REPEAT          reduce using rule 31 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    ID              reduce using rule 31 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    COMMENT         reduce using rule 31 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    RP              reduce using rule 31 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)
    BREAK           reduce using rule 31 (def -> DEF LP ID COMMA TYPE COMMA value RP SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMENT in state 12 resolved as shift
WARNING: reduce/reduce conflict in state 76 resolved using rule (value -> INTEGER)
WARNING: rejected rule (factor -> INTEGER) in state 76
WARNING: reduce/reduce conflict in state 93 resolved using rule (value -> expression)
WARNING: rejected rule (oper -> expression) in state 93
WARNING: reduce/reduce conflict in state 133 resolved using rule (value -> expression)
WARNING: rejected rule (oper -> expression) in state 133
WARNING: Rule (oper -> expression) is never reduced
